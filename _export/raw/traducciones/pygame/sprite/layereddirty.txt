====== LayeredDirty ======

/*
LayeredDirty Group is for DirtySprites.  Subclasses LayeredUpdates.
*/

El grupo LayeredDirty está diseñado para objetos DirtySprite, y es
subclase de LayeredUpdates.

<box 90%>
  * [[:traducciones:pygame:sprite:#LayeredDirty]]
  * [[:traducciones:pygame:sprite:#draw]]
  * [[:traducciones:pygame:sprite:#clear]]
  * [[:traducciones:pygame:sprite:#repaint_rect]]
  * [[:traducciones:pygame:sprite:#set_clip]]
  * [[:traducciones:pygame:sprite:#get_clip]]
  * [[:traducciones:pygame:sprite:#change_layer]]
  * [[:traducciones:pygame:sprite:#set_timing_treshold]]
</box>

===== LayeredDirty =====


<code python>
pygame.sprite.LayeredDirty(*spites, * *kwargs): return LayeredDirty
</code>


/*
This group requires pygame.sprite.DirtySprite or any sprite that 
has the following attributes: 
*/

Este grupo requiere objetos ''pygame.sprite.DirtySprite'' o cualquier
tipo de sprite que tenga los siguientes atributos.

/*
  * image
  * rect
  * dirty
  * visible
  * blendmode (see doc of DirtySprite).
*/

  * image
  * rect
  * dirty
  * visible
  * blendmode (vea la documentación de ''DirtySprite'').

/*
It uses the dirty flag technique and is therefore faster than the 
pygame.sprite.RenderUpdates if you have many static sprites.  It 
also switches automatically between dirty rect update and full 
screen drawing, so you do no have to worry what would be faster.
*/

Este grupo utiliza una técnica de marcas ''dirty'', por lo tanto
es mas rápido que los grupos ''pygame.sprite.RenderUpdates'' si
usted tiene varios sprites estáticos. Además cambia automáticamente
entre dos modalidades de actualización: pantalla completa o actualización
''dirty rectangles'', por lo tanto no tendrá que preocuparse de que
tendría que ser mas rápido.

/*
Same as for the pygame.sprite.Group.
You can specify some additional attributes through kwargs:
*/

Al igual que en ''pygame.sprite.Group'', puede especificar algunos
atributos adicionales a través de parámetros.

/*
  * _use_update: True/False   default is False
  * _default_layer: default layer where sprites without a layer are added.
  * _time_threshold: treshold time for switching between dirty rect mode and fullscreen mode, defaults to 1000./80  == 1000./fps
*/

  * _use_update: Puede valer True o False, por defecto vale False.
  * _default_layer: layer o capa por defecto en donde se insertarán los sprites que no tienen layer.
  * _time_threshold: tiempo de tolerancia para alternar entre el modo de actualización de pantalla completa y ''dirty rectangles'', por defecto vale 1000./80 == 1000/fps.

/*
New in pygame 1.8.0
*/

Esta funcionalidad es nueva en pygame 1.8.0



===== draw =====

/*
draw all sprites in the right order onto the passed surface.
*/

Dibuja todos los sprites en el orden correcto sobre la superficie indicada.

<code python>
LayeredDirty.draw(surface, bgd=None): return Rect_list
</code>


/*
You can pass the background too. If a background is already set, 
then the bgd argument has no effect.
*/

También puede especificar un fondo de pantalla. Si el fondo de pantalla
ya está definido entonces el argumento ''bgd'' no tendrá efecto.



===== clear =====

/*
used to set background
*/

Se usa para definir un fondo de pantalla.

<code python>
LayeredDirty.clear(surface, bgd): return None
</code>


===== repaint_rect =====

/*
repaints the given area
*/

Dibuja nuevamente el área indicada.

<code python>
LayeredDirty.repaint_rect(screen_rect): return None
</code>


/*
screen_rect is in screencoordinates.
*/

El argumento ''screen_rect'' está en coordenadas de pantalla.



===== set_clip =====

/*
clip the area where to draw. Just pass None (default) to reset the clip
*/

Define el área donde se puede dibujar. Para descartar este recorte
solo indique ''None'' como argumento.

<code python>
LayeredDirty.set_clip(screen_rect=None): return None
</code>




===== get_clip =====

/*
clip the area where to draw. Just pass None (default) to reset the clip
*/

/*
M... adopto traducirlo libremente porque creo que está mal.
*/

Obtiene el área donde se dibujará, conocida como área de recorte.

<code python>
LayeredDirty.get_clip(): return Rect
</code>




===== change_layer =====

/*
changes the layer of the sprite
*/

Cambia la capa o layer de un sprite.

<code python>
change_layer(sprite, new_layer): return None
</code>


/*
sprite must have been added to the renderer. It is not checked.
*/

El sprite tendría que haber sido insertado para dibujarse. Esta
tarea no se verifica.



===== set_timing_treshold =====

/*
sets the treshold in milliseconds
*/

Define la tolerancia en milisegundos.

<code python>
set_timing_treshold(time_ms): return None
</code>


/*
Default is 1000./80 where 80 is the fps I want to switch to full screen mode.
*/

Por defecto esto vale 1000./80, donde 80 es la cantidad de cuadros
por segundo (fps) que se quiere para cambiar a modo de actualización por
pantalla completa.



