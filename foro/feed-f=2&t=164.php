<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=164" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2007-09-26T15:21:39+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=164</id>
<entry>
<author><name><![CDATA[julen26]]></name></author>
<updated>2007-09-26T15:21:39+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=164&amp;p=559#p559</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=164&amp;p=559#p559"/>
<title type="html"><![CDATA[[Apuntes C++] Estructuras]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=164&amp;p=559#p559"><![CDATA[
Buenas, ahora traigo algo parecido con las estructuras, pero vuelvo a decir que es muy basico. Para poder entender como funcionan y para que podrían servir, siempre orientado a los juegos claro. <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br />Las estructuras son un conjunto de variables. Para ir practicando crearemos una simple estructura, un disparo. Para declarar la estructura utilizaremos la palabra struct y a continuación el nombre de la estructura. Luego se utilizan las llaves para escribir dentro el contenido de esta, y al final punto y coma porque es como si estuviéramos declarando una función.<br />Quedaría así:<br /><dl class="codebox"><dt>Code: </dt><dd><code>struct Disparo<br />&#123;<br />   //Contenido de la estructura<br />&#125; ;</code></dd></dl><br /><br />Bien, ahora vamos a pensar en las variables que debería tener un disparo. Primero necesitaremos dos variables que indiquen la posición, efectivamente, x e y. Las variables que contendrá la estructura se declaran dentro de la misma:<br /><dl class="codebox"><dt>Code: </dt><dd><code>struct Disparo<br />&#123;<br />   //Contenido de la estructura<br />   <br />   //Posición del disparo<br />   int x, y ;<br />&#125; ;</code></dd></dl><br /><br />Bien, ahora necesitaremos más datos para la estructura. Añadiremos la velocidad, pero esta vez será de tipo float para que pueda tener una velocidad también con números decimales. Podríamos utilizar el double para mucha más precisión, pero con un float ya vale. Además con double se trabaja más lento, no mucho pero es mas lento. Así que vamos a añadir la velocidad:<br /><dl class="codebox"><dt>Code: </dt><dd><code>struct Disparo<br />&#123;<br />   //Contenido de la estructura<br />   <br />   //Posición del disparo<br />   int x, y ;<br />   //Velocidad del disparo<br />   float velocidad ;<br />&#125; ;</code></dd></dl><br /><br />(Nota: es recomendable nombrar las estructuras y clases con un nombre que comience con mayúsculas)<br /><br />Continuando, podemos decir que falta un dato fundamental en nuestra estructura; la dirección. Nosotros hemos decidido hacerlo de manera polar. Si lo hubiésemos hecho de manera rectangular hubiese quedado:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>float hSpeed, vSpeed;</code></dd></dl><br /><br />en lugar de esta manera que es la que nos corresponde:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>float direccion, velocidad;</code></dd></dl><br /><br />Y con esto ya tendríamos nuestra estructura básica.<br />Ahora para utilizarlo deberíamos declarar variables usando el nombre de la estructura, por ejemplo:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>Disparo bala;</code></dd></dl><br /><br />Quedaría declarada, y para acceder a sus miembros no tenemos más que utilizar el operador correspondiente, el punto (.). Un ejemplo:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>int main&#40;&#41;<br />&#123;<br />   // Declarar una variable de la estructura Disparo<br />   Disparo bala ;<br />           <br />   // Iniciar los datos de la variable bala<br />   bala.x = 0 ;<br />   bala.y = 0 ;<br />   bala.direccion = 270 ;<br />   bala.velocidad = 5 ;<br />           <br />   return 0 ;<br />&#125;</code></dd></dl><br /><br />Podemos cambiar los valores para poder apreciar el cambio, para ello podemos usar printf.<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>   // Posición de la bala:<br />   printf&#40;&quot;Posicion de la bala: &#40;%d,%d&#41;\n&quot;, bala.x, bala.y&#41;;</code></dd></dl><br /><br />Con esto nos podemos imaginar como es un juego, lleno de estructuras y clases. Las clases son más complejas que las estructuras. Las estructuras estaban desde el lenguaje C, mientras que las clases están desde el lenguaje C++. Es decir, que en un compilador de C no puedes usar clases. Por lo tanto se podría decir que las clases son una versión mejorada de las estructuras.<br /><br />Para finalizar con las estructuras veremos que son los constructores. Un constructor se declara dentro de la estructura con el nombre de la misma, de esta forma:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>struct Disparo<br />           &#123;<br />               // Contenido de la estructura<br />           <br />              // Posición del disparo<br />              int x, y ;<br />           <br />              // Vector de velocidad<br />              float velocidad, direccion ;<br />           <br />              // Constructor<br />              Disparo&#40;&#41;<br />              &#123;<br />                 // Aquí que debe hacer el constructor<br />              &#125;<br />           &#125; ;</code></dd></dl><br /><br />El constructor es como una función que se ejecuta cuando declaras una variable de esta estructura. Veamos esto:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>struct Disparo<br />           &#123;<br />               // Contenido de la estructura<br />           <br />              // Posición del disparo<br />              int x, y ;<br />           <br />              // Vector de velocidad<br />              float velocidad, direccion ;<br />           <br />              // Constructor<br />              Disparo&#40;&#41;<br />              &#123;<br />                 // Aquí que debe hacer el constructor<br />           <br />                 // Iniciar datos<br />                 x = 10 ;<br />                 y = 25 ;<br />           <br />                 velocidad = direccion = 0 ;<br />              &#125;<br />           &#125; ;<br /><br />int main&#40;&#41;<br />           &#123;<br />              // Declarar una variable de la estructura Disparo<br />              Disparo bala ;<br />           <br />              // Posición de la bala:<br />              printf&#40;&quot;Posicion de la bala: &#40;%d,%d&#41;\n&quot;, bala.x, bala.y&#41; ;<br />           <br />              return 0 ;<br />           &#125;</code></dd></dl><br /><br />Cuando lo ejecutemos podemos ver lo que se imprime en la pantalla. Los valores están dependiendo de cómo se iniciaron. <br /><br />Suponiendo que sabemos usar funciones. Como los constructores son como las funciones, estos también pueden contener argumentos, también denominados parámetros. Ejemplo:<br /><dl class="codebox"><dt>Code: </dt><dd><code>   // Constructor<br />              Disparo&#40;int aX, int aY, float aVelocidad, float<br />           aDireccion&#41;<br />              &#123;<br />                 // Aquí que debe hacer el constructor<br />           <br />                 // Iniciar datos<br />                 x = aX ;<br />                 y = aY ;<br />           <br />                 velocidad = aVelocidad ;<br />                 direccion = aDireccion ;<br />              &#125;</code></dd></dl><br /><br />Y ahora cuando declaremos una variable de la estructura la iniciaremos de esta manera:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>   // Declarar una instancia del objeto Disparo<br />              Disparo bala&#40;50, 45, 10, 270&#41; ;</code></dd></dl><br /><br />Y vemos que funciona correctamente. Pero ahora dejando todo como esta declaremos la variable como lo hemos hecho antes, sin usar ningún parámetro, así:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>   // Declarar una instancia del objeto Disparo<br />              Disparo bala ;</code></dd></dl><br /><br />Con esto podemos ver que el compilador nos da un error que dice que no encuentra el constructor por defecto al cual ejecutar. Y un constructor por defecto se le dice a un constructor sin parámetros. Por suerte tenemos la posibilidad de declarar varios constructores. Y el compilador verá automáticamente cual es el constructor apropiado, dependiendo de esa serie de parámetros.<br /><br />Si la cantidad de parámetros de dos constructores es la misma el compilador no te dejará realizar esa acción, a menos que el tipo de dato de los parámetros sea distinto. El compilador vera que tipo de variable es el parámetro que le estas proporcionando y verá con que constructor concuerda. <br /><br />Bueno, ahora prosigamos añadiendo un constructor por defecto a nuestra estructura:<br /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>      Disparo&#40;&#41;<br />              &#123;<br />                 // Aquí que debe hacer el constructor<br />           <br />                 // Iniciar datos<br />                 x = y = velocidad = direccion = 0  ;<br />              &#125;</code></dd></dl><br /><br />Lo ideal de hacer un constructor por defecto es iniciar todos sus valores en 0 o en un valor inicial general. Para finalizar ahora agregaremos otro constructor que requiera solamente dos parámetros, la posición (x,y), y que inicie sus otros datos en un valor inicial. Así:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>   Disparo&#40;int bX, int bY&#41;<br />              &#123;<br />                  x = bX ;<br />                  y = bY ;<br />                  <br />                  velocidad = 0;<br />                  direccion = 0;<br />              &#125;</code></dd></dl><br /><br />Con esto ya finalizamos son las estructuras. Más tarde vendrían las clases que son aún mas complejas.<br /><br />saludos<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1416">julen26</a> — Mié Sep 26, 2007 3:21 pm</p><hr />
]]></content>
</entry>
</feed>