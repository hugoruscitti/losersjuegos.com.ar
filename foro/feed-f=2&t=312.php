<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=312" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2008-05-17T21:41:55+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=312</id>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-05-17T21:41:55+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1404#p1404</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1404#p1404"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1404#p1404"><![CDATA[
Saludos, hoy pude subir el programa de ejemplo &quot;ojos&quot; de dvd<br />a la web:<br /><br /><!-- m --><a class="postlink" href="http://www.losersjuegos.com.ar/referencia/ejemplos/ejemplos.php">http://www.losersjuegos.com.ar/referenc ... emplos.php</a><!-- m --><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Sab May 17, 2008 9:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-05-16T20:22:16+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1400#p1400</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1400#p1400"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1400#p1400"><![CDATA[
Gracias, me alegro de que te guste y que lo modifiques. Al fin y al cabo, esa es una buena manera de aprender, mas que solo leyendo el código. Estoy deseando de verlo, ya avisarás...<br /><br />No me había dado cuenta de eso de la consola. Mas que nada porque solo la utilizo para hacer pequeñas pruebas, nunca había pegado un código tan extenso. Pero sí que es curioso, supongo que la consola tendrá ciertas limitaciones  <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_confused.gif" alt=":?" title="Confused" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Vie May 16, 2008 8:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dokan]]></name></author>
<updated>2008-05-14T12:50:50+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1387#p1387</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1387#p1387"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1387#p1387"><![CDATA[
Me ha gustado mucho este ejemplo de programación.<br />Las últimas modificaciones que ha hecho Hugo para evitar el warning provocaba que no me funcionase en consola (copia y pega en la consola de python), sin embargo si funciona si lo guardo en un archivo y lo ejecuto con «python ojos.py». Lo comento como curiosidad.<br /><br />He tenido una idea para reutilizar tu código, que quede un jueguecillo simple y así entretenerme y aprender. Cuando sea capaz de hacerlo funcionar os lo mostraré.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1853">Dokan</a> — Mié May 14, 2008 12:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-05-07T14:03:17+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1352#p1352</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1352#p1352"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1352#p1352"><![CDATA[
<blockquote><div><cite>hugoruscitti escribió:</cite><br />No hay ningún inconveniente al construir un ejemplo similar a<br />otro software. En el caso de tetris tampoco, solo hay una<br />restricción en utilizar el nombre, pero no hay problemas en hacer<br />un juego similar.<br /><br />Ah, y el concepto de los ojos que siguen al mouse es una idea<br />que tiene varios años. No sé quien lo ha inventado, pero hay<br />innumerables versiones.<br /></div></blockquote> Gracias, me quedo más tranquilo.<br /><br /><br />El ejemplo del que he hablado anteriormente (el de la artillería) ya lo he publicado en <a href="http://www.losersjuegos.com.ar/foro/viewtopic.php?t=317" class="postlink">este tema</a>.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mié May 07, 2008 2:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-05-04T00:03:14+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1319#p1319</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1319#p1319"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1319#p1319"><![CDATA[
<blockquote><div><cite>dvd escribió:</cite><br />Ok. Bueno otra cosa, digamos que &quot;misteriosamente&quot; (xD) el ejemplo se parece a <a href="http://www.google.com/ig/modules/eyes.xml" class="postlink">un gadget de google</a>, pero el código del ejemplo es totalmente independiente (no tengo ni idea de xml). Entonces no creo que haya problema, creo que fue en esta misma web donde leí un articulo que decía que los nombres si se pueden registrar pero una idea, no (puedes hace un tetris siempre y cuando no se llame tetris o un nombre parecido). Eso es lo que creo, si me equivoco corregirme.<br /></div></blockquote><br /><br />No hay ningún inconveniente al construir un ejemplo similar a<br />otro software. En el caso de tetris tampoco, solo hay una<br />restricción en utilizar el nombre, pero no hay problemas en hacer<br />un juego similar.<br /><br />Ah, y el concepto de los ojos que siguen al mouse es una idea<br />que tiene varios años. No sé quien lo ha inventado, pero hay<br />innumerables versiones.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Dom May 04, 2008 12:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-05-03T16:18:57+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1314#p1314</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1314#p1314"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1314#p1314"><![CDATA[
<blockquote><div><cite>hugoruscitti escribió:</cite><br />Con unos pocos cambios igual<br />se evita. Si me permiten una vesión modificada podría ser:<br /></div></blockquote> Gracias! Me gusta, no se me había ocurrido. Creo que los warnings no generaban ningún problema, pero no es agradable tenerlos.<br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Me gustaría publicar este, creo que es muy interesante. No hay<br />problema con que no sea un juego completo, al contrario, creo<br />que lo interesante de los ejemplos es que muestren solo una<br />&quot;parte&quot; de un juego.<br /><br />Y claro, si quieres se puede publicar el otro también, seguro va<br />a estar muy bueno.<br /></div></blockquote> Ok. Bueno otra cosa, digamos que &quot;misteriosamente&quot; (xD) el ejemplo se parece a <a href="http://www.google.com/ig/modules/eyes.xml" class="postlink">un gadget de google</a>, pero el código del ejemplo es totalmente independiente (no tengo ni idea de xml). Entonces no creo que haya problema, creo que fue en esta misma web donde leí un articulo que decía que los nombres si se pueden registrar pero una idea, no (puedes hace un tetris siempre y cuando no se llame tetris o un nombre parecido). Eso es lo que creo, si me equivoco corregirme.<br /><br />Saludos.<br /><br />Pd: Me he retrasado un poquito con el otro ejemplo porque he hecho las imágenes. Pero al final me han quedado con un resultado aceptable.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Sab May 03, 2008 4:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-05-02T23:29:59+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1309#p1309</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1309#p1309"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1309#p1309"><![CDATA[
<blockquote><div><cite>dvd escribió:</cite><br />Gracias por los comentarios.<br />Nato, esas advertencias salen porque se usan números de coma flotante, para que las divisiones sean las correctas (en python 5 / 2 = 2,  5.0 / 2 = 2.5)<br /></div></blockquote><br /><br />Si, también me pasó lo mismo. Con unos pocos cambios igual<br />se evita. Si me permiten una vesión modificada podría ser:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Licencia: GPL 3<br /><br />import pygame<br />from pygame import *<br />from math import *<br /><br />resolucion = &#40;500, 300&#41;<br />color = &#40;255, 240, 220&#41;<br /><br />class Ojo&#40;sprite.Sprite&#41;:<br /><br />    def __init__&#40;self, centro, rad_g, gros_g, color_g, color_i, rad_mov, rad_p, color_p&#41;:<br />        # El ojo se compone de dos partes:<br />        #   - Una circunferencia grande de centro &quot;centro&quot;, radio &quot;rad_g&quot;,<br />        #   grosor &quot;gros_g&quot;, color de borde &quot;color_g&quot; y color interior &quot;color_i<br />        #   &#40;negro = transparente&#41;.<br />        #   - Una circunferencia pequeña, sin centro fijo &#40;se desplaza en<br />        #   dirección al puntero del ratón a una distancia &quot;rad_mov&quot;&#40;como máximo&#41;<br />        #   desde &quot;centro&quot;&#41;, radio &quot;rad_p&quot;, rellena y de color &quot;color_p&quot;.<br />        sprite.Sprite.__init__&#40;self&#41;<br />       <br />        # Se crea la imagen de la circunferencia grande y se situa<br />        self.img_fondo = Surface&#40;&#40;rad_g * 2, rad_g * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_fondo, color_g, &#40;rad_g, rad_g&#41;, rad_g&#41;<br />        draw.circle&#40;self.img_fondo, color_i, &#40;rad_g, rad_g&#41;, rad_g - gros_g&#41;<br />        self.img_fondo.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        self.rect = self.img_fondo.get_rect&#40;&#41;<br />        self.rect.center = centro<br />       <br />        # Se crea la imagen de la circunferencia pequeña<br />        self.img_mirada = Surface&#40;&#40;rad_p * 2, rad_p * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_mirada, color_p, &#40;rad_p, rad_p&#41;, rad_p&#41;<br />        self.img_mirada.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />       <br />        self.centro = float&#40;centro&#91;0&#93;&#41;, float&#40;centro&#91;1&#93;&#41;<br />        self.rad_p = rad_p<br />        self.rad_g = rad_g<br />        self.rad_mov = rad_mov<br />       <br />    def update&#40;self, pos_rat&#41;:<br />        # Se hace una copia de la imagen de la circunferencia grande y se<br />        # imprime, sobre ella, la circunferencia pequeña con centro en la posición<br />        # que devuelve &quot;obt_pos_mir&quot;.<br />        self.pos_mirada = self.obt_pos_mir&#40;pos_rat&#41;<br />        self.image = self.img_fondo.copy&#40;&#41;<br />        self.image.blit&#40;self.img_mirada, &#40;self.pos_mirada&#91;0&#93; - self.rad_p, self.pos_mirada&#91;1&#93; - self.rad_p&#41;&#41;<br />       <br />    def obt_pos_mir&#40;self, pos_rat&#41;:<br />        # Se devuelve la posición en la que se tiene que situar el centro de la<br />        # circunferencia pequeña, en relación a la grande, dependiendo de la<br />        # posición del ratón.<br />        # Para ello, hace falta saber el ángulo exacto del centro a la posición<br />        # del ratón. Teniendo en cuenta que tan&#40;ángulo&#41; == tan&#40;ángulo + pi&#41;.<br />        if self.dis_pq&#40;pos_rat, self.centro&#41; &gt; self.rad_mov:<br />            if &#40;pos_rat&#91;0&#93; - self.centro&#91;0&#93;&#41; == 0:<br />                if pos_rat&#91;1&#93; &gt; self.centro&#91;1&#93;:<br />                    a = pi / 2<br />                else:<br />                    a = - pi / 2<br />            else:<br />                if pos_rat&#91;0&#93; &gt; self.centro&#91;0&#93;:<br />                    a = atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />                else:<br />                    a = pi + atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />            x = self.rad_g + cos&#40;a&#41; * self.rad_mov<br />            y = self.rad_g + sin&#40;a&#41; * self.rad_mov<br />            return x, y<br />        else:<br />            x = pos_rat&#91;0&#93; - self.centro&#91;0&#93; + self.rad_g<br />            y = pos_rat&#91;1&#93; - self.centro&#91;1&#93; + self.rad_g<br />            return x, y<br />           <br />    def dis_pq&#40;self, P, Q&#41;:<br />        # Se devuelve la distancia de un punto a otro<br />        Px, Py = P<br />        Qx, Qy = Q<br />       <br />        h = hypot&#40;Px - Qx, Py - Qy&#41;<br />        return h<br /><br />def main&#40;&#41;:<br />    # Se crea la pantalla con la resolución determinada<br />    screen = pygame.display.set_mode&#40;resolucion&#41;<br />    # Se crea el grupo ojos y se añaden dos<br />    ojos = pygame.sprite.Group&#40;&#41;<br />    ojos.add&#40;Ojo&#40;&#40;230, 155&#41;, 25, 4, &#40;100, 60, 100&#41;, &#40;255, 204, 255&#41;, 13, 7, &#40;120,140,60&#41;&#41;&#41;<br />    ojos.add&#40;Ojo&#40;&#40;300, 150&#41;, 35, 7, &#40;255, 100, 50&#41;, &#40;204, 255, 255&#41;, 11, 12, &#40;60,125,120&#41;&#41;&#41;<br />   <br />    while True:<br />        for event in pygame.event.get&#40;&#41;:<br />            if event.type == QUIT:<br />                # Finaliza el programa si hay un evento de cerrar<br />                return<br />        screen.fill&#40;color&#41;  # Se pinta la pantalla<br />        pos = mouse.get_pos&#40;&#41;  # Se obtiene la posición del ratón<br />        ojos.update&#40;pos&#41;  # Se actualizan los ojos dependiendo de &quot;pos&quot;<br />        ojos.draw&#40;screen&#41;  # Se dibujan los ojos<br />        display.update&#40;&#41;  # Se actualiza la pantalla<br /><br />if __name__ == '__main__':<br />    main&#40;&#41;</code></dd></dl><br /><br /><blockquote><div><cite>dvd escribió:</cite><br />Sin embargo, te comento que en breve (está casi acabado) voy a publicar otro ejemplo, basado en este, en el cual apuntan al ratón unas piezas de artillería. Ya que esta comunidad está orientada a videojuegos, creo que sería más interesante.<br /></div></blockquote><br /><br />Me gustaría publicar este, creo que es muy interesante. No hay<br />problema con que no sea un juego completo, al contrario, creo<br />que lo interesante de los ejemplos es que muestren solo una<br />&quot;parte&quot; de un juego.<br /><br />Y claro, si quieres se puede publicar el otro también, seguro va<br />a estar muy bueno.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Vie May 02, 2008 11:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-05-02T15:39:07+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1305#p1305</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1305#p1305"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1305#p1305"><![CDATA[
Gracias por los comentarios.<br />Nato, esas advertencias salen porque se usan números de coma flotante, para que las divisiones sean las correctas (en python 5 / 2 = 2,  5.0 / 2 = 2.5)<br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Parece un problema de pygame o SDL_gfx (la biblioteca que<br />usa pygame para dibujar primitivas)... armé un ejemplo muy<br />básico y falla de la misma manera que tu ejemplo.<br /></div></blockquote> Raro que tengan un error tan visible... Pero como no es muy difícil de evitar he mejorado el código anterior con una circunferencia mas pequeña que la grande, de la cual se puede elegir el color, así quedas mas configurable.<br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Licencia: GPL 3<br /><br />import pygame<br />from pygame import *<br />from math import *<br /><br />resolucion = &#40;500, 300&#41;<br />color = &#40;255, 240, 220&#41;<br /><br />class ojo &#40; sprite.Sprite&#41;:<br />    def __init__&#40;self, centro, rad_g, gros_g, color_g, color_i, rad_mov, rad_p, color_p&#41;:<br />        # El ojo se compone de dos partes:<br />        #   - Una circunferencia grande de centro &quot;centro&quot;, radio &quot;rad_g&quot;,<br />        #   grosor &quot;gros_g&quot;, color de borde &quot;color_g&quot; y color interior &quot;color_i<br />        #   &#40;negro = transparente&#41;.<br />        #   - Una circunferencia pequeña, sin centro fijo &#40;se desplaza en<br />        #   dirección al puntero del ratón a una distancia &quot;rad_mov&quot;&#40;como máximo&#41;<br />        #   desde &quot;centro&quot;&#41;, radio &quot;rad_p&quot;, rellena y de color &quot;color_p&quot;.<br />        sprite.Sprite.__init__&#40;self&#41;<br />        <br />        # Se crea la imagen de la circunferencia grande y se situa<br />        self.img_fondo = Surface&#40;&#40;rad_g * 2, rad_g * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_fondo, color_g, &#40;rad_g, rad_g&#41;, rad_g&#41;<br />        draw.circle&#40;self.img_fondo, color_i, &#40;rad_g, rad_g&#41;, rad_g - gros_g&#41;<br />        self.img_fondo.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        self.rect = self.img_fondo.get_rect&#40;&#41;<br />        self.rect.center = centro<br />        <br />        # Se crea la imagen de la circunferencia pequeña<br />        self.img_mirada = Surface&#40;&#40;rad_p * 2, rad_p * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_mirada, color_p, &#40;rad_p, rad_p&#41;, rad_p&#41;<br />        self.img_mirada.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        <br />        self.centro = centro<br />        self.rad_p = rad_p<br />        self.rad_g = rad_g<br />        self.rad_mov = rad_mov<br />        <br />    def update&#40;self, pos_rat&#41;:<br />        # Se hace una copia de la imagen de la circunferencia grande y se<br />        # imprime, sobre ella, la circunferencia pequeña con centro en la posición <br />        # que devuelve &quot;obt_pos_mir&quot;.<br />        self.pos_mirada = self.obt_pos_mir&#40;pos_rat&#41;<br />        self.image = self.img_fondo.copy&#40;&#41;<br />        self.image.blit&#40;self.img_mirada, &#40;self.pos_mirada&#91;0&#93; - self.rad_p, self.pos_mirada&#91;1&#93; - self.rad_p&#41;&#41;<br />        <br />    def obt_pos_mir&#40;self, pos_rat&#41;:<br />        # Se devuelve la posición en la que se tiene que situar el centro de la<br />        # circunferencia pequeña, en relación a la grande, dependiendo de la<br />        # posición del ratón.<br />        # Para ello, hace falta saber el ángulo exacto del centro a la posición<br />        # del ratón. Teniendo en cuenta que tan&#40;ángulo&#41; == tan&#40;ángulo + pi&#41;.<br />        if self.dis_pq&#40;pos_rat, self.centro&#41; &gt; self.rad_mov:<br />            if &#40;pos_rat&#91;0&#93; - self.centro&#91;0&#93;&#41; == 0:<br />                if pos_rat&#91;1&#93; &gt; self.centro&#91;1&#93;:<br />                    a = pi / 2<br />                else:<br />                    a = - pi / 2<br />            else:<br />                if pos_rat&#91;0&#93; &gt; self.centro&#91;0&#93;:<br />                    a = atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />                else:<br />                    a = pi + atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />            x = self.rad_g + cos&#40;a&#41; * self.rad_mov<br />            y = self.rad_g + sin&#40;a&#41; * self.rad_mov<br />            return x, y<br />        else:<br />            x = pos_rat&#91;0&#93; - self.centro&#91;0&#93; + self.rad_g<br />            y = pos_rat&#91;1&#93; - self.centro&#91;1&#93; + self.rad_g<br />            return x, y<br />            <br />    def dis_pq&#40;self, P, Q&#41;:<br />        # Se devuelve la distancia de un punto a otro<br />        Px, Py = P<br />        Qx, Qy = Q<br />        <br />        h = hypot&#40;Px - Qx, Py - Qy&#41;<br />        return h<br /><br />def main&#40;&#41;:<br />    # Se crea la pantalla con la resolución determinada<br />    screen = pygame.display.set_mode&#40;resolucion&#41;<br />    # Se crea el grupo ojos y se añaden dos<br />    ojos = pygame.sprite.Group&#40;&#41;<br />    ojos.add&#40;ojo&#40;&#40;230.0,155.0&#41;, 25.0, 4.0, &#40;100, 60, 100&#41;, &#40;255, 204, 255&#41;, 13.0, 7.0, &#40;120,140,60&#41;&#41;&#41;<br />    ojos.add&#40;ojo&#40;&#40;300.0,150.0&#41;, 35.0, 7.0, &#40;255, 100, 50&#41;, &#40;204, 255, 255&#41;, 11.0, 12.0, &#40;60,125,120&#41;&#41;&#41;<br />    <br />    while True:<br />        for event in pygame.event.get&#40;&#41;:<br />            if event.type == QUIT:<br />                # Finaliza el programa si hay un evento de cerrar<br />                return<br />        screen.fill&#40;color&#41;  # Se pinta la pantalla<br />        pos = mouse.get_pos&#40;&#41;  # Se obtiene la posición del ratón<br />        ojos.update&#40;pos&#41;  # Se actualizan los ojos dependiendo de &quot;pos&quot;<br />        ojos.draw&#40;screen&#41;  # Se dibujan los ojos<br />        display.update&#40;&#41;  # Se actualiza la pantalla<br /><br />if __name__ == '__main__':<br />    main&#40;&#41;</code></dd></dl><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Por cierto, me gusta mucho tu programa de ejemplo, ¿que<br />gustaría publicarlo en la sección de ejemplos de la web?.<br /></div></blockquote> Por supuesto, siempre es un honor (es como a un general que le dan una medalla <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> ). Sin embargo, te comento que en breve (está casi acabado) voy a publicar otro ejemplo, basado en este, en el cual apuntan al ratón unas piezas de artillería. Ya que esta comunidad está orientada a videojuegos, creo que sería más interesante. De todos modos, la decisión depende de ti, te doy derecho a publicar lo que quieras mio, aunque la licencia de por sí, ya te autoriza (si no me equivoco). Pero está bien que avises, por ejemplo, por lo que ha pasado ahora.<br /><br />Saludos.<br /><br />Pd: he corregido algunas faltas, de los comentarios. Pongo como excusa que era bastante tarde y voy con falta de sueño por los exámenes finales, por esta razón, también se ha retrasado el otro ejemplo.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Vie May 02, 2008 3:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-05-01T15:58:26+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1294#p1294</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1294#p1294"/>
<title type="html"><![CDATA[Re: ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1294#p1294"><![CDATA[
<blockquote><div><cite>dvd escribió:</cite><br />Yo tengo una duda y es que las circunferencias me salen con píxeles transparente. ¿Es problema de Pygame?¿Mio?<br /></div></blockquote><br /><br />Parece un problema de pygame o SDL_gfx (la biblioteca que<br />usa pygame para dibujar primitivas)... armé un ejemplo muy<br />básico y falla de la misma manera que tu ejemplo.<br /><br />Si imprimo un círculo lleno funciona bien:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20080501/circle_fill.png" alt="Imagen" /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import pygame<br /><br />WHITE = &#40;255, 255, 255&#41;<br />position = 100, 100<br />screen = pygame.display.set_mode&#40;&#40;320, 240&#41;&#41;<br /><br />pygame.draw.circle&#40;screen, WHITE, position, 50&#41;<br />pygame.display.flip&#40;&#41;<br />pygame.time.wait&#40;1000&#41;</code></dd></dl> <br /><br />en cambio cuando utilizo el último argumento para dibujar<br />solamente el borde de la circunferencia se produce la<br />falla:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20080501/circle_border.png" alt="Imagen" /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import pygame<br /><br />WHITE = &#40;255, 255, 255&#41;<br />position = 100, 100<br />screen = pygame.display.set_mode&#40;&#40;320, 240&#41;&#41;<br /><br />pygame.draw.circle&#40;screen, WHITE, position, 50, 20&#41;<br />pygame.display.flip&#40;&#41;<br />pygame.time.wait&#40;1000&#41;</code></dd></dl><br /><br />voy a consultar en la lista de correo de pygame a ver si es<br />un problema conocido o no. Luego te cuento que me responden.<br /><br /><blockquote><div><cite>dvd escribió:</cite><br />¿Cómo solucionarlo?<br /></div></blockquote><br /><br />Por ahora se podría hacer que el círculo grande sea<br />completamente blanco. O generar el borde con dos círculos, uno<br />grande de color negro y un poco mas pequeño en el centro<br />del anterior (por ejemplo blanco).<br /><br />Por cierto, me gusta mucho tu programa de ejemplo, ¿que <br />gustaría publicarlo en la sección de ejemplos de la web?.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Jue May 01, 2008 3:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nato]]></name></author>
<updated>2008-05-01T08:07:25+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1290#p1290</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1290#p1290"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1290#p1290"><![CDATA[
No he podido echarle un ojo al código (nunca mejor dicho), pero al ejecutarlo en una consola en ubuntu 8.04 me sale esto.<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>/ruta/archivo.py:24: DeprecationWarning: integer argument expected, got float<br />  self.img_fondo = Surface&#40;&#40;rad_g * 2, rad_g * 2&#41;&#41;.convert&#40;&#41;<br />/ruta/archivo.py:25: DeprecationWarning: integer argument expected, got float<br />  draw.circle&#40;self.img_fondo, color_g, &#40;rad_g, rad_g&#41;, rad_g, gros_g&#41;<br />/ruta/archivo.py:31: DeprecationWarning: integer argument expected, got float<br />  self.img_mirada = Surface&#40;&#40;rad_p * 2, rad_p * 2&#41;&#41;.convert&#40;&#41;<br />/ruta/archivo.py:32: DeprecationWarning: integer argument expected, got float<br />  draw.circle&#40;self.img_mirada, color_p, &#40;rad_p, rad_p&#41;, rad_p&#41;</code></dd></dl><br /><br />me lo ejecuta bien a excepción del fallo que mencionas sobre los píxeles<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1795">Nato</a> — Jue May 01, 2008 8:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-05-01T00:59:28+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1289#p1289</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1289#p1289"/>
<title type="html"><![CDATA[ojos (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=312&amp;p=1289#p1289"><![CDATA[
Hola, comparto con vosotros el código de unos ojos que miran al puntero del ratón.<br />El programa lo hice (la mayor parte) en clase, fruto del aburrimiento (aún no estudio programación). Al principio pensé que era una tontería pero luego me dí cuenta que quizás podría tener utilidad, como por ejemplo, con un personaje que apunta con el ratón (jugué a uno que se manejaba así, creo que se llamaba Abuse). Además aconsejo este tipo de programas pequeños para ir cogiendo soltura con el lenguaje. Aunque creo que me queda mucho por aprender así que, como siempre digo, espero vuestras críticas/comentarios.<br />Yo tengo una duda y es que las circunferencias me salen con píxeles transparente. ¿Es problema de Pygame?¿Mio?¿Cómo solucionarlo?<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Licencia: GPL 3<br /><br />import pygame<br />from pygame import *<br />from math import *<br /><br />resolucion = &#40;500, 300&#41;<br />color = &#40;255, 240, 220&#41;<br /><br />class ojo &#40; sprite.Sprite&#41;:<br />    def __init__&#40;self, centro, rad_g, gros_g, color_g, rad_mov, rad_p, color_p&#41;:<br />        # El ojo se compone de dos partes:<br />        #   - Una circunferencia grande de centro &quot;centro&quot;, radio &quot;rad_g&quot;,<br />        #   grosor &quot;gros_g&quot; y color &quot;color_g&quot;.<br />        #   - Una circunferencia pequeña, sin centro fijo &#40;se desplaza en<br />        #   dirección al puntero del ratón a una distancia &quot;rad_mov&quot;&#40;como máximo&#41;<br />        #   desde &quot;centro&quot;&#41;, radio &quot;rad_p&quot;, rellena y de color &quot;color_p&quot;.<br />        sprite.Sprite.__init__&#40;self&#41;<br />        <br />        # Se crea la imagen de la circunferencia grande y se situa<br />        self.img_fondo = Surface&#40;&#40;rad_g * 2, rad_g * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_fondo, color_g, &#40;rad_g, rad_g&#41;, rad_g, gros_g&#41;<br />        self.img_fondo.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        self.rect = self.img_fondo.get_rect&#40;&#41;<br />        self.rect.center = centro<br />        <br />        # Se crea la imagen de la circunferencia pequeña<br />        self.img_mirada = Surface&#40;&#40;rad_p * 2, rad_p * 2&#41;&#41;.convert&#40;&#41;<br />        draw.circle&#40;self.img_mirada, color_p, &#40;rad_p, rad_p&#41;, rad_p&#41;<br />        self.img_mirada.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        <br />        self.centro = centro<br />        self.rad_p = rad_p<br />        self.rad_g = rad_g<br />        self.rad_mov = rad_mov<br />        <br />    def update&#40;self, pos_rat&#41;:<br />        # Se hace una copia de la imagen de la circunferencia grande y se<br />        # imprime, sobre ella, la circunferencia pequeña con centro en la posición <br />        # que devuelve &quot;obt_pos_mir&quot;.<br />        self.pos_mirada = self.obt_pos_mir&#40;pos_rat&#41;<br />        self.image = self.img_fondo.copy&#40;&#41;<br />        self.image.blit&#40;self.img_mirada, &#40;self.pos_mirada&#91;0&#93; - self.rad_p, self.pos_mirada&#91;1&#93; - self.rad_p&#41;&#41;<br />        <br />    def obt_pos_mir&#40;self, pos_rat&#41;:<br />        # Se devuelve la posición en la que se tiene que situar el centro de la<br />        # circunferencia pequeña, en realación a la grande, dependiendo de la<br />        # posición del ratón.<br />        # Para ello, hace falta saber el angulo exacto del centro a la posición<br />        # del ratón. Teniendo en cuenta que tan&#40;ángulo&#41; == tan&#40;ángulo + pi&#41;.<br />        if self.dis_pq&#40;pos_rat, self.centro&#41; &gt; self.rad_mov:<br />            if &#40;pos_rat&#91;0&#93; - self.centro&#91;0&#93;&#41; == 0:<br />                if pos_rat&#91;1&#93; &gt; self.centro&#91;1&#93;:<br />                    a = pi / 2<br />                else:<br />                    a = - pi / 2<br />            else:<br />                if pos_rat&#91;0&#93; &gt; self.centro&#91;0&#93;:<br />                    a = atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />                else:<br />                    a = pi + atan&#40;&#40;self.centro&#91;1&#93; - pos_rat&#91;1&#93;&#41; / &#40;self.centro&#91;0&#93; - pos_rat&#91;0&#93;&#41;&#41;<br />            x = self.rad_g + cos&#40;a&#41; * self.rad_mov<br />            y = self.rad_g + sin&#40;a&#41; * self.rad_mov<br />            return x, y<br />        else:<br />            x = pos_rat&#91;0&#93; - self.centro&#91;0&#93; + self.rad_g<br />            y = pos_rat&#91;1&#93; - self.centro&#91;1&#93; + self.rad_g<br />            return x, y<br />            <br />    def dis_pq&#40;self, P, Q&#41;:<br />        # Se devuelve la distancia de un punto a otro<br />        Px, Py = P<br />        Qx, Qy = Q<br />        <br />        h = hypot&#40;Px - Qx, Py - Qy&#41;<br />        return h<br /><br />def main&#40;&#41;:<br />    # Se crea la pantalla con la resolución determinada<br />    screen = pygame.display.set_mode&#40;resolucion&#41;<br />    # Se crea el grupo ojos y se añaden dos<br />    ojos = pygame.sprite.Group&#40;&#41;<br />    ojos.add&#40;ojo&#40;&#40;230.0,155.0&#41;, 25.0, 4.0, &#40;100, 60, 100&#41;, 13.0, 7.0, &#40;120,140,60&#41;&#41;&#41;<br />    ojos.add&#40;ojo&#40;&#40;300.0,150.0&#41;, 35.0, 7.0, &#40;255, 100, 50&#41;, 11.0, 12.0, &#40;60,125,120&#41;&#41;&#41;<br />    <br />    while True:<br />        for event in pygame.event.get&#40;&#41;:<br />            if event.type == QUIT:<br />                # Finaliza el programa si hay un evento de cerrar<br />                return<br />        screen.fill&#40;color&#41;  # Se pinta la pantalla<br />        pos = mouse.get_pos&#40;&#41;  # Se otiene la posición del ratón<br />        ojos.update&#40;pos&#41;  # Se actualizan los ojos dependiendo de &quot;pos&quot;<br />        ojos.draw&#40;screen&#41;  # Se dibujan los ojos<br />        display.update&#40;&#41;  # Se actualiza la pantalla<br /><br />if __name__ == '__main__':<br />    main&#40;&#41;</code></dd></dl><br /><br />Pd: Sé que los colores son feos pero estoy de exámenes finales y no tengo tiempo para ir probando combinaciones de colores.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Jue May 01, 2008 12:59 am</p><hr />
]]></content>
</entry>
</feed>