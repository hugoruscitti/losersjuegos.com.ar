<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=4&amp;t=485" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2009-06-15T16:11:51+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=4&amp;t=485</id>
<entry>
<author><name><![CDATA[Nathaniel]]></name></author>
<updated>2009-06-15T16:11:51+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2595#p2595</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2595#p2595"/>
<title type="html"><![CDATA[Version 0.4]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2595#p2595"><![CDATA[
Modifico el post principal!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2061">Nathaniel</a> — Lun Jun 15, 2009 4:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2009-02-15T15:56:47+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2106#p2106</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2106#p2106"/>
<title type="html"><![CDATA[Ping Pong.py [0.4]]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2106#p2106"><![CDATA[
A simple vista:<br /><dl class="codebox"><dt>Code: </dt><dd><code>screen = pygame.display.set_mode&#40;&#40;Anchura,Altura&#41;&#41;<br />pygame.display.set_caption&#40;&quot;Ping Pong&quot;&#41;<br />Fondo = pygame.image.load&#40;&quot;Fondo.jpg&quot;&#41; </code></dd></dl><br />Yo pondría esto dentro del main y pasaría la screen como parámetro de una función para pintar los sprites. Aunque aún mejor: pygame te crea un método draw automáticamente en los spritegroups.<br /><br />Por lo demás, tiene buena pinta. Ánimo y ya nos enseñarás tu próxima versión.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Dom Feb 15, 2009 3:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nathaniel]]></name></author>
<updated>2009-02-14T20:06:29+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2104#p2104</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2104#p2104"/>
<title type="html"><![CDATA[Ping Pong.py [0.4]]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=485&amp;p=2104#p2104"><![CDATA[
Versión 0.4 del Ping Pong, la más reciente y supongo que ultima<br /><br />Gracias Hugo por el menu, en cuanto tenga hecho uno por mi lo substituyo <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><img src="http://imageshacking.webcindario.com/imagenes/nath_pong.jpg" alt="Imagen" /><br /><br />Dispone:<br />- 2 Players<br />- Interfaz sencilla pero agradable<br />- Música de fondo<br />- Menú<br />- Contador de puntos<br />- etc.<br /><br />Falta (que no creo que termine):<br />- Jugar contra CPU<br />- Algunos eventos originales<br /><br /><br /><a href="http://www.rapidspread.com/file.jsp?id=wjbffqa4dy" class="postlink">Nath Pong 0.4.tar.gz</a><br /><br /><br />Para ejecutarlo en caso de tener Windows necesitais el intérprete de Python y la biblioteca Pygame<br /><!-- m --><a class="postlink" href="http://www.python.org/download/">http://www.python.org/download/</a><!-- m --><br /><!-- m --><a class="postlink" href="http://www.pygame.org/download.shtml">http://www.pygame.org/download.shtml</a><!-- m --><br />En caso de tener GNU/Linux generalmente viene instalado por lo que tan sólo hay que hacer con la shell: python nombredelscript.py<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>#  Autor: Nath &#40;Nath.py@hotmail.com&#41;<br />#  Licencia GPL<br />#  Descripcion: El clasico juego del Ping Pong a 2D<br />#  Greetz to Hugo Ruscitti for Menu ;&#41;<br />#------------------------------------------------------------------------------<br /><br />#Importamos los modulos necesarios<br />import random<br />import pygame<br />from pygame.locals import *<br />import math<br />pygame.init&#40;&#41;<br />pygame.mixer.init&#40;&#41;<br />pygame.mixer.music.load&#40;&quot;Error.mp3&quot;&#41;<br />pygame.mixer.music.play&#40;&#41;<br /> <br /> <br />class Opcion:<br />    def __init__&#40;self, fuente, titulo, x, y, paridad, funcion_asignada&#41;:<br />        self.imagen_normal = fuente.render&#40;titulo, 1, &#40;0, 0, 0&#41;&#41;<br />        self.imagen_destacada = fuente.render&#40;titulo, 1, &#40;200, 0, 0&#41;&#41;<br />        self.image = self.imagen_normal<br />        self.rect = self.image.get_rect&#40;&#41;<br />        self.rect.x = 500 * paridad<br />        self.rect.y = y<br />        self.funcion_asignada = funcion_asignada<br />        self.x = float&#40;self.rect.x&#41;<br /> <br />    def actualizar&#40;self&#41;:<br />        destino_x = 105<br />        self.x += &#40;destino_x - self.x&#41; / 5.0<br />        self.rect.x = int&#40;self.x&#41;<br /> <br />    def imprimir&#40;self, screen&#41;:<br />        screen.blit&#40;self.image, self.rect&#41;<br /> <br />    def destacar&#40;self, estado&#41;:<br />        if estado:<br />            self.image = self.imagen_destacada<br />        else:<br />            self.image = self.imagen_normal<br /> <br />    def activar&#40;self&#41;:<br />        self.funcion_asignada&#40;&#41;<br /> <br /> <br />class Cursor:<br />    def __init__&#40;self, x, y, dy&#41;:<br />        self.image = pygame.image.load&#40;'cursor.png'&#41;.convert_alpha&#40;&#41;<br />        self.rect = self.image.get_rect&#40;&#41;<br />        self.rect.x = x<br />        self.y_inicial = y<br />        self.dy = dy<br />        self.y = 0<br />        self.seleccionar&#40;0&#41;<br /> <br />    def actualizar&#40;self&#41;:<br />        self.y += &#40;self.to_y - self.y&#41; / 10.0<br />        self.rect.y = int&#40;self.y&#41;<br /> <br />    def seleccionar&#40;self, indice&#41;:<br />        self.to_y = self.y_inicial + indice * self.dy<br /> <br />    def imprimir&#40;self, screen&#41;:<br />        screen.blit&#40;self.image, self.rect&#41;<br /> <br /> <br />class Menu:<br />    def __init__&#40;self, opciones&#41;:<br />        self.opciones = &#91;&#93;<br />        fuente = pygame.font.Font&#40;'dejavu.ttf', 20&#41;<br />        x = 105<br />        y = 105<br />        paridad = 1<br /> <br />        self.cursor = Cursor&#40;x - 30, y, 30&#41;<br /> <br />        for titulo, funcion in opciones:<br />            self.opciones.append&#40;Opcion&#40;fuente, titulo, x, y, paridad, funcion&#41;&#41;<br />            y += 30<br />            if paridad == 1:<br />                paridad = -1<br />            else:<br />                paridad = 1<br /> <br />        self.seleccionado = 0<br />        self.total = len&#40;self.opciones&#41;<br />        self.mantiene_pulsado = False<br /> <br />    def actualizar&#40;self&#41;:<br />        k = pygame.key.get_pressed&#40;&#41;<br /> <br />        if not self.mantiene_pulsado:<br />            if k&#91;K_UP&#93;:<br />                self.seleccionado -= 1<br />            elif k&#91;K_DOWN&#93;:<br />                self.seleccionado += 1<br />            elif k&#91;K_RETURN&#93;:<br />                self.opciones&#91;self.seleccionado&#93;.activar&#40;&#41;<br /> <br />        if self.seleccionado &lt; 0:<br />            self.seleccionado = 0<br />        elif self.seleccionado &gt; self.total - 1:<br />            self.seleccionado = self.total - 1<br /> <br />        self.cursor.seleccionar&#40;self.seleccionado&#41;<br /> <br />        self.mantiene_pulsado = k&#91;K_UP&#93; or k&#91;K_DOWN&#93; or k&#91;K_RETURN&#93;<br /> <br />        self.cursor.actualizar&#40;&#41;<br /> <br />        for o in self.opciones:<br />            o.actualizar&#40;&#41;<br /> <br />    def imprimir&#40;self, screen&#41;:<br />        self.cursor.imprimir&#40;screen&#41;<br /> <br />        for opcion in self.opciones:<br />            opcion.imprimir&#40;screen&#41;<br /> <br />def comenzar_nuevo_juego&#40;&#41;:<br />    #Definimos la pantalla como 640x480<br />   Anchura, Altura = 640, 480<br />   screen = pygame.display.set_mode&#40;&#40;Anchura,Altura&#41;&#41;<br />   pygame.display.set_caption&#40;&quot;Ping Pong&quot;&#41;<br />   Fondo = pygame.image.load&#40;&quot;Fondo.jpg&quot;&#41;<br /><br />   #Definimos el Sprite &quot;Jugador1&quot;, el de la izquierda.<br />   class Jugador1 &#40;pygame.sprite.Sprite&#41;:<br />      def __init__&#40;self&#41;:      <br />         pygame.sprite.Sprite.__init__&#40;self&#41;<br />         self.Jugador1_image = pygame.image.load&#40;&quot;pala.png&quot;&#41;<br />         self.rect = self.Jugador1_image.get_rect&#40;&#41;<br />      def Update&#40;self&#41;:<br />         self.rect.clamp_ip&#40;screen.get_rect&#40;&#41;&#41;<br />         self.key = pygame.key.get_pressed&#40;&#41;<br />         if self.key&#91;pygame.K_w&#93;: <br />            self.rect.y -= 5<br />         elif self.key&#91;pygame.K_s&#93;:<br />            self.rect.y += 5<br />         screen.blit&#40;self.Jugador1_image,self.rect&#41;<br /><br />   #Definimos el Sprite &quot;Jugador2&quot;, el de la derecha.<br />   class Jugador2 &#40;pygame.sprite.Sprite&#41;:<br />      def __init__&#40;self&#41;:<br />         pygame.sprite.Sprite.__init__&#40;self&#41;<br />         self.color = &#40;0,0,0&#41;<br />         self.Jugador2_image = pygame.image.load&#40;&quot;pala.png&quot;&#41;<br />         self.rect = self.Jugador2_image.get_rect&#40;&#41;<br />         self.rect.x = 620<br />      def Update&#40;self&#41;:<br />         self.rect.clamp_ip&#40;screen.get_rect&#40;&#41;&#41;<br />         self.key = pygame.key.get_pressed&#40;&#41;<br />         if self.key&#91;pygame.K_UP&#93;: <br />            self.rect.y -= 5<br />         elif self.key&#91;pygame.K_DOWN&#93;: <br />            self.rect.y += 5         <br />         screen.blit&#40;self.Jugador2_image,self.rect&#41;   <br />   <br />   #Definimos el sprite &quot;Pelota&quot;<br />   class Pelota&#40;pygame.sprite.Sprite&#41;:<br />      def __init__&#40;self&#41;:<br />         pygame.sprite.Sprite.__init__&#40;self&#41;<br />         self.color = &#40;0,0,0&#41;<br />         self.Pelota_image = pygame.image.load&#40;&quot;ball.gif&quot;&#41;<br />         self.rect = self.Pelota_image.get_rect&#40;&#41;<br />         self.speed = &#91;3,3&#93;<br />         self.rect.y,self.rect.x = 200,200<br />         self.Player2_Score = 0<br />         self.Player1_Score = 0<br />      def Update&#40;self&#41;:<br />         self.rect.clamp_ip&#40;screen.get_rect&#40;&#41;&#41;<br />         Colision = pygame.sprite.spritecollide&#40;self,GrupoJugadores,dokill=False&#41;<br />         if Colision: <br />            if self.speed&#91;0&#93; &gt; 0:<br />               self.speed&#91;0&#93; += 1<br />            elif self.speed&#91;0&#93; &lt; 0:<br />               self.speed&#91;0&#93; -= 1<br />            elif self.speed&#91;1&#93; &gt; 0:<br />               self.speed&#91;1&#93; += 1<br />            elif self.speed&#91;1&#93; &lt; 0:<br />               self.speed&#91;1&#93; -= 1<br />            self.speed&#91;0&#93; = - self.speed&#91;0&#93;<br />         if self.rect.top &lt; 1 or self.rect.bottom &gt; 479: self.speed&#91;1&#93; = -self.speed&#91;1&#93;<br />         elif self.rect.left &lt; 1:<br />            self.Player2_Score += 1<br />            if self.Player2_Score == 5:<br />               Render = Fuente2.render&#40;&quot;Ha ganado el Jugador 2!&quot;, 1, &#40;0, 0, 0&#41;&#41;<br />               screen.blit&#40;Render,&#40;30,230&#41;&#41;<br />               pygame.display.update&#40;&#41;<br />               pygame.time.wait&#40;1000&#41;<br />               exit&#40;&#41;<br />            Reset&#40;&quot;Ganador_2&quot;&#41;<br />         elif self.rect.right &gt; 639:<br />            self.Player1_Score += 1<br />            if self.Player1_Score == 5:<br />               Render = Fuente2.render&#40;&quot;Ha ganado el Jugador 1!&quot;, 1, &#40;0, 0, 0&#41;&#41;<br />               screen.blit&#40;Render,&#40;30,230&#41;&#41;<br />               pygame.display.update&#40;&#41;<br />               pygame.time.wait&#40;2000&#41;<br />               exit&#40;&#41;<br />            Reset&#40;&quot;Ganador_1&quot;&#41;<br />         self.rect.move_ip&#40;self.speed&#91;0&#93;,self.speed&#91;1&#93;&#41;<br />         screen.blit&#40;self.Pelota_image,self.rect&#41;<br /><br />   #Funcion para resetear despues de un punto      <br />   def Reset&#40;Ganador&#41;:<br />      Pelota.speed&#91;0&#93;,Pelota.speed&#91;1&#93; = 2,2<br />      Pelota.rect.x,Pelota.rect.y = 300,210<br />      if Ganador == &quot;Ganador_1&quot;: <br />         Pelota.speed&#91;0&#93; = -Pelota.speed&#91;0&#93;<br />         pygame.time.wait&#40;100&#41;<br />      elif Ganador == &quot;Ganador_2&quot;:<br />         Pelota.speed&#91;0&#93; = -Pelota.speed&#91;0&#93;<br />         pygame.time.wait&#40;100&#41;<br /><br />   #Inicializaciones y configuraciones previas para empezar el juego   <br />   Jugador1 = Jugador1&#40;&#41;<br />   Jugador2 = Jugador2&#40;&#41;<br />   Pelota = Pelota&#40;&#41;<br /><br />   GrupoJugadores = pygame.sprite.Group&#40;&#41;<br />   GrupoJugadores.add&#40;Jugador1,Jugador2&#41;<br /><br />   Running = True<br />   pygame.mouse.set_visible&#40;False&#41;   <br /><br />   #Definimos la fuente para el marcador<br />   Fuente = pygame.font.Font&#40;&quot;dejavu.ttf&quot;,80&#41;<br />   Fuente2 = pygame.font.Font&#40;&quot;dejavu.ttf&quot;,40&#41;<br /><br /><br />   #Empezamos el bucle infinito que inicia el juego<br />   while Running: <br />      for event in pygame.event.get&#40;&#41;:<br />         if event.type == QUIT:<br />            Running = False<br />         if event.type == pygame.K_ESCAPE:<br />            Running = False<br />      screen.blit&#40;Fondo,&#40;0,0&#41;&#41;<br />      Jugador1.Update&#40;&#41;<br />      Jugador2.Update&#40;&#41;<br />      Pelota.Update&#40;&#41;<br />      screen.blit&#40;Fuente.render&#40;str&#40;Pelota.Player1_Score&#41;+&quot; - &quot; + str&#40;Pelota.Player2_Score&#41;,True,   &#40;255,000,000&#41;&#41;,&#40;230,30&#41;&#41;<br />      pygame.display.flip&#40;&#41;<br /> <br /> <br />def salir_del_programa&#40;&#41;:<br />    exit&#40;&#41;<br /> <br /> <br />if __name__ == '__main__':<br />    salir = False<br />    opciones = &#91;<br />        &#40;&quot;Jugar&quot;, comenzar_nuevo_juego&#41;,<br />        &#40;&quot;Salir&quot;, salir_del_programa&#41;<br />        &#93;<br /> <br />    pygame.font.init&#40;&#41;<br />    screen = pygame.display.set_mode&#40;&#40;310, 200&#41;&#41;<br />    fondo = pygame.image.load&#40;&quot;fondo.png&quot;&#41;.convert&#40;&#41;<br />    menu = Menu&#40;opciones&#41;<br /> <br />    while not salir:<br /> <br />        for e in pygame.event.get&#40;&#41;:<br />            if e.type == QUIT:<br />                salir = True<br /> <br />        screen.blit&#40;fondo, &#40;0, 0&#41;&#41;<br />        menu.actualizar&#40;&#41;<br />        menu.imprimir&#40;screen&#41;<br /> <br />        pygame.display.flip&#40;&#41;<br />        pygame.time.delay&#40;10&#41;</code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2061">Nathaniel</a> — Sab Feb 14, 2009 8:06 pm</p><hr />
]]></content>
</entry>
</feed>