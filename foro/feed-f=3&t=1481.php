<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=3&amp;t=1481" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2012-06-09T17:42:12+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=3&amp;t=1481</id>
<entry>
<author><name><![CDATA[joenco]]></name></author>
<updated>2012-06-09T17:42:12+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6846#p6846</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6846#p6846"/>
<title type="html"><![CDATA[Re: Etiqueta de sonido en cada opción del menú]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6846#p6846"><![CDATA[
Disculpen, me equivoque de código, ese era de unas pruebas, este si es el correcto:<br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># autor: Hugo Ruscitti<br /># Modificado y adaptado por: Jorge Ortega.<br /># web: www.losersjuegos.com.ar<br /># licencia: GPL 2<br /><br />import random<br />import pygame<br />from pygame.locals import *<br />import os<br />import sys<br /><br />IMG_DIR = &quot;Imagenes&quot;<br />SONIDO_DIR = &quot;Sonidos&quot;<br /><br />def load_image(nombre, dir_imagen, alpha=False):<br />    # Encontramos la ruta completa de la imagen<br />    ruta = os.path.join(dir_imagen, nombre)<br />    try:<br />        image = pygame.image.load(ruta)<br />    except:<br />        print &quot;Error, no se puede cargar la imagen: &quot;, ruta<br />        sys.exit(1)<br />    # Comprobar si la imagen tiene &quot;canal alpha&quot; (como los png)<br />    if alpha == True:<br />        image = image.convert_alpha()<br />    else:<br />        image = image.convert()<br />    return image<br /><br />def load_sound(nombre, dir_sonido):<br />    ruta = os.path.join(dir_sonido, nombre)<br />    # Intentar cargar el sonido<br />    try:<br />        sonido = pygame.mixer.Sound(ruta)<br />    except pygame.error, message:<br />        print &quot;No se pudo cargar el sonido:&quot;, ruta<br />        sonido = None<br />    return sonido<br /><br />class Opcion:<br /><br />    def __init__(self, fuente, titulo, x, y, paridad, funcion_asignada, sonido):<br />        self.imagen_normal = fuente.render(titulo, 1, (0, 0, 0))<br />        self.imagen_destacada = fuente.render(titulo, 1, (200, 0, 0))<br />        self.image = self.imagen_normal<br />        self.rect = self.image.get_rect()<br />        self.rect.x = 500 * paridad<br />        self.rect.y = y<br />        self.funcion_asignada = funcion_asignada<br />        self.x = float(self.rect.x)<br />        self.sonido = sonido<br /><br />    def actualizar(self):<br />        destino_x = 105<br />        self.x += (destino_x - self.x) / 5.0<br />        self.rect.x = int(self.x)<br /><br />    def imprimir(self, screen):<br />        screen.blit(self.image, self.rect)<br /><br />    def destacar(self, estado):<br />        if estado:<br />            self.image = self.imagen_destacada<br />        else:<br />            self.image = self.imagen_normal<br /><br />    def activar(self):<br />        self.funcion_asignada()<br /><br /><br />    def reproducir(self, sonido):<br />        self.sonido.play()<br /><br />class Cursor:<br /><br />    def __init__(self, x, y, dy):<br />        self.image = load_image(&quot;cursor.png&quot;, IMG_DIR, alpha=True)<br />        self.rect = self.image.get_rect()<br />        self.rect.x = x<br />        self.y_inicial = y<br />        self.dy = dy<br />        self.y = 0<br />        self.seleccionar(0)<br /><br />    def actualizar(self):<br />        self.y += (self.to_y - self.y) / 10.0<br />        self.rect.y = int(self.y)<br /><br />    def seleccionar(self, indice):<br />        self.to_y = self.y_inicial + indice * self.dy<br /><br />    def imprimir(self, screen):<br />        screen.blit(self.image, self.rect)<br /><br />class Menu:<br />    &quot;Representa un menú con opciones para un juego&quot;<br />    <br />    def __init__(self, opciones):<br />        self.opciones = &#91;&#93;<br />        fuente = pygame.font.Font('dejavu.ttf', 24)<br />        x = 405<br />        y = 305<br />        paridad = 1<br /><br />        self.cursor = Cursor(x - 30, y, 30)<br /><br />        for titulo, funcion, sonido in opciones:<br />            self.opciones.append(Opcion(fuente, titulo, x, y, paridad, funcion, sonido))<br />            y += 30<br />            if paridad == 1:<br />                paridad = -1<br />            else:<br />                paridad = 1<br /><br />        self.seleccionado = 0<br />        self.total = len(self.opciones)<br />        self.mantiene_pulsado = False<br /><br />    def actualizar(self):<br />        &quot;&quot;&quot;Altera el valor de 'self.seleccionado' con los direccionales.&quot;&quot;&quot;<br /><br />        k = pygame.key.get_pressed()<br />        if not self.mantiene_pulsado:<br />            if k&#91;K_UP&#93;:<br />                self.seleccionado -= 1<br />                if self.seleccionado &gt;= 0:<br />                    self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br />                    #self.opciones&#91;self.seleccionado&#93;.pausar(sonido)<br />            elif k&#91;K_DOWN&#93;:<br />                self.seleccionado += 1<br />                if self.seleccionado &lt;= self.total-1:<br />                    self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br />            elif k&#91;K_RETURN&#93;:<br />                # Invoca a la función asociada a la opción.<br />                self.opciones&#91;self.seleccionado&#93;.activar()<br /><br />        # procura que el cursor esté entre las opciones permitidas<br />        if self.seleccionado &lt; 0:<br />            self.seleccionado = 0<br />            self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br />        elif self.seleccionado &gt; self.total - 1:<br />            self.seleccionado = self.total - 1<br />            self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br /><br />        self.cursor.seleccionar(self.seleccionado)<br /><br />        # indica si el usuario mantiene pulsada alguna tecla.<br />        self.mantiene_pulsado = k&#91;K_UP&#93; or k&#91;K_DOWN&#93; or k&#91;K_RETURN&#93;<br /><br />        self.cursor.actualizar()<br />     <br />        for o in self.opciones:<br />            o.actualizar()<br /><br />    def imprimir(self, screen):<br />        &quot;&quot;&quot;Imprime sobre 'screen' el texto de cada opción del menú.&quot;&quot;&quot;<br /><br />        self.cursor.imprimir(screen)<br /><br />        for opcion in self.opciones:<br />            opcion.imprimir(screen)<br /><br />def sonido(self, nombre):<br />    self.nombre.stop()<br /><br />def comenzar_nuevo_juego():<br />    print &quot; Función que muestra un nuevo juego.&quot;<br /><br />def mostrar_opciones():<br />    print &quot; Función que muestra otro menú de opciones.&quot;<br /><br />def creditos():<br />    print &quot; Función que muestra los creditos del programa.&quot;<br /><br />def salir_del_programa():<br />    import sys<br />    print &quot; Gracias por utilizar este programa.&quot;<br />    sys.exit(0)<br /><br /><br />if __name__ == '__main__':<br />    <br />    salir = False<br /><br />    pygame.mixer.init()<br />    sonido1 = load_sound(&quot;nuevo.wav&quot;, SONIDO_DIR)<br />    sonido2 = load_sound(&quot;opciones.wav&quot;, SONIDO_DIR)<br />    sonido3 = load_sound(&quot;creditos.wav&quot;, SONIDO_DIR)<br />    sonido4 = load_sound(&quot;salir.wav&quot;, SONIDO_DIR)<br /><br />    opciones = &#91;<br />        (&quot;Jugar&quot;, comenzar_nuevo_juego, sonido1),<br />        (&quot;Opciones&quot;, mostrar_opciones, sonido2),<br />        (&quot;Creditos&quot;, creditos, sonido3),<br />        (&quot;Salir&quot;, salir_del_programa, sonido4)<br />        &#93;<br /><br />    pygame.font.init()<br />    pygame.mixer.init()<br />    screen = pygame.display.set_mode((1024, 720))<br />    pygame.display.set_caption(&quot;Ejemplo de un menú hablado&quot;)<br />    fondo = load_image(&quot;fondo.png&quot;, IMG_DIR, alpha=False)<br />    menu = Menu(opciones)<br /><br />    while not salir:<br /><br />        for e in pygame.event.get():<br />            if e.type == QUIT:<br />                salir = True<br /><br />        screen.blit(fondo, (0, 0))<br />        menu.actualizar()<br />        menu.imprimir(screen)<br /><br />        pygame.display.flip()<br />        pygame.time.delay(10)<br /></code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2618">joenco</a> — Sab Jun 09, 2012 5:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[joenco]]></name></author>
<updated>2012-06-09T17:34:36+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6845#p6845</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6845#p6845"/>
<title type="html"><![CDATA[Re: Etiqueta de sonido en cada opción del menú]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6845#p6845"><![CDATA[
Hola, bueno ya logré por lo menos que reproduzca las etiquetas de sonido en cada opción del menú, pero no he podido hacer que cuando cambie de opción, la que se estaba reproduciendo antes, ya no lo haga, aquí esta el codigo por si alguien sabe como hacer eso:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># autor: Hugo Ruscitti<br /># Modificado y adaptado por: Jorge Ortega.<br /># web: www.losersjuegos.com.ar<br /># licencia: GPL 2<br /><br />import random<br />import pygame<br />from pygame.locals import *<br />import os<br />import sys<br /><br />IMG_DIR = &quot;Imagenes&quot;<br />SONIDO_DIR = &quot;Sonidos&quot;<br /><br />def load_image(nombre, dir_imagen, alpha=False):<br />    # Encontramos la ruta completa de la imagen<br />    ruta = os.path.join(dir_imagen, nombre)<br />    try:<br />        image = pygame.image.load(ruta)<br />    except:<br />        print &quot;Error, no se puede cargar la imagen: &quot;, ruta<br />        sys.exit(1)<br />    # Comprobar si la imagen tiene &quot;canal alpha&quot; (como los png)<br />    if alpha == True:<br />        image = image.convert_alpha()<br />    else:<br />        image = image.convert()<br />    return image<br /><br />def load_sound(nombre, dir_sonido):<br />    ruta = os.path.join(dir_sonido, nombre)<br />    # Intentar cargar el sonido<br />    try:<br />        sonido = pygame.mixer.Sound(ruta)<br />    except pygame.error, message:<br />        print &quot;No se pudo cargar el sonido:&quot;, ruta<br />        sonido = None<br />    return sonido<br /><br />class Opcion:<br /><br />    def __init__(self, fuente, titulo, x, y, paridad, funcion_asignada, sonido):<br />        self.imagen_normal = fuente.render(titulo, 1, (0, 0, 0))<br />        self.imagen_destacada = fuente.render(titulo, 1, (200, 0, 0))<br />        self.image = self.imagen_normal<br />        self.rect = self.image.get_rect()<br />        self.rect.x = 500 * paridad<br />        self.rect.y = y<br />        self.funcion_asignada = funcion_asignada<br />        self.x = float(self.rect.x)<br />        self.sonido = sonido<br /><br />    def actualizar(self):<br />        destino_x = 105<br />        self.x += (destino_x - self.x) / 5.0<br />        self.rect.x = int(self.x)<br /><br />    def imprimir(self, screen):<br />        screen.blit(self.image, self.rect)<br /><br />    def destacar(self, estado):<br />        if estado:<br />            self.image = self.imagen_destacada<br />        else:<br />            self.image = self.imagen_normal<br /><br />    def activar(self):<br />        self.funcion_asignada()<br /><br /><br />    def reproducir(self, sonido, select):<br />        if select==select:<br />            self.sonido.play()<br />        else:<br />            self.sonido.stop()<br /><br />    def pausar(self, sonido):<br />        self.sonido.stop()<br /><br />class Cursor:<br /><br />    def __init__(self, x, y, dy):<br />        self.image = load_image(&quot;cursor.png&quot;, IMG_DIR, alpha=True)<br />        self.rect = self.image.get_rect()<br />        self.rect.x = x<br />        self.y_inicial = y<br />        self.dy = dy<br />        self.y = 0<br />        self.seleccionar(0)<br /><br />    def actualizar(self):<br />        self.y += (self.to_y - self.y) / 10.0<br />        self.rect.y = int(self.y)<br /><br />    def seleccionar(self, indice):<br />        self.to_y = self.y_inicial + indice * self.dy<br /><br />    def imprimir(self, screen):<br />        screen.blit(self.image, self.rect)<br /><br />class Menu:<br />    &quot;Representa un menú con opciones para un juego&quot;<br />    <br />    def __init__(self, opciones):<br />        self.opciones = &#91;&#93;<br />        fuente = pygame.font.Font('dejavu.ttf', 24)<br />        x = 405<br />        y = 305<br />        paridad = 1<br /><br />        self.cursor = Cursor(x - 30, y, 30)<br /><br />        for titulo, funcion, sonido in opciones:<br />            self.opciones.append(Opcion(fuente, titulo, x, y, paridad, funcion, sonido))<br />            y += 30<br />            if paridad == 1:<br />                paridad = -1<br />            else:<br />                paridad = 1<br /><br />        self.seleccionado = 0<br />        self.total = len(self.opciones)<br />        self.mantiene_pulsado = False<br /><br />    def actualizar(self):<br />        &quot;&quot;&quot;Altera el valor de 'self.seleccionado' con los direccionales.&quot;&quot;&quot;<br /><br />        k = pygame.key.get_pressed()<br />        if not self.mantiene_pulsado:<br />            if k&#91;K_UP&#93;:<br />                self.seleccionado -= 1<br />                if self.seleccionado &gt;= 0:<br />                    self.opciones&#91;self.seleccionado&#93;.reproducir(sonido, self.seleccionado)<br />                    #self.opciones&#91;self.seleccionado&#93;.pausar(sonido)<br />            elif k&#91;K_DOWN&#93;:<br />                self.seleccionado += 1<br />                if self.seleccionado &lt;= self.total-1:<br />                    self.opciones&#91;self.seleccionado&#93;.reproducir(sonido, self.seleccionado)<br />            elif k&#91;K_RETURN&#93;:<br />                # Invoca a la función asociada a la opción.<br />                self.opciones&#91;self.seleccionado&#93;.activar()<br /><br />        # procura que el cursor esté entre las opciones permitidas<br />        if self.seleccionado &lt; 0:<br />            self.seleccionado = 0<br />            self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br />        elif self.seleccionado &gt; self.total - 1:<br />            self.seleccionado = self.total - 1<br />            self.opciones&#91;self.seleccionado&#93;.reproducir(sonido)<br /><br />        self.cursor.seleccionar(self.seleccionado)<br /><br />        # indica si el usuario mantiene pulsada alguna tecla.<br />        self.mantiene_pulsado = k&#91;K_UP&#93; or k&#91;K_DOWN&#93; or k&#91;K_RETURN&#93;<br /><br />        self.cursor.actualizar()<br />     <br />        for o in self.opciones:<br />            o.actualizar()<br /><br />    def imprimir(self, screen):<br />        &quot;&quot;&quot;Imprime sobre 'screen' el texto de cada opción del menú.&quot;&quot;&quot;<br /><br />        self.cursor.imprimir(screen)<br /><br />        for opcion in self.opciones:<br />            opcion.imprimir(screen)<br /><br />def sonido(self, nombre):<br />    self.nombre.stop()<br /><br />def comenzar_nuevo_juego():<br />    print &quot; Función que muestra un nuevo juego.&quot;<br /><br />def mostrar_opciones():<br />    print &quot; Función que muestra otro menú de opciones.&quot;<br /><br />def creditos():<br />    print &quot; Función que muestra los creditos del programa.&quot;<br /><br />def salir_del_programa():<br />    import sys<br />    print &quot; Gracias por utilizar este programa.&quot;<br />    sys.exit(0)<br /><br /><br />if __name__ == '__main__':<br />    <br />    salir = False<br /><br />    pygame.mixer.init()<br />    sonido1 = load_sound(&quot;nuevo.wav&quot;, SONIDO_DIR)<br />    sonido2 = load_sound(&quot;opciones.wav&quot;, SONIDO_DIR)<br />    sonido3 = load_sound(&quot;creditos.wav&quot;, SONIDO_DIR)<br />    sonido4 = load_sound(&quot;salir.wav&quot;, SONIDO_DIR)<br /><br />    opciones = &#91;<br />        (&quot;Jugar&quot;, comenzar_nuevo_juego, sonido1),<br />        (&quot;Opciones&quot;, mostrar_opciones, sonido2),<br />        (&quot;Creditos&quot;, creditos, sonido3),<br />        (&quot;Salir&quot;, salir_del_programa, sonido4)<br />        &#93;<br /><br />    pygame.font.init()<br />    pygame.mixer.init()<br />    screen = pygame.display.set_mode((1024, 720))<br />    pygame.display.set_caption(&quot;Ejemplo de un menú hablado&quot;)<br />    fondo = load_image(&quot;fondo.png&quot;, IMG_DIR, alpha=False)<br />    menu = Menu(opciones)<br /><br />    while not salir:<br /><br />        for e in pygame.event.get():<br />            if e.type == QUIT:<br />                salir = True<br /><br />        screen.blit(fondo, (0, 0))<br />        menu.actualizar()<br />        menu.imprimir(screen)<br /><br />        pygame.display.flip()<br />        pygame.time.delay(10)<br /></code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2618">joenco</a> — Sab Jun 09, 2012 5:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[joenco]]></name></author>
<updated>2012-06-01T22:52:34+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6805#p6805</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6805#p6805"/>
<title type="html"><![CDATA[Re: Etiqueta de sonido en cada opción del menú]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6805#p6805"><![CDATA[
oye se me paso ese detalle, estoy programando con pygame y usando como plantilla el ejemplo de como crear menús, que se encuentra en esta misma página.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2618">joenco</a> — Vie Jun 01, 2012 10:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kiketom]]></name></author>
<updated>2012-06-01T17:26:53+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6804#p6804</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6804#p6804"/>
<title type="html"><![CDATA[Re: Etiqueta de sonido en cada opción del menú]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6804#p6804"><![CDATA[
¿Con que estás programando el juego?<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2368">kiketom</a> — Vie Jun 01, 2012 5:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[joenco]]></name></author>
<updated>2012-06-01T02:20:36+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6802#p6802</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6802#p6802"/>
<title type="html"><![CDATA[Etiqueta de sonido en cada opción del menú]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1481&amp;p=6802#p6802"><![CDATA[
Hola, disculpen si estoy realizando la pregunta en el lugar equivocado, ahora bien, lo que me gustaŕia saber es como hago para colocar una etiqueta de sonido a cada opción del menú, por ejemplo, tengo las etiquetas de sonido &quot;Nuevo&quot;, &quot;Credito&quot;, Salir&quot; y que debeŕia hacer para que cuando este navegando por cada opción del menú, estas sean reproducidas?<br /><br /> Lo pregunto, ya que soy una persona con discapacidad visual y quiero crear un juego donde todos podamos jugar sin problemas, como yo se que algunos no le gustara que la etiqueta se reproduzca, pienso tener una opción para desactivar estos sonidos.<br /><br />Gracias y espero haberme explicado.<br /><br />Un saludo.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2618">joenco</a> — Vie Jun 01, 2012 2:20 am</p><hr />
]]></content>
</entry>
</feed>