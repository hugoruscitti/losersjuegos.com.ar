<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=930" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2010-11-19T06:00:23+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=930</id>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2010-11-19T06:00:23+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4434#p4434</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4434#p4434"/>
<title type="html"><![CDATA[Re: Sobre como guardar los puntajes]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4434#p4434"><![CDATA[
No conocía el modulo cPickle, pero me facilitara las cosas <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.<br /><br />Modifique el código para que funcionara con el modulo, y a parte, después de presionar el botón mostrara los 3 mejores puntajes del juego, pensé en hacerlo con una serie de listas anidadas ya que -corrijanme si me equivoco- los diccionarios no tienen &quot;orden&quot;  <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_exclaim.gif" alt=":!:" title="Exclamation" /> <br /><dl class="codebox"><dt>Code: </dt><dd><code>#!/usr/bin/python<br /># vim: set fileencoding=utf-8 :<br />import os<br />import sys<br />import pygame<br />import cPickle<br />from pygame import *<br />&quot;niño&quot; #codificación <br />def Guardar(loescrito):<br />    archivo = open(&quot;puntajes.txt&quot;, 'w')<br />    cPickle.dump(loescrito, archivo)<br />    archivo.close()<br /><br />def abrir():<br />    archivo = open(&quot;puntajes.txt&quot;, 'r')<br />    puntaje_recuperado=cPickle.load(archivo)<br />    archivo.close()<br />    return puntaje_recuperado<br /><br />puntajes = abrir()<br />#En esta parte podriamos comparar el<br />#puntaje obtenido en el juego<br />#y si es mayor que el menor de la lista<br /><br />Ancho = 450<br />Alto = 500<br />DSM = None<br />Black = (0,0,0)<br />White = (250,250,250)<br /><br />def load_image(name, colorkey=False):<br />    #crea una ruta a la carpeta de datos<br />    #al escribirlo de esa forma, nos aseguramos<br />    #de que pueda abrir en todos los S.O.<br />    #donde este instalado python<br />    fullname = os.path.join(name)<br />    #comprobamos si existe la imagen<br />    try:<br />        image = pygame.image.load(fullname)<br />    except pygame.error, message:<br />        print 'No se puede cargar la imagen: ', fullname<br />        raise SystemExit, message<br />    #combierte la imagen para que pygame la pueda usar<br />    image = image.convert()<br />    #En este punto asignamos el colorkey<br />    #es decir, un color de base al que se<br />    #borrara dejando solo el canal alfa (transparencia)<br />    if colorkey:<br />        colorkey = image.get_at((0, 0))<br />        image.set_colorkey(colorkey, RLEACCEL)<br />    #devuelve la imagen y la recta de la imagen<br />    return (image, image.get_rect())<br /><br />&quot;&quot;&quot;Mira, el objeto con el que se remplaza el &quot;ratón&quot;...&quot;&quot;&quot;<br />class Mira(pygame.sprite.Sprite):<br />    def __init__(self):<br />        pygame.sprite.Sprite.__init__(self)<br />        (self.image, self.rect) = load_image('mira.png', True)<br />    def update(self):<br />        posicion = pygame.mouse.get_pos()<br />        self.rect.center = posicion<br />        # Evita que la mira salga del rango permitido.<br />        if self.rect.left &lt; 0:<br />            self.rect.left = 0<br />        elif self.rect.right &gt; 450:<br />            self.rect.right = 450<br />        if self.rect.top &lt;= 0:<br />            self.rect.top = 0<br />        elif self.rect.bottom &gt;= 450:<br />            self.rect.bottom = 450<br />            <br />&quot;&quot;&quot; Creamos una clase para el botton&quot;&quot;&quot;<br />class OKButton(pygame.sprite.Sprite):<br />    def __init__(self, initialpos):<br />        (self.initialx, self.initialy)=initialpos<br />        pygame.sprite.Sprite.__init__(self)<br />        (self.image, self.rect) = load_image('Ok.png', True)<br />    def update(self):<br />        posicion= self.initialx, self.initialy<br />        self.rect.center = posicion<br /><br />&quot;&quot;&quot;La clase que se encarga de resivir el texto&quot;&quot;&quot;<br />class Escritura():<br />    def __init__(self):<br />        self.line = 0<br />        self.strings = &#91;'',&#93;<br />        #self.font = pygame.font.Font('dejavu.ttf', 12) #(*1)<br />        self.font = pygame.font.Font(DSM, 28)<br />        self.dist = 20<br />        self.ipos_x = 50<br />        self.ipos_y = 50<br />       <br />    def update(self, events):<br />        for event in events:<br />            if event.type == KEYDOWN:<br />                if event.key == K_RETURN:<br />                    self.strings.append('')<br />                    self.line += 1<br />                    print self.line<br />                elif event.key == K_ESCAPE:<br />                    sys.exit()<br />                elif event.key == K_BACKSPACE:<br />                    if self.strings&#91;self.line&#93; == '' and self.line &gt; 0:<br />                        self.strings = self.strings&#91;0:-1&#93;<br />                        self.line -= 1<br />                    else:<br />                        self.strings&#91;self.line&#93; = self.strings&#91;self.line&#93;&#91;0:-1&#93;<br />                else:<br />                    self.strings&#91;self.line&#93; = (str(self.strings&#91;self.line&#93; + event.unicode))<br />                   <br />    def draw(self, screen):<br />        #print self.strings, self.line<br />        screen.fill((0, 0, 0))<br />        for line in range(len(self.strings)):<br />            img_line = self.font.render(self.strings&#91;line&#93;, 1, (255, 255, 255))<br />            screen.blit(img_line, (self.ipos_x, self.ipos_y + self.dist * line))<br />    def que_escribio(self):<br />        return self.strings&#91;0&#93;#Esto es para salvar solo la primera linea del nombre<br /><br />&quot;&quot;&quot;Esta muestra los puntajes&quot;&quot;&quot;<br />def Lospuntajes():<br />    pygame.init()<br />    size = (Ancho,Alto)<br />    screen = pygame.display.set_mode(size)<br />    pygame.display.set_caption(&quot;Puntajes más altos&quot;)<br />    # creamos la ventana y le indicamos un titulo:<br />    posx = Ancho<br />    posy = Alto<br />    #definimos la fuente<br />    fuente1 = pygame.font.Font(DSM, 25)<br />    pygame.mouse.set_visible(False)<br />    sprites = pygame.sprite.RenderClear()<br />    boton = OKButton((400,400))<br />    pygame.init()<br />    mira=Mira()<br />    sprites.add(mira)<br />    sprites.add(boton)<br />    #Reordenamos los elementos de la lista<br />    puntajes.sort() #Ordena los elementos de menor a mayor<br />    puntajes.reverse() #Los colocamos de mayor a menor<br />    cuantos_hay = len(puntajes)<br />    puntajes.remove(puntajes&#91;cuantos_hay-1&#93;)#asi elimina el ultimo de la lista<br />    i=0<br />    j=0<br />    Ejemplo = True<br />    while Ejemplo:<br />        events = pygame.event.get()<br />        for event in events:<br />            if event.type == QUIT:<br />                Ejemplo = False<br />            elif event.type == KEYDOWN and event.key == K_ESCAPE:<br />                Ejemplo = False<br />        screen.fill(Black)<br />        puntos1 = str(puntajes&#91;0&#93;&#91;0&#93;)<br />        puntos2 = str(puntajes&#91;1&#93;&#91;0&#93;)<br />        puntos3 = str(puntajes&#91;2&#93;&#91;0&#93;)<br />        nombre1 = puntajes&#91;0&#93;&#91;1&#93;<br />        nombre2 = puntajes&#91;1&#93;&#91;1&#93;<br />        nombre3 = puntajes&#91;2&#93;&#91;1&#93;<br />        #Les asignamos la fuente<br />        _1 = fuente1.render(u&quot;1°&quot;, 1, White)<br />        _2 = fuente1.render(u&quot;2°&quot;, 1, White)<br />        _3 = fuente1.render(u&quot;3°&quot;, 1, White)<br />        ###########################<br />        a1 = fuente1.render(puntos1, 1, White)<br />        a2 = fuente1.render(nombre1, 1, White)<br />        b1 = fuente1.render(puntos2, 1, White)<br />        ###########################<br />        b2 = fuente1.render(nombre2, 1, White)<br />        c1 = fuente1.render(puntos3, 1, White)<br />        c2 = fuente1.render(nombre3, 1, White)<br />        #pasamos a dibujarlos<br />        screen.blit(_1,(5,(Alto*1/8)))<br />        screen.blit(a1,((Ancho*3/4),(Alto*1/8)))<br />        screen.blit(a2,((Ancho/4),(Alto*1/8)))<br />        #############################<br />        screen.blit(_2,(5,(Alto*2/8)))<br />        screen.blit(b1,((Ancho*3/4),(Alto*2/8)))<br />        screen.blit(b2,((Ancho/4),(Alto*2/8)))<br />        ##############################<br />        screen.blit(_3,(5,(Alto*3/8)))<br />        screen.blit(c1,((Ancho*3/4),(Alto*3/8)))<br />        screen.blit(c2,((Ancho/4),(Alto*3/8)))<br />        #####################<br />        pygame.display.flip()<br /><br />def main():<br />    pygame.init()<br />    screen = pygame.display.set_mode((Ancho, Alto))<br />    pygame.display.set_caption(&quot;Guardar Puntos; Escribe tu nombre&quot;)<br />    pygame.mouse.set_visible(False)<br />    sprites = pygame.sprite.RenderClear()<br />    boton = OKButton((400,400))<br />    pygame.init()<br />    mira=Mira()<br />    sprites.add(mira)<br />    sprites.add(boton)<br />    escritura = Escritura()<br />    salir = False<br />    while salir == False:<br />        events = pygame.event.get()<br />        for event in events:<br />            if event.type == QUIT:<br />                salir = True<br />        if event.type == MOUSEBUTTONDOWN:<br />            if event.button == 1 and pygame.sprite.collide_rect(mira, boton):<br />                print &quot;\n!!!!!!!!!!!!Contanto contacto!!!!!!!!!!!!\n&quot;<br />                puntajes.insert(0,&#91;3000,escritura.que_escribio()&#93;)<br />                puntajes.sort() #Ordena los elementos de menor a mayor<br />                puntajes.reverse() #Los colocamos de mayor a menor<br />                cuantos_hay = len(puntajes)<br />                puntajes.remove(puntajes&#91;cuantos_hay-1&#93;)#asi elimina el ultimo de la lista<br />                Guardar(puntajes)<br />                Lospuntajes()<br />        escritura.update(events)<br />        display.update()<br />        sprites.update()<br />        escritura.draw(screen)<br />        sprites.draw(screen)<br />        pygame.display.flip()<br /><br />if __name__ == '__main__': <br />    main()<br /></code></dd></dl><br />Se que hay una parte muy impractica.<br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Sobre la consulta de la ñ, no he llegado a probar, pero creo<br />que si al string lo escribes como unicode, debería funcionar<br /></div></blockquote><br /><br />En realidad dentro del codigo no hay problea, el problema es si piensa guardarlo como &quot;Niñoálgó&quot; <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />¿Alguien conoce una forma más practica de hacerlo? <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Vie Nov 19, 2010 6:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2010-11-17T15:09:20+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4431#p4431</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4431#p4431"/>
<title type="html"><![CDATA[Re: Sobre como guardar los puntajes]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4431#p4431"><![CDATA[
Buenas, antetodo muchas gracias por compartir tu ejemplo, yo creo<br />que está muy bien.<br /><br />Lo único que le cambiaría es la forma en la que se graba el registro, porque<br />he visto que python tiene un módulo para eso, se llama pickle.<br /><br />Lo interesante de pickle, es que te permite tomar un objeto (casi cualquiera<br />que quieras) y lo puede escribir en un archivo, luego, también puede recuperarlo.<br /><br />Imagina este este ejemplo, tenemos un diccionario cualquiera con<br />los puntajes de nuestros usuarios:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>mis_puntajes = {<br />        'pepe': 1000,   <br />        'otro': 600,    <br />        'principiante': 100,<br />        }<br /></code></dd></dl><br /><br />Para volcarlos en un archivo de disco<br />solamente tienes que ejecutar esto:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import cPickle<br /><br />archivo = open(&quot;puntajes.txt&quot;, 'w')<br />cPickle.dump(mis_puntajes, archivo)<br />archivo.close()<br /></code></dd></dl><br /><br />y listo, ahora el archivo puntajes tiene<br />todo el dicciónario almacenado en un formato<br />semi-binario.<br /><br />Luego, para cargar los puntajes del archivo, por<br />ejemplo cuando inicia el juego, hay que escribir algo<br />así:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>archivo = open(&quot;puntajes.txt&quot;, 'r')<br />mis_puntajes_recuperados = cPickle.load(archivo)<br />archivo.close()<br /></code></dd></dl><br /><br />Es decir, cpickle opera siempre con un archivo, y tiene dos<br />funciones, una para volcar contenido a un archivo (dump) y<br />otra para recuperar datos de un archivo y llevarlo a <br />memoria (load).<br /><br />Sobre la consulta de la ñ, no he llegado a probar, pero creo<br />que si al string lo escribes como unicode, debería funcionar:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- conding: utf-8 -*-<br />cadena = u'niño'<br /></code></dd></dl><br /><br />las cadenas unicode en python se pueden declarar<br />usando el prefijo &quot;u&quot;.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Mié Nov 17, 2010 3:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2010-11-16T02:18:18+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4428#p4428</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4428#p4428"/>
<title type="html"><![CDATA[Sobre como guardar los puntajes]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=930&amp;p=4428#p4428"><![CDATA[
Bueno, soy nuevo en este foro, y no sabia donde publicarlo, espero que este sea el lugar indicado.<br /><br />Cuando creamos un juego, nos topamos con una curiosa problemática si mas de una persona decide jugarlo, y es con el guardar los puntajes.<br /><br />Imaginemos un hipotético juego donde han logrado 1000 puntos, ¿Donde los guardamos?<br /><dl class="codebox"><dt>Code: </dt><dd><code>#!/usr/bin/python<br /># -*- coding: utf-8 -*-<br />import os<br />import sys<br />import pygame<br />from pygame import *<br /><br />def load_image(name, colorkey=False):<br />    #crea una ruta a la carpeta de datos<br />    #al escribirlo de esa forma, nos aseguramos<br />    #de que pueda abrir en todos los S.O.<br />    #donde este instalado python<br />    fullname = os.path.join(name)<br />    #comprobamos si existe la imagen<br />    try:<br />        image = pygame.image.load(fullname)<br />    except pygame.error, message:<br />        print 'No se puede cargar la imagen: ', fullname<br />        raise SystemExit, message<br />    #combierte la imagen para que pygame la pueda usar<br />    image = image.convert()<br />    #En este punto asignamos el colorkey<br />    #es decir, un color de base al que se<br />    #borrara dejando solo el canal alfa (transparencia)<br />    if colorkey:<br />        colorkey = image.get_at((0, 0))<br />        image.set_colorkey(colorkey, RLEACCEL)<br />    #devuelve la imagen y la recta de la imagen<br />    return (image, image.get_rect())<br /><br />&quot;&quot;&quot;Mira, el objeto con el que se remplaza el &quot;ratón&quot;...&quot;&quot;&quot;<br />class Mira(pygame.sprite.Sprite):<br />    def __init__(self):<br />        pygame.sprite.Sprite.__init__(self)<br />        (self.image, self.rect) = load_image('mira.png', True)<br />    def update(self):<br />        posicion = pygame.mouse.get_pos()<br />        self.rect.center = posicion<br />        # Evita que la mira salga del rango permitido.<br />        if self.rect.left &lt; 0:<br />            self.rect.left = 0<br />        elif self.rect.right &gt; 450:<br />            self.rect.right = 450<br />        if self.rect.top &lt;= 0:<br />            self.rect.top = 0<br />        elif self.rect.bottom &gt;= 450:<br />            self.rect.bottom = 450<br />            <br />&quot;&quot;&quot; Creamos una clase para el botton&quot;&quot;&quot;<br />class OKButton(pygame.sprite.Sprite):<br />    def __init__(self, initialpos):<br />        (self.initialx, self.initialy)=initialpos<br />        pygame.sprite.Sprite.__init__(self)<br />        (self.image, self.rect) = load_image('Ok.png', True)<br />    def update(self):<br />        posicion= self.initialx, self.initialy<br />        self.rect.center = posicion<br /><br />&quot;&quot;&quot;Clase para guardar&quot;&quot;&quot;<br />class SaveGame():<br />    def __init__(self):<br />        pass<br />    &quot;&quot;&quot; Esta seción es una reutilización de código<br />    def Abrir(self, nombre):<br />        self.nombre = nombre<br />        self.archivo = open((self.nombre), &quot;r&quot;)<br />        self.lectura = (self.archivo).readline()<br />        self.diccionario = ast.literal_eval((self.lectura))<br />        (self.archivo).close()<br />        return self.diccionario<br />    &quot;&quot;&quot;<br />    def Guardar(self, nombre, diccionario):<br />        self.nombre = nombre<br />        self.diccionario = diccionario<br />        self.texto =  str(self.diccionario)<br />        self.archivo = open((self.nombre), &quot;w&quot;)<br />        self.escribir = (self.archivo).write((self.texto))<br />        (self.archivo).close()<br />        print &quot;Puntaje salvado&quot;<br />    def Info(self):<br />        print &quot;&quot;&quot;<br />Este es el modulo encargado de leer y guardar los archivos durante el juego, <br />&quot;Abrir&quot; se defie como nombre_clase.Abrir(&quot;nombredel.archivo&quot;)<br />&quot;Guardar&quot; se define como nombre_clase.Guardar(&quot;Nombre del archivo&quot;, diccionario_de_datos)<br />supongo que no tengo que decir que si se guardara otro tipo de dato seria...desastroso&quot;&quot;&quot;<br /><br />class Escritura():<br />    def __init__(self):<br />        self.line = 0<br />        self.strings = &#91;'',&#93;<br />        #self.font = pygame.font.Font('dejavu.ttf', 12) #(*1)<br />        self.font = pygame.font.Font(None, 28)<br />        self.dist = 20<br />        self.ipos_x = 50<br />        self.ipos_y = 50<br />       <br />    def update(self, events):<br />        for event in events:<br />            if event.type == KEYDOWN:<br />                if event.key == K_RETURN:<br />                    self.strings.append('')<br />                    self.line += 1<br />                    print self.line<br />                elif event.key == K_ESCAPE:<br />                    sys.exit()<br />                elif event.key == K_BACKSPACE:<br />                    if self.strings&#91;self.line&#93; == '' and self.line &gt; 0:<br />                        self.strings = self.strings&#91;0:-1&#93;<br />                        self.line -= 1<br />                    else:<br />                        self.strings&#91;self.line&#93; = self.strings&#91;self.line&#93;&#91;0:-1&#93;<br />                else:<br />                    self.strings&#91;self.line&#93; = str(self.strings&#91;self.line&#93; + event.unicode)<br />                   <br />    def draw(self, screen):<br />        #print self.strings, self.line<br />        screen.fill((0, 0, 0))<br />        for line in range(len(self.strings)):<br />            img_line = self.font.render(self.strings&#91;line&#93;, 1, (255, 255, 255))<br />            screen.blit(img_line, (self.ipos_x, self.ipos_y + self.dist * line))<br />    def que_escribio(self):<br />        return self.strings&#91;0&#93;#Esto es para salvar solo la primera linea del nombre<br />           <br />def main():<br />    pygame.init()<br />    screen = pygame.display.set_mode((450, 450))<br />    pygame.display.set_caption(&quot;Guardar Puntos; Escribe tu nombre&quot;)<br />    #pygame.mouse.set_visible(False)<br />    sprites = pygame.sprite.RenderClear()<br />    boton = OKButton((400,400))<br />    pygame.init()<br />    mira=Mira()<br />    sprites.add(mira)<br />    sprites.add(boton)<br />    salvar = SaveGame()<br />    escritura = Escritura()<br />    salir = False<br />    while salir == False:<br />        events = pygame.event.get()<br />        for event in events:<br />            if event.type == QUIT:<br />                salir = True<br />        if event.type == MOUSEBUTTONDOWN:<br />            if event.button == 1:<br />                if pygame.sprite.collide_rect(mira, boton):<br />                                #Aqui es donde guardamos y salimos<br />                                salvar.Guardar(&quot;Arch.txt&quot;,{&quot;Nombre&quot;:escritura.que_escribio(),&quot;Puntaje&quot; :1000})<br />                                salir = True<br />        escritura.draw(screen)<br />        sprites.draw(screen)<br />        escritura.update(events)<br />        display.update()<br />        sprites.update()<br />        pygame.display.flip()<br /><br />if __name__ == '__main__': <br />    main()<br /></code></dd></dl><br />Pantallazo.png<br />Bueno, lo que hace es escribir un archivo llamado Arch.txt una linea con <br /><blockquote class="uncited"><div><br />{&quot;Nombre&quot;:Barajas,&quot;Puntaje&quot; :1000}<br /></div></blockquote><br /><br />Se que esta muy &quot;verde&quot;, pero creo que puede mejorarse.<br />Subo el archivo con todo y las imágenes que utilice.<br /><br />Mi duda es:<br />¿Si puede mejorarse, como?<br />¿Hay forma de poder incluir la ñ?<br />¿Existe una mejor forma de mostrar los puntajes y guardarlos?<br />Si existe, ¿Cual es?<br />¿Dejare de hacer preguntas <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ?<br />Gracias de antemano  <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br />P.D. Utilice como base el código de endaramis en esta misma pagina=<br /><!-- l --><a class="postlink-local" href="http://www.losersjuegos.com.ar/foro/viewtopic.php?t=353">viewtopic.php?t=353</a><!-- l --><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Mar Nov 16, 2010 2:18 am</p><hr />
]]></content>
</entry>
</feed>