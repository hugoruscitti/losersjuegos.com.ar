<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=230" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2008-01-30T15:06:36+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=230</id>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-01-30T15:06:36+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=867#p867</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=867#p867"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=867#p867"><![CDATA[
Hola Hugo.<br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />si puedes visita la sección y corrobora que todo esté bien.<br /></div></blockquote>Lo he mirado y me ha parecido que todo está correcto. Y es buena idea poner el enlace al tema.<br /><br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Nuevamente gracias por sumar tu ejemplo a la web.<br /></div></blockquote>Gracias a ti! esta web me ha dado casi todo lo que se de pygame así que compartir este ejemplo es lo mínimo que puedo hacer. Y me alegro de haber ayudado a que crezca un poco la web que por cierto... me fijé en los autores y me dí cuenta de que muchos de los ejemplos son tuyos, valoro mucho tu esfuerzo, y aprovecho para animarte a continuar porque realmente son de gran ayuda <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_wink.gif" alt=";)" title="Wink" /> y a ver si se suma mas gente...<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mié Ene 30, 2008 3:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-01-30T10:37:09+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=866#p866</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=866#p866"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=866#p866"><![CDATA[
<blockquote><div><cite>dvd escribió:</cite><br /><blockquote><div><cite>hugoruscitti escribió:</cite>Me preguntaba si tal vez te gustaría colocar este ejemplo en la web, al menos yo quisiera que esté ahí (queda a elección tuya, sin presiones). Imagino que incluso se podría colocar una versión adicional, añadiendo sonidos a los rebotes.<br /></div></blockquote>Pues no hay ningún problema! (bueno... siempre y cuando sea con la licencia libre, pero supongo que ya lo tienes en cuenta). Es mas, es todo un honor para mi, me alegro de que haya gustado a alguien de tu nivel.<br /><br />Respecto a lo de la versión expandida tampoco me importa pero yo tengo problemas con el micrófono y creo que no podré grabar un sonido. Tu tienes algo hecho ya? (por cierto... quería haber contestado antes pero tenia que estudiar y soy lento escribiendo) El código para que suene el sonido creo que no serán mas de 5 líneas así que supongo que será fácil de hacer.<br /><br />Saludos.</div></blockquote><br /><br />Perfecto, me alegra que pueda subir el ejemplo a la web. Mira, en<br />la siguiente dirección he subido el ejemplo:<br /><br />    <!-- m --><a class="postlink" href="http://www.losersjuegos.com.ar/referencia/ejemplos/ejemplos.php">http://www.losersjuegos.com.ar/referenc ... emplos.php</a><!-- m --><br /><br />si puedes visita la sección y corrobora que todo esté bien. Apenas<br />tuve tiempo para tomar las capturas de pantalla y añadir un sonido<br />de un sitio web con sonidos de libre utilización <br />(<!-- m --><a class="postlink" href="http://freesound.iua.upf.edu/">http://freesound.iua.upf.edu/</a><!-- m -->).<br /><br />Lamentablemente no he tenido mucho tiempo para consultarte<br />antes de subir el ejemplo, pero igualmente, si encuentras algo<br />para corregir avisame y subo el cambio.<br /><br />Nuevamente gracias por sumar tu ejemplo a la web.<br /><br />PD: sobre la licencia, queda bajo GPLv2 como indicaste en el <br />       principio del archivo.<br /><br />Saludos<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Mié Ene 30, 2008 10:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-01-29T19:19:54+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=865#p865</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=865#p865"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=865#p865"><![CDATA[
Buenas!<br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />El motivo del 'return' es terminar inmediatamente el bucle de juego; como<br />'return' está dentro de la función 'main', significa que terminará la<br />ejecución del programa.<br /></div></blockquote>Gracias, me tenía un poco desconcertado ya que era la primera vez que lo veo (a lo que estoy acostumbrado es al sys.exit() ). Ahora ya se otra manera mas de utilizar el return. <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Me preguntaba si tal vez te gustaría colocar este ejemplo en la web, al menos yo quisiera que esté ahí (queda a elección tuya, sin presiones). Imagino que incluso se podría colocar una versión adicional, añadiendo sonidos a los rebotes.<br /></div></blockquote>Pues no hay ningún problema! (bueno... siempre y cuando sea con la licencia libre, pero supongo que ya lo tienes en cuenta). Es mas, es todo un honor para mi, me alegro de que haya gustado a alguien de tu nivel.<br /><br />Respecto a lo de la versión expandida tampoco me importa pero yo tengo problemas con el micrófono y creo que no podré grabar un sonido. Tu tienes algo hecho ya? (por cierto... quería haber contestado antes pero tenia que estudiar y soy lento escribiendo) El código para que suene el sonido creo que no serán mas de 5 líneas así que supongo que será fácil de hacer.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mar Ene 29, 2008 7:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-01-27T20:45:45+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=862#p862</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=862#p862"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=862#p862"><![CDATA[
Hola dvd, estoy muy contento al ver que has podido resolver el problema<br />que me surgió al modificar el código. ¡Ahora funciona perfecto!.<br /><br />Me preguntaba si tal vez te gustaría colocar este ejemplo en la web, al menos<br />yo quisiera que esté ahí (queda a elección tuya, sin presiones). Imagino que<br />incluso se podría colocar una versión adicional, añadiendo sonidos a los<br />rebotes.<br /><br /><br /><blockquote><div><cite>dvd escribió:</cite><br />PD: que hace el return este? bueno... mas bien, como? (ya que supongo que sirve para cerrar el programa cuando por ejemplo haces clic en la X)<br /><dl class="codebox"><dt>Code: </dt><dd><code>        for e in pygame.event.get&#40;&#41;:<br />            if e.type == QUIT:<br />                return</code></dd></dl><br /></div></blockquote><br /><br />El motivo del 'return' es terminar inmediatamente el bucle de juego; como<br />'return' está dentro de la función 'main', significa que terminará la<br />ejecución del programa.<br /><br />Hay muchas otras formas de hacer esto igualmente, lo mas habitual es contar<br />con una variable adicional que indique el estado de ejecución del programa:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>def main&#40;&#41;:<br />    running = True<br /><br />    while running:<br />        actualizar_logica&#40;&#41;<br />        mostrar_graficos&#40;&#41;<br /><br />        if existe_algun_motivo_para_salir:<br />            running = False<br /></code></dd></dl><br /><br />o lo que produce el mismo resultado:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>def main&#40;&#41;:<br />    while True:<br />        actualizar_logica&#40;&#41;<br />        mostrar_graficos&#40;&#41;<br /><br />        if existe_algun_motivo_para_salir:<br />            return<br /></code></dd></dl><br /><br />Nota que 'existe_algun_motivo_para_salir' podría ser cualquier condición<br />que se nos ocurra, en muchos juegos suele ser la pulsación de una tecla<br />como Escape, el cierre de la ventana principal, o haber seleccionado la<br />opción 'salir' en algún menú.<br /><br />En el código anterior busqué terminar el programa cuando el usuario<br />pulse el botón para cerrar la ventana. Pygame notifica todos los eventos<br />que llegan a la ventana mediante el módulo 'event'. Por ejemplo, la<br />llamada a:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>pygame.event.get&#40;&#41;<br /></code></dd></dl><br /><br />devuelve una lista de todos los eventos que se registraron en la ventana desde<br />la anterior ejecución de esta misma sentencia. Cada uno de los elementos de<br />esta lista es un objeto &quot;Event&quot; como los de la biblioteca SDL. Así que para<br />distinguirlos solo tienes que consultar su atributo 'type'. Dejo un ejemplo<br />ilustrativo de como manejar los eventos de pulsación de tecla y cierre de<br />ventana:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>import pygame<br /><br />screen = pygame.display.set_mode&#40;&#40;320, 240&#41;&#41;<br />running = True<br /><br />while running:<br />    lista_de_eventos = pygame.event.get&#40;&#41;<br /><br />    if lista_de_eventos:<br /><br />        for evento in lista_de_eventos:<br />            if evento.type == pygame.QUIT:<br />                print &quot;El usuario cerro la ventana&quot;<br />                running = False<br />            elif evento.type == pygame.KEYDOWN:<br />                print &quot;El usuario pulso la tecla&quot;, evento.key<br />            else:<br />                # Otro tipo de evento -&gt; No hacer nada<br />                pass<br /></code></dd></dl><br /><br />Entonces, para resumir, en el código de la vez anterior 'return' termina<br />el bucle, 'event.type == QUIT' significa 'cuando el usuario cierra la<br />ventana' y 'pygame.event.get()' retorna todos los eventos que llegan<br />a la ventana. O algo así...<br /><br /><br /><br />Un saludo grande, muy bueno tu programa de ejemplo. Reitero mis ganas de<br />que se publique en la sección ejemplos de la web.<br /><br />Suerte.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Dom Ene 27, 2008 8:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-01-25T19:12:56+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=860#p860</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=860#p860"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=860#p860"><![CDATA[
Muchas graciasss!!! <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Esto es lo que quería... ya tuve un problema con un intento de tetris que lo tengo que empezar desde el principio, cuando ya hacía bastantes cosas, porque me puse a escribir código sobre la marcha sin pararme a pensar mucho en las ideas generales.<br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />http://mundogeek.net/traducciones/guia-estilo-python.htm<br /><!-- m --><a class="postlink" href="http://www.python.org/dev/peps/pep-0008/">http://www.python.org/dev/peps/pep-0008/</a><!-- m --><br /></div></blockquote>Le he echado un vistazo y esto también me será muy útil, incluso para practicar mi inglés que he notado que es de gran ayuda.<br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Hola, me gusta mucho como funciona el programa, es muy realista, parecen bolas<br />de billard rebotando (sin detenerse).<br /></div></blockquote>Me alegro de que te guste. Yo también pensé lo mismo que tu y poco después de hacer eso me puse a trabajar en choque con rectas, que puede servir no solo para billard sino minigolf, pinball... tengo bastantes ideas en la cabeza y algunos cálculos en papel pero ahora falta pasarlo al ordenador y que funcione. Ya lo publicaré si lo consigo. Supongo que ahora irá mas rápido el desarrollo porque he tenido que repasar un libro de matemáticas olvidado y además estoy pasando algunos exámenes.<br /><br /><br /><blockquote><div><cite>hugoruscitti escribió:</cite><br />Lo bueno de seguir esta recomendación se nota cuando lees o escribes código<br />con otras personas, hace mas consistente el intercambio de código.<br /><br />Para mostrar estas ideas traté de hacer una versión modificada de tu código.<br />Lamentablemente, parece que copié algo mal, porque las esferas a veces<br />colisionan de manera incorrecta. Te paso el código al menos a modo<br />ilustrativo:<br /></div></blockquote>Pues las dos cosas están relacionadas, cuando escribía el código lo hice pensando en el centro de coordenadas en la esquina inferior izquierda para no crear conflictos con el sinus y luego RESTABA la &quot;velocidad Y&quot; pero ahora me doy cuenta que sería mejor seguir unas pautas y he cambiado unos signos en el método &quot;colisiona_con&quot; para que las dos velocidades se sumen.<br />También he añadido unas lineas para solucionar un bug que encontré: habían veces (muy pocas) que una bola se quedaba &quot;atrapada&quot; en un llado, supongo que porque chocaba contra la pared y otra bola al mismo tiempo. Me costó de encontrar porque mirando el código, a simple vista parece que con lo de poner el rectángulo dentro de la pantalla ya se solucione, pero también hay que poner las posiciones &quot;self.x&quot; y self.y&quot;. Se que es algo rebuscado y espero que no te siente mal ya que no era mi intención buscarte fallos, como ya dije antes, tu código me ha servido de gran ayuda.<br /><br /><br />Copio todo entero que creo que será mas cómodo que no cosas sueltas y además se me puede olvidar alguna cosa.<br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Modificaciones: Hugo Ruscitti<br /># Licencia: GPL 2<br /><br />import pygame<br />from pygame.locals import *<br />from math import *<br />from pygame.sprite import Sprite<br /><br />width = 500<br />height = 200<br /><br />class Bola&#40;Sprite&#41;:<br />    &quot;Representa una bola que rebota en pantalla.&quot;<br /><br />    def __init__&#40;self, x, y, radio, color=&#40;0, 255, 0&#41;&#41;:<br />        Sprite.__init__&#40;self&#41;<br />        self.x, self.y = x, y<br />        self.radio = radio<br />        self._crear_imagen&#40;radio, color&#41;<br />        self.rect = self.image.get_rect&#40;self.image&#41;<br />        self.empujar&#40;0, 0&#41;<br /><br />    def _crear_imagen&#40;self, radio, color&#41;:<br />        ancho = alto = radio * 2<br />        self.image = pygame.Surface&#40;&#40;ancho, alto&#41;&#41;.convert&#40;&#41;<br />        self.image.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        pygame.draw.circle&#40;self.image, color, &#40;radio, radio&#41;, radio&#41;<br /><br />    def update&#40;self&#41;:<br />        self.x += self.dx<br />        self.y += self.dy<br />        self.rect.center = &#40;self.x, self.y&#41;<br />        self.verificar_limites&#40;&#41;<br /><br />    def verificar_limites&#40;self&#41;:<br />        &quot;Evita que una bola salga de la pantalla.&quot;<br /><br />        if self.rect.left &lt; 0:<br />            self.rect.left = 0<br />            self.x = self.radio<br />            self.dx *= -1<br />        elif self.rect.right &gt; width:<br />            self.rect.right = width<br />            self.x = width - self.radio<br />            self.dx *= -1<br /><br />        if self.rect.top &lt; 0:<br />            self.rect.top = 0<br />            self.y = self.radio<br />            self.dy *= -1<br />        elif self.rect.bottom &gt; height:<br />            self.rect.bottom = height<br />            self.y = height - self.radio<br />            self.dy *= -1<br /><br />    def empujar&#40;self, dx, dy&#41;:<br />        self.dx = dx<br />        self.dy = dy<br /><br />    def colisiona_con&#40;self, otra&#41;:<br />        &quot;&quot;&quot;Reacciona si existe una colision con otra bola.<br /><br />        Retorna True si se produce la colisión, False en caso contrario.&quot;&quot;&quot;<br />        x, y, r = self.x, self.y, self.radio<br /><br />        if hypot&#40;&#40;x - otra.x&#41;, &#40;y - otra.y&#41;&#41; &lt; r + otra.radio:<br />            if otra.x - self.x == 0:<br />                a = pi / 2.0<br />            else:<br />                a = atan&#40;&#40;self.y - otra.y&#41; / &#40;otra.x - self.x&#41;&#41;<br /><br />            v1r = self.dx * cos&#40;-a&#41; - &#40;-self.dy&#41; * sin&#40;-a&#41;<br />            v1s = self.dx * sin&#40;-a&#41; + &#40;-self.dy&#41; * cos&#40;-a&#41;<br />            v2r = otra.dx * cos&#40;-a&#41; - &#40;-otra.dy&#41; * sin&#40;-a&#41;<br />            v2s = otra.dx * sin&#40;-a&#41; + &#40;-otra.dy&#41; * cos&#40;-a&#41;<br />            v1r,  v2r = v2r,  v1r<br />            self.dx = v1r * cos&#40;a&#41; - v1s * sin&#40;a&#41;<br />            self.dy = -&#40;v1r * sin&#40;a&#41; + v1s * cos&#40;a&#41;&#41;<br />            otra.dx = v2r * cos&#40;a&#41; - v2s * sin&#40;a&#41;<br />            otra.dy = -&#40;v2r * sin&#40;a&#41; + v2s * cos&#40;a&#41;&#41;<br />            return True<br />        else:<br />            return False<br /><br />def informar_colisiones&#40;bolas&#41;:<br />    copia_grupo = pygame.sprite.Group&#40;bolas&#41;<br /><br />    for a in bolas:<br />        for b in copia_grupo:<br />            if a != b and a.colisiona_con&#40;b&#41;:<br />                copia_grupo.remove&#40;a&#41;<br />                copia_grupo.remove&#40;b&#41;<br /><br />def actualizar_pantalla&#40;screen, bolas&#41;:<br />    screen.fill&#40;&#40;0, 0, 0&#41;&#41;<br />    bolas.draw&#40;screen&#41;<br />    pygame.display.flip&#40;&#41;<br /><br />def main&#40;&#41;:<br />    screen = pygame.display.set_mode&#40;&#40;width, height&#41;&#41;<br />    bolas = pygame.sprite.Group&#40;&#41;<br /><br />    b1 = Bola&#40;x=400, y=100, radio=10&#41;<br />    b1.empujar&#40;-1.5, 0.4&#41;<br /><br />    b2 = Bola&#40;250, 100, 20, color=&#40;255, 0, 0&#41;&#41;<br />    b2.empujar&#40;1.2, 0.4&#41;<br /><br />    b3 = Bola&#40;40, 100, 10, color=&#40;100, 0, 250&#41;&#41;<br />    b3.empujar&#40;1.5, 0.3&#41;<br /><br />    bolas.add&#40;&#91;b1, b2, b3&#93;&#41;<br /><br />    clock = pygame.time.Clock&#40;&#41;<br /><br />    while True:<br />         <br />        for e in pygame.event.get&#40;&#41;:<br />            if e.type == QUIT:<br />                return<br />           <br />        clock.tick&#40;300&#41;<br />        actualizar_pantalla&#40;screen, bolas&#41;<br />        bolas.update&#40;&#41;<br />        colisiones = informar_colisiones&#40;bolas&#41;<br /><br />if __name__ == '__main__':<br />    main&#40;&#41; <br /></code></dd></dl><br /><br />PD: que hace el return este? bueno... mas bien, como? (ya que supongo que sirve para cerrar el programa cuando por ejemplo haces clic en la X)<dl class="codebox"><dt>Code: </dt><dd><code>        for e in pygame.event.get&#40;&#41;:<br />            if e.type == QUIT:<br />                return</code></dd></dl><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Vie Ene 25, 2008 7:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2008-01-21T20:12:08+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=856#p856</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=856#p856"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=856#p856"><![CDATA[
Hola, me gusta mucho como funciona el programa, es muy realista, parecen bolas<br />de billard rebotando (sin detenerse).<br /><br />Con respecto a las sugerencias, tengo solo dos para realizar.<br /><br />1. Obsevo que la información de cada bola está almacenada como una lista, cada<br />atributo es una posición de esta lista:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>bolas.append&#40;&#91;60.0,&#91;400.0,300.0&#93;,&#91;6.5,0.3&#93;&#93;&#41;</code></dd></dl><br /><br />el primero es el radio, lo segundo es la posición inicial y el tercero es<br />la velocidad de movimiento.<br /><br />Creo que es mas sencillo cuando el código se desarrolla en base a entidades<br />como objetos, donde cada atributo queda representado por un nombre, y no una<br />posición especifica. En este caso podría ser:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>bola = Bola&#40;x=400, y=300, radio=60&#41;<br />bola.empujar&#40;6.5, 0.3&#41;<br /></code></dd></dl><br /><br />O directamente:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>bola = Bola&#40;400, 300, 60&#41; ...</code></dd></dl><br /><br />si quieres omitir el nombre de los argumentos.<br /><br />Luego, a cada elemento 'Bola' puedes añadirlo a una lista de sprites<br />para mostrar en pantalla.<br /><br />2. Existe una recomendación de estilo que siguen muchos programadores<br />de python. La idea consiste en seguir algunas reglas sencillas al momento de<br />escribir, buscando que el código escrito sea mas fácil de leer y modificar. <br /><br />Estas sugerencias incluyen dejar espacios entre operadores, <br />como así también usar tabulaciones de 4 espacios y muchas<br />cosas mas. Te dejo el artículo que explica estas convenciones y<br />su traducción al español:<br /><br />    <!-- m --><a class="postlink" href="http://mundogeek.net/traducciones/guia-estilo-python.htm">http://mundogeek.net/traducciones/guia- ... python.htm</a><!-- m --><br />    <!-- m --><a class="postlink" href="http://www.python.org/dev/peps/pep-0008/">http://www.python.org/dev/peps/pep-0008/</a><!-- m --><br /><br />Lo bueno de seguir esta recomendación se nota cuando lees o escribes código<br />con otras personas, hace mas consistente el intercambio de código.<br /><br /><br /><br />Para mostrar estas ideas traté de hacer una versión modificada de tu código.<br />Lamentablemente, parece que copié algo mal, porque las esferas a veces<br />colisionan de manera incorrecta. Te paso el código al menos a modo<br />ilustrativo:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20080121/test_balls.png" alt="Imagen" /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Modificaciones: Hugo Ruscitti<br /># Licencia: GPL 2<br /><br />import pygame<br />from pygame.locals import *<br />from math import *<br />from pygame.sprite import Sprite<br /><br />width = 500<br />height = 200<br /><br />class Bola&#40;Sprite&#41;:<br />    &quot;Representa una bola que rebota en pantalla.&quot;<br /><br />    def __init__&#40;self, x, y, radio, color=&#40;0, 255, 0&#41;&#41;:<br />        Sprite.__init__&#40;self&#41;<br />        self.x, self.y = x, y<br />        self.radio = radio<br />        self._crear_imagen&#40;radio, color&#41;<br />        self.rect = self.image.get_rect&#40;self.image&#41;<br />        self.empujar&#40;0, 0&#41;<br /><br />    def _crear_imagen&#40;self, radio, color&#41;:<br />        ancho = alto = radio * 2<br />        self.image = pygame.Surface&#40;&#40;ancho, alto&#41;&#41;.convert&#40;&#41;<br />        self.image.set_colorkey&#40;&#40;0, 0, 0&#41;&#41;<br />        pygame.draw.circle&#40;self.image, color, &#40;radio, radio&#41;, radio&#41;<br /><br />    def update&#40;self&#41;:<br />        self.x += self.dx<br />        self.y += self.dy<br />        self.rect.center = &#40;self.x, self.y&#41;<br />        self.verificar_limites&#40;&#41;<br /><br />    def verificar_limites&#40;self&#41;:<br />        &quot;Evita que una bola salga de la pantalla.&quot;<br /><br />        if self.rect.left &lt; 0:<br />            self.rect.left = 0<br />            self.dx *= -1<br />        elif self.rect.right &gt; width:<br />            self.rect.right = width<br />            self.dx *= -1<br /><br />        if self.rect.top &lt; 0:<br />            self.rect.top = 0<br />            self.dy *= -1<br />        elif self.rect.bottom &gt; height:<br />            self.rect.bottom = height<br />            self.dy *= -1<br /><br />    def empujar&#40;self, dx, dy&#41;:<br />        self.dx = dx<br />        self.dy = dy<br /><br />    def colisiona_con&#40;self, otra&#41;:<br />        &quot;&quot;&quot;Reacciona si existe una colision con otra bola.<br /><br />        Retorna True si se produce la colisión, False en caso contrario.&quot;&quot;&quot;<br />        x, y, r = self.x, self.y, self.radio<br /><br />        if hypot&#40;&#40;x - otra.x&#41;, &#40;y - otra.y&#41;&#41; &lt; r + otra.radio:<br />            if otra.x - self.x == 0:<br />                a = pi / 2.0<br />            else:<br />                a = atan&#40;&#40;self.y - otra.y&#41; / &#40;otra.x - self.x&#41;&#41;<br /><br />            v1r = self.dx * cos&#40;-a&#41; - &#40;self.dy&#41; * sin&#40;-a&#41;<br />            v1s = self.dx * sin&#40;-a&#41; + &#40;self.dy&#41; * cos&#40;-a&#41;<br />            v2r = otra.dx * cos&#40;-a&#41; - &#40;otra.dy&#41; * sin&#40;-a&#41;<br />            v2s = otra.dx * sin&#40;-a&#41; + &#40;otra.dy&#41; * cos&#40;-a&#41;<br />            v1r,  v2r = v2r,  v1r<br />            self.dx = v1r * cos&#40;a&#41; - v1s * sin&#40;a&#41;<br />            self.dy = &#40;v1r * sin&#40;a&#41;&#41; + &#40;v1s * cos&#40;a&#41;&#41;<br />            otra.dx = v2r * cos&#40;a&#41; - v2s * sin&#40;a&#41;<br />            otra.dy = &#40;v2r * sin&#40;a&#41;&#41; + &#40;v2s * cos&#40;a&#41;&#41;<br />            return True<br />        else:<br />            return False<br /><br />def informar_colisiones&#40;bolas&#41;:<br />    copia_grupo = pygame.sprite.Group&#40;bolas&#41;<br /><br />    for a in bolas:<br />        for b in copia_grupo:<br />            if a != b and a.colisiona_con&#40;b&#41;:<br />                copia_grupo.remove&#40;a&#41;<br />                copia_grupo.remove&#40;b&#41;<br /><br />def actualizar_pantalla&#40;screen, bolas&#41;:<br />    screen.fill&#40;&#40;0, 0, 0&#41;&#41;<br />    bolas.draw&#40;screen&#41;<br />    pygame.display.flip&#40;&#41;<br /><br />def main&#40;&#41;:<br />    screen = pygame.display.set_mode&#40;&#40;width, height&#41;&#41;<br />    bolas = pygame.sprite.Group&#40;&#41;<br /><br />    b1 = Bola&#40;x=400, y=100, radio=10&#41;<br />    b1.empujar&#40;-1.5, 0.4&#41;<br /><br />    b2 = Bola&#40;250, 100, 20, color=&#40;255, 0, 0&#41;&#41;<br />    b2.empujar&#40;1.2, 0.4&#41;<br /><br />    b3 = Bola&#40;40, 100, 10, color=&#40;100, 0, 250&#41;&#41;<br />    b3.empujar&#40;1.5, 0.3&#41;<br /><br />    bolas.add&#40;&#91;b1, b2, b3&#93;&#41;<br /><br />    clock = pygame.time.Clock&#40;&#41;<br /><br />    while True:<br />          <br />        for e in pygame.event.get&#40;&#41;:<br />            if e.type == QUIT:<br />                return<br />            <br />        clock.tick&#40;300&#41;<br />        actualizar_pantalla&#40;screen, bolas&#41;<br />        bolas.update&#40;&#41;<br />        colisiones = informar_colisiones&#40;bolas&#41;<br /><br />if __name__ == '__main__':<br />    main&#40;&#41;<br /></code></dd></dl><br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Lun Ene 21, 2008 8:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2008-01-15T18:04:26+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=847#p847</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=847#p847"/>
<title type="html"><![CDATA[Choque de bolas (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=230&amp;p=847#p847"><![CDATA[
Este es un ejemplo básico de simulación física de choques totalmente elásticos en bolas con la misma masa. <br /><br />Lo de ejemplo básico es porque no tiene interacción con el usuario, los cambios se tienen que hacer desde el código, y no tiene archivos de imagen ni de fondo, ya que así lo he visto mas conveniente.<br /><br />Me hubiese gustado explicarlo pero voy falto de tiempo y no se cuando lo hubiese acabado. Si alguien quiere hacerlo por mi... no me enfadaré <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />Soy novato, no solo en lo de los videojuegos sino en la programación en general, por lo tanto, lo mas normal es que mi código no estará del todo bien. Si tenéis sugerencias para mejorarlo, me gustaría que las expongáis.<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code># -*- coding: utf-8 -*-<br />#<br /># Autor: David Ramírez<br /># Licencia: GPL 2<br /><br />import pygame<br />from pygame.locals import *<br />from math import *<br /><br />width = 500<br />height = 500<br /><br />def detectar_colisiones &#40;bolas&#41;:<br />   bolas1 = list&#40;&#41;<br />   colisiones = list&#40;&#41;<br />   for bola1 in range &#40;len&#40;bolas&#41;&#41;:<br />      bolas1.append&#40;bola1&#41;<br />      for bola2 in range &#40;len&#40;bolas&#41;&#41;:<br />         if bola2 not in bolas1:<br />            if hypot &#40;&#40;bolas&#91;bola2&#93;&#91;1&#93;&#91;0&#93;-bolas&#91;bola1&#93;&#91;1&#93;&#91;0&#93;&#41;, &#40;bolas&#91;bola1&#93;&#91;1&#93;&#91;1&#93;-bolas&#91;bola2&#93;&#91;1&#93;&#91;1&#93;&#41;&#41; &lt; &#40;bolas&#91;bola1&#93;&#91;0&#93; + bolas&#91;bola2&#93;&#91;0&#93;&#41;:<br />               colisiones.append&#40;&#91;bolas&#91;bola1&#93;,bolas&#91;bola2&#93;&#93;&#41;<br />   return colisiones<br /><br />def limites &#40;screen,bolas&#41;:<br />   for bola in bolas:<br />      if bola&#91;1&#93;&#91;0&#93;-bola&#91;0&#93; &lt; 0 and bola&#91;2&#93;&#91;0&#93; &lt; 0:<br />         bola&#91;2&#93;&#91;0&#93; = -bola&#91;2&#93;&#91;0&#93;<br />      elif bola&#91;1&#93;&#91;0&#93;+bola&#91;0&#93; &gt; width and bola&#91;2&#93;&#91;0&#93; &gt; 0:<br />         bola&#91;2&#93;&#91;0&#93; = -bola&#91;2&#93;&#91;0&#93;<br />      if bola&#91;1&#93;&#91;1&#93;-bola&#91;0&#93; &lt; 0 and bola&#91;2&#93;&#91;1&#93; &gt; 0:<br />         bola&#91;2&#93;&#91;1&#93; = -bola&#91;2&#93;&#91;1&#93;<br />      elif bola&#91;1&#93;&#91;1&#93;+bola&#91;0&#93; &gt; height and bola&#91;2&#93;&#91;1&#93; &lt; 0:<br />         bola&#91;2&#93;&#91;1&#93; = -bola&#91;2&#93;&#91;1&#93;<br /><br />def colision_bolas &#40;bola1, bola2&#41;:<br />   if bola2&#91;1&#93;&#91;0&#93;-bola1&#91;1&#93;&#91;0&#93; == 0:<br />      a = pi/2.0<br />   else:<br />      a = atan &#40;&#40;bola1&#91;1&#93;&#91;1&#93;-bola2&#91;1&#93;&#91;1&#93;&#41;/&#40;bola2&#91;1&#93;&#91;0&#93;-bola1&#91;1&#93;&#91;0&#93;&#41;&#41;<br />   v1r = bola1&#91;2&#93;&#91;0&#93;*cos&#40;-a&#41;-&#40;bola1&#91;2&#93;&#91;1&#93;&#41;*sin&#40;-a&#41;<br />   v1s = bola1&#91;2&#93;&#91;0&#93;*sin&#40;-a&#41;+&#40;bola1&#91;2&#93;&#91;1&#93;&#41;*cos&#40;-a&#41;<br />   v2r = bola2&#91;2&#93;&#91;0&#93;*cos&#40;-a&#41;-&#40;bola2&#91;2&#93;&#91;1&#93;&#41;*sin&#40;-a&#41;<br />   v2s = bola2&#91;2&#93;&#91;0&#93;*sin&#40;-a&#41;+&#40;bola2&#91;2&#93;&#91;1&#93;&#41;*cos&#40;-a&#41;<br />   v1r, v2r = v2r, v1r<br />   bola1&#91;2&#93;&#91;0&#93; = v1r*cos&#40;a&#41;-v1s*sin&#40;a&#41;<br />   bola1&#91;2&#93;&#91;1&#93; = &#40;v1r*sin&#40;a&#41;&#41;+&#40;v1s*cos&#40;a&#41;&#41;<br />   bola2&#91;2&#93;&#91;0&#93; = v2r*cos&#40;a&#41;-v2s*sin&#40;a&#41;<br />   bola2&#91;2&#93;&#91;1&#93; = &#40;v2r*sin&#40;a&#41;&#41;+&#40;v2s*cos&#40;a&#41;&#41;<br /><br />def actualizar_posicion&#40;bolas&#41;:<br />   for bola in bolas:<br />      bola&#91;1&#93;&#91;0&#93; += bola&#91;2&#93;&#91;0&#93;<br />      bola&#91;1&#93;&#91;1&#93; -= bola&#91;2&#93;&#91;1&#93;<br /><br />def actualizar_pantalla&#40;screen,bolas&#41;:<br />   screen.fill&#40;&#40;0,0,0&#41;&#41;<br />   for bola in bolas:<br />      pygame.draw.circle&#40;screen, &#40;0,255,0&#41;, &#40;int&#40;bola&#91;1&#93;&#91;0&#93;&#41;,int&#40;bola&#91;1&#93;&#91;1&#93;&#41;&#41;, int&#40;bola&#91;0&#93;&#41;&#41;<br />   pygame.display.flip&#40;&#41;<br /><br />def main&#40;&#41;:<br />   screen = pygame.display.set_mode&#40;&#40;width,height&#41;&#41;<br />   bolas = list&#40;&#41;<br />   #bolas.append&#40;&#91;Radio,&#91;Posicion X, Posicion Y&#93;,&#91;Velocidad X, Velocidad Y&#93;&#93;&#41;<br />   bolas.append&#40;&#91;25.0,&#91;400.0,300.0&#93;,&#91;1.5,0.3&#93;&#93;&#41;<br />   bolas.append&#40;&#91;25.0,&#91;410.0,50.0&#93;,&#91;1.0,0.0&#93;&#93;&#41;<br />   bolas.append&#40;&#91;25.0,&#91;240.0,50.0&#93;,&#91;-0.0,0.0&#93;&#93;&#41;<br />   bolas.append&#40;&#91;25.0,&#91;360.0,50.0&#93;,&#91;1.0,0.0&#93;&#93;&#41;<br />   bolas.append&#40;&#91;25.0,&#91;290.0,50.0&#93;,&#91;-0.0,0.0&#93;&#93;&#41;<br />   clock = pygame.time.Clock&#40;&#41;<br />   while True:<br />      clock.tick&#40;300&#41;<br />      actualizar_pantalla&#40;screen,bolas&#41;<br />      colisiones = detectar_colisiones&#40;bolas&#41;<br />      for colision in colisiones:<br />         colision_bolas&#40;colision&#91;0&#93;,colision&#91;1&#93;&#41;<br />      actualizar_posicion&#40;bolas&#41;<br />      limites&#40;screen,bolas&#41;<br /><br />if __name__ == '__main__': main&#40;&#41;</code></dd></dl><br /><br />PD: no se yo si a alguien le resultará útil... pero ya que lo tenía hecho, lo comparto por si acaso.<br />PD2: en ejemplos de esta web he visto algo de colisiones pero escrito en c o c++ (creo, no lo se) y hay gente (como yo) que no entiende ese lenguaje.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mar Ene 15, 2008 6:04 pm</p><hr />
]]></content>
</entry>
</feed>