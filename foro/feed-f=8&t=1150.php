<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=1150" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2011-05-14T20:27:50+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=1150</id>
<entry>
<author><name><![CDATA[elzorro]]></name></author>
<updated>2011-05-14T20:27:50+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5544#p5544</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5544#p5544"/>
<title type="html"><![CDATA[Re: juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5544#p5544"><![CDATA[
Gracias en serio, la verdad seguire intentando pero no por hoy creo que me conformo por ahora con tener los movimientos y los limites cosa que al principio no crei que podria.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2434">elzorro</a> — Sab May 14, 2011 8:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kaiser]]></name></author>
<updated>2011-05-14T16:13:30+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5541#p5541</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5541#p5541"/>
<title type="html"><![CDATA[Re: juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5541#p5541"><![CDATA[
Deja que te de un consejo: si quieres dibujar líneas paralelas no uses una regla porque sea una herramienta fácil de usar, aprende a utilizar la escuadra y el cartabón que son herramientas diseñadas para esa tarea y que por lo tanto, a la larga, te facilitarán la vida.<br /><br />Como has visto para manejar correctamente la gestión de colisiones entre sprites es necesario utilizar una función. Pygame te ofrece funciones para eso, así que si aprendes a utilizarlas no tendrás que diseñar tú una función para eso (representar la nave como una matriz de puntos).<br /><br />En cualquier caso, si estás decidido a crear dicha función de detección de colisiones te recomiendo que lo enfoques de la siguiente manera. Puesto que cada casilla de la matriz representa un píxel y sabes el tamaño (en píxeles) que ocupan los sprites de las naves, puedes dejar el funcionamiento de las naves tal y como está, es decir, la nave está representada por un 1 en la matriz, pero añade un función que a partir de ese 1 genere una lista con todas las casillas (píxeles) que están siendo ocupadas por dicho sprite. Además deberás crear otra función que compare las listas de puntos de ambas naves y vea si alguno coincide.<br /><br />Ten en cuenta que normalmente el centro del sprite (coordenada (0,0)) no coincide con el centro &quot;geográfico&quot; del sprite, sino que normalmente, la mayoría de bibliotecas multimedia, sitúan la coordenada (0,0) en la esquina superior izquierda del sprite.<br /><br />Te dejo más información sobre eso: <a href="http://www.losersjuegos.com.ar/foro/viewtopic.php?f=9&amp;t=965&amp;p=4694#p4694" class="postlink">http://www.losersjuegos.com.ar/foro/viewtopic.php?f=9&amp;t=965&amp;p=4694#p4694</a>.<br /><br />En cuanto al tema de las balas tienes que modificar la función de la siguiente manera: por un lado creas una función que al pulsar la R crea una bala, por ejemplo, se pone un flag bala1 = True. Por otro lado creas otra función, por ejemplo, gestionar_bala(), ésta función detectará si existe alguna bala (bala1 = True) y en ese caso caso irá actualizando la posición de la bala (apoyándose en el while externo, no en uno propio), en el momento en que esa bala colisione con la nave contraria o salga de los límites del mapa gestionar_bala() pondrá bala1 = False. Para poder hacer ésto gestionar_bala() deberá asegurase de que la coordenada de la bala sea menor que las coordenadas del límite del mapa y a la vez comparar esa coordenada con la lista de puntos que representa a la nave enemiga.<br /><br />Un Saludo!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2347">kaiser</a> — Sab May 14, 2011 4:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[elzorro]]></name></author>
<updated>2011-05-14T14:47:27+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5539#p5539</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5539#p5539"/>
<title type="html"><![CDATA[Re: juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5539#p5539"><![CDATA[
Hola muchas gracias por responder mi petición, pues yo use las matrices por que pense en su facilidad de uso  y quisiera terminarlo asi, ademas estuve pensando y pense en representar a la nave no como un solo numero si no como una matriz mas pequeña dentro de esa gran matriz pero la verdad intente hacer una funcion y llamarla en una variable pero no he logrado hacer que funcione en la matriz principal, hago esto por que tengo problemas con las colisiones entre naves, al parecer se colisionan a veces pero como representan un unico uno dentro de una matriz es complicado, creo que por eso asi las naves se choquen si no llegan al centro de la nave no se cumplira la condicion de la colision que lo que hace es regresar a la nave golpeada a la posicion inicial. En cuanto a la bala pues pense que para que recorriera la matriz deberia ir aumentando continuamente hasta que golpe la nave o llege a un limite por que si lo hago con un if solo se movera una posicion <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2434">elzorro</a> — Sab May 14, 2011 2:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kaiser]]></name></author>
<updated>2011-05-14T10:38:08+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5538#p5538</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5538#p5538"/>
<title type="html"><![CDATA[Re: juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5538#p5538"><![CDATA[
Hola elzorro!<br /><br />Aquí en LosersJuegos hay una traducción al español de la API de pygame (<a href="http://www.losersjuegos.com.ar/traducciones/pygame" class="postlink">http://www.losersjuegos.com.ar/traducciones/pygame</a>).<br /><br />Además hay un montón de tutoriales sobre el desarrollo de juegos con pygame (<a href="http://www.losersjuegos.com.ar/referencia" class="postlink">http://www.losersjuegos.com.ar/referencia</a>).<br /><br />Creo que debería ser suficiente para que las &quot;clases para juegos&quot; dejen de ser un tema ajeno.<br /><br />En cualquier caso deberías tener en cuenta que los juegos suelen estructurarse en tres bloques:<br /><br />1. Bloque de Inicialización.<br />     (Importación de librerías y módulos, creación de la ventana de juego e inicialización de las variables)<br /><br />2. Bloque de Lógica y Control.<br />     (Detección de teclas pulsadas, detección de colisiones, actualización de las coordenadas de los sprites y actualización del estado de los diferentes elementos de juego (contadores de puntuación, vida de los personajes, ...))<br /><br />3. Bloque de Refresco.<br />     (Se redibuja la ventana de juego con los nuevos valores)<br /><br />Los bloques 2 y 3 van dentro de un bucle while de manera que constantemente detectemos el input, apliquemos la lógica de juego y refresquemos la ventana.<br /><br />Aplicando ésto a tu código verás que no es necesario que para cada tecla blitees todos los sprites. El tema del bliteado debe ir al final de código y las funciones que detectan las teclas pulsadas deben limitarse a actualizar las coordenadas de los sprites.<br /><br />En cuanto a lo de las balas... no entiendo por qué le asignas un bucle while propio. Creo que lo haces porque así solo bliteas la bala mientras está en el aire, pero para eso lo mejor es que modifiques la función de tal forma que sea capaz de determinar cuando hay que blitear la bala y cuando no, así como sus coordenadas, y le pase ésta información al bloque de refresco.<br /><br />Un Saludo!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2347">kaiser</a> — Sab May 14, 2011 10:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[elzorro]]></name></author>
<updated>2011-05-14T02:36:25+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5537#p5537</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5537#p5537"/>
<title type="html"><![CDATA[Re: juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5537#p5537"><![CDATA[
Me disculpo si he infringido alguna regla del foro pero no encontre el tema de reglas generales, por lo general siempre las reviso por que siempre incumplo algo asi sea pequeño y me borran el tema jeje pero no aqui en otros foros y de otras cosas.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2434">elzorro</a> — Sab May 14, 2011 2:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[elzorro]]></name></author>
<updated>2011-05-14T02:26:41+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5536#p5536</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5536#p5536"/>
<title type="html"><![CDATA[juego de naves en pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1150&amp;p=5536#p5536"><![CDATA[
Hola comunidad de loserjuegos, la verdad hace poco que empece a meterme al mundo de la programacion  en especifico con python y ahora he querido realizar un juego usando pygame pero tengo un par de problemas, la verdad me guie al principio con guias de muchas paginas pero lastimosamente usan clases para los juegos y es un tema del cual soy ajeno, por lo que he decidido hacer el juego solo usando matrices, bueno la verdad despues de mucho trabajo y de conocer algunos codigos de pygame he podido lograr que se muevan las naves y crear limites para que no se salgan ni de la matriz de ni la pantalla de pygame pero me he quedado corto con el tema de los disparos y es por que meti la condicion de disparo dentro de un ciclo y lastimosamente mientras ese ciclo se ejecuta, el juego se congela y cuando termina vuelve a la normalidad, osea que no puedo realizar ningun movimiento mientras la bala esta en curso.<br /><br />bueno espero que me puedan ayudar y muchas gracias.<br /><br />el codigo esta a continuacion:<br /><pre class="prettyprint linenums">import sys,pygame<br />from pygame.locals import *<br /><br />WIDTH = 800<br />HEIGHT = 600<br /><br />#==============================================================<br /># Funcion para crear la matriz.<br />def matriz&#40;fila,columna&#41;:<br />    i=0<br />    m=[]<br />    while i&lt;fila:<br />        c=0<br />        M=[]<br />        while c&lt;columna:<br />            M+=[0]<br />            c+=1<br />        m+=[M]<br />        i+=1<br />    return m <br /><br /><br /><br />def pytanks &#40;&#41;:<br />    pygame.init&#40;&#41;<br />    # creamos la ventana y le agregamos un titulo:<br />    screen = pygame.display.set_mode&#40;&#40;WIDTH, HEIGHT&#41;&#41;<br />    pygame.display.set_caption&#40;&quot;naves py&quot;&#41;<br />    fondo = pygame.image.load&#40;&quot;data/fondo.jpg&quot;&#41;.convert&#40;&#41;<br />    # Indicamos la posicion de las &quot;Surface&quot; sobre la ventana<br />    jugador1=pygame.image.load&#40;&quot;data/comp.png&quot;&#41;.convert_alpha&#40;&#41;<br />    jugador2=pygame.image.load&#40;&quot;data/jugador.png&quot;&#41;.convert_alpha&#40;&#41;<br />    bala1=pygame.image.load&#40;&quot;data/bala1.png&quot;&#41;.convert_alpha&#40;&#41;<br />    bala2=pygame.image.load&#40;&quot;data/bala2.png&quot;&#41;.convert_alpha&#40;&#41;<br />    x1=1<br />    y1=250 # estas son las variables iniciales para el jugador 1 &#40;en pixeles&#41;<br />    <br />    x2=680<br />    y2=250 #y estas son las del jugador 2<br />    MAT=matriz&#40;WIDTH,HEIGHT&#41;# aqui se dibuja la matriz que una lista de lista es<br />    #igual a un pixel<br />    screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />    screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />    screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />    pygame.display.update&#40;&#41;<br />    x11=9<br />    y11=249<br />    x22=679<br />    y22=249<br />    b1=x1<br />    b2=x2 #esto son las balas que dispararan desde donde se encuentre cualquier<br />    #nave en el eje X.<br />    b11=x11<br />    b22=x22<br /><br />   <br /><br /><br /><br />    <br />               <br /><br />    while True:<br />        MAT[x11][y11]=1<br />        MAT[x22][y22]=2<br />        <br />        press=pygame.key.get_pressed&#40;&#41;<br />        #para la nave del primer jugador<br />        if press[K_w]:<br />            #movimiento en la pantalla de pygame<br />        <br />            y1-=1<br />            <br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            #movimiento en matriz<br />        <br />            y11-=1<br /><br />            <br />            <br />            MAT[x11][y11]=1<br />            MAT[x11][y11+1]=0<br />           <br />            <br />            <br />            <br />            #es necesario poner todos los blits ya que :<br />            #1. si no ponemos fondo, se verá el rastro de la nave sobre el fondo<br />            #2. si no ponemos jug..2, con presionar K_UP solo una vez, la nave<br />            #   de jug..2 desaparecerá de la pantalla.<br />            #así que es mejor poner los blits de todas las imagenes y update<br />            #la mayoria de las veces.   <br />        if press[K_s]:<br />            y1+=1<br />           <br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />                <br />            y11+=1<br />            <br />            MAT[x11][y11]=1<br />            MAT[x11][y11-1]=0<br />            <br />            <br />        if press[K_d]:<br />            x1+=1<br />            <br />                <br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />                <br />            x11+=1<br />            <br />            MAT[x11][y11]=1<br />            MAT[x11-1][y11]=0<br />            <br />            <br />        if press[K_a]:<br />            x1-=1<br />            <br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />                <br />            x11-=1<br />            <br />            MAT[x11][y11]=1<br />            MAT[x11+1][y11]=0<br /><br />        if press[K_r]:<br />            while MAT[b11][y11]!=2 and b11&lt;WIDTH-20:<br />                b1+=2<br />                b11+=2<br />                screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />                screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />                screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />                screen.blit&#40;bala1,&#40;b1,y1&#41;&#41;<br />                pygame.display.update&#40;&#41;<br />                MAT[b11][y11]=3<br />                MAT[b11-2][y11]=0<br />                <br />            <br /><br />               <br />                <br />            if b11&gt;=WIDTH-20:<br />                b1=x1<br />                b11=x11<br />                screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />                screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />                screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />                screen.blit&#40;bala1,&#40;b1,y1&#41;&#41;<br />                pygame.display.update&#40;&#41;<br />                MAT[b11][y11]=3<br />                MAT[b11-2][y11]=0<br />                <br />            elif MAT[b11][y11]==2:<br />                b1=x1<br />                b11=x11<br />                x2=680<br />                x22=679<br />                y2=250<br />                y22=249<br />                screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />                screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />                screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />                screen.blit&#40;bala1,&#40;b1,y1+15&#41;&#41;<br />                pygame.display.update&#40;&#41;<br />                MAT[b11][y11]=3<br />                MAT[b11-2][y11]=0<br /><br />            <br />        #Condiciones para que la nave no salga de pantalla si en algun evento<br />        # de movimiento intenta hacerlo.<br />        <br /><br />        if x11&lt;=0: # si x11 &#40;posicion en matriz&#41; es menor o igual a 0#<br />            x1=0   # x1 retorna a la posicion 0<br />            x11=x11+1 #se suma una unidad a la posicion x11<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41; #se actualizan todas las funciones de python<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />        if y11&lt;=0:<br />            y1=0<br />            y11=y11+1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />        if x11&gt;=703:<br />            x1=703<br />            x11=x11-1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />        if y11&gt;=530:<br />            y1=530<br />            y11=y11-1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            <br />        <br />        <br />        <br />            <br />            <br />            <br />        #para la nave del segundo jugador<br />        if press[K_UP]:<br />            y2-=1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            y22-=1<br />            MAT[x22][y22]=2<br />            MAT[x22][y22+1]=0<br />        <br />        if press[K_DOWN]:<br />            y2+=1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            y22+=1<br />            MAT[x22][y22]=2<br />            MAT[x22][y22-1]=0<br />           <br />            <br />            <br />        if press[K_RIGHT]:<br />            x2+=1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            x22+=1<br />            MAT[x22][y22]=2<br />            MAT[x22-1][y22]=0<br />            <br />            <br />            <br />        if press[K_LEFT]:<br />            x2-=1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />            x22-=1<br />            MAT[x22][y22]=2<br />            MAT[x22+1][y22]=0<br />            <br /><br />        if x22&lt;=0:<br />            x2=0<br />            x22=x22+1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br /><br />        if x22&gt;=699:<br />            x2=699<br />            x22=x22-1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />        <br />            <br />        if y22&lt;=0:<br />            y2=0<br />            y22=y22+1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br />        if y22&gt;=533:<br />            y2=533<br />            y22=y22-1<br />            screen.blit&#40;fondo,&#40;0,0&#41;&#41;<br />            screen.blit&#40;jugador1,&#40;x1,y1&#41;&#41;<br />            screen.blit&#40;jugador2,&#40;x2,y2&#41;&#41;<br />            pygame.display.update&#40;&#41;<br /><br /> <br />        for event in pygame.event.get&#40;&#41;:<br />            if event.type == pygame.QUIT:<br />                sys.exit&#40;&#41;<br /><br /><br /><br />if __name__ == &quot;__main__&quot;:<br />    pytanks&#40;&#41;</pre><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2434">elzorro</a> — Sab May 14, 2011 2:26 am</p><hr />
]]></content>
</entry>
</feed>