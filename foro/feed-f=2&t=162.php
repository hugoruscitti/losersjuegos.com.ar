<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=162" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2007-09-29T16:30:15+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=162</id>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2007-09-29T16:30:15+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=574#p574</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=574#p574"/>
<title type="html"><![CDATA[[Apuntes C++] Punteros]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=574#p574"><![CDATA[
<blockquote><div><cite>julen26 escribió:</cite><br />realmente parece interesante!<br /><br />Has dicho que &quot;DDD&quot; actua junto con dbg, por lo tanto necesitaría dbg no?<br />Eso también lo puedo instalar mediante apt-get?<br /><br />saludos<br /></div></blockquote>Sí, puedes ejecutar:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>sudo apt-get install ddd gdb</code></dd></dl><br /><br />y se instalan ambos. También puedes utilizar &quot;pydb&quot; si usas<br />python.<br /><br />pd: ten en cuenta que el nombre del depurador es &quot;gdb&quot;, en <br />      tu mensaje anterior está escrito de otra manera.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Sab Sep 29, 2007 4:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[julen26]]></name></author>
<updated>2007-09-29T10:26:50+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=572#p572</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=572#p572"/>
<title type="html"><![CDATA[[Apuntes C++] Punteros]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=572#p572"><![CDATA[
realmente parece interesante!<br /><br />Has dicho que &quot;DDD&quot; actua junto con dbg, por lo tanto necesitaría dbg no?<br />Eso también lo puedo instalar mediante apt-get?<br /><br />saludos<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1416">julen26</a> — Sab Sep 29, 2007 10:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2007-09-28T22:04:07+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=568#p568</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=568#p568"/>
<title type="html"><![CDATA[[Apuntes C++] Punteros]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=568#p568"><![CDATA[
Hola 'julen26', ante todo quiero dar las gracias por tus tutoriales, me .<br />ha venido bien leer algo sobre punteros y estructuras, y creo que servirá<br />a muchas otras personas también.<br /><br />Lo único que puedo agregar desde aquí es un simple comentario: existe<br />un programa muy interesante llamado &quot;DDD&quot;, que permite conocer el estado<br />de un programa (por ejemplo el valor de cada variable o puntero) de forma<br />que un programador puede analizar y corregir errores.<br /><br />Este programa actúa junto a 'gdb', el depurador histórico que desarrolló<br />Richard Stallman (el creador del proyecto GNU, la FSF, la licencia GPL, <br />emacs etc...).<br /><br />Lo interesante de &quot;DDD&quot;, en este caso, está en que nos permite colocar<br />&quot;puntos de corte&quot; (breakpoints) para detener el programa, y con un simple<br />'doble click' en cada variable podremos conocer el valor de la misma. Aquí<br />dejo una captura de pantalla del programa en funcionamiento:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20070928/ddd1.png" alt="Imagen" /><br /><br />el único requisito para utilizar &quot;DDD&quot; es compilar el programa indicando<br />al compilador que necesitamos &quot;depurar&quot; el programa. Eso se puede hacer<br />colocando el parámetro '-g' o '-ggdb3' al generar un fichero objeto:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>gcc -ggdb3 -c -o ejemplo.o ejemplo.c<br />gcc ejemplo.o -o ejemplo</code></dd></dl><br /><br />bueno, en este caso el programa realizado está en C, pero también funciona<br />con programas desarrollados en C++.<br /><br />Creo que es un magnifico programa para conocer un poco mas acerca de como<br />funciona un programa &quot;por dentro&quot;.<br /><br />Aquí dejo otra captura de pantalla mostrando 2 estructuras conectadas por<br />un puntero, también conocidos como nodos de una lista:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20070928/ddd2.png" alt="Imagen" /><br /><br />esas variables con valores feos como &quot;0x31a...&quot; son punteros, y puedes<br />hacer 'doble-click' sobre ellos para conocer a donde apuntan.<br /><br /><br /><br />Ah, lo olvidaba, para instalar el programa solo necesitan escribir lo<br />siguiente desde un terminal del sistema Ubuntu o Debian GNU/Linux:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>sudo apt-get install ddd</code></dd></dl><br /><br />todo lo necesario para usar el programa se instalará directamente desde<br />los repositorios de la distribución. Ahora solo resta ejecutar &quot;DDD&quot; con<br />el programa a inspeccionar:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>ddd http://losersjuegos.com.ar/foro/ejemplo</code></dd></dl><br /><br />Es todo, y nuevamente gracias 'julen26'.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Vie Sep 28, 2007 10:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[julen26]]></name></author>
<updated>2007-09-25T21:22:24+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=556#p556</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=556#p556"/>
<title type="html"><![CDATA[[Apuntes C++] Punteros]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=162&amp;p=556#p556"><![CDATA[
Hola!! como mi primer mensaje, decir que el tiempo que e estado observando este lugar, a sido largo. Y después de leer articulos y etc. me doy cuenta de que este puede ser mi sitio.<br /><br />Aqui traigo apuntes sobre unas sesiones de aprendizaje a tiempo real que me hizo un amigo mio, Diego. Voy completando los apuntes y los pondré aquí. Son simples, para gente que aún no sabe sobre ello.<br /><br />Esta vez traigo sobre los punteros, luego colocaré el de sobre las estructuras. Repito: no es nada muy extendido, es lo muy básico y puede servir de referencia.<br /><br />Las variables se almacenan en la memoria. La ventaja es que el acceso a la memoria es muy rápido, por lo que puedes leer variables y tambien escribirlas. Si en cambio se usa el disco duro para almacenar variables, sería mucho mas lento.<br />El lugar donde se guarda la variable en la memoria se puede identificar por un valor. Y C/C++ tiene la capacidad de acceder directamente a la memoria, conociendo el valor que indica donde se encuentra.<br />Un puntero se declara usando el * . <br />Por ejemplo para declarar una variable haces lo siguente:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>int variable ;<br /><br />Y para declarar un puntero se hace así:<br /><br />int *variable ;</code></dd></dl><br /><br />Con esto se declara un puntero que apunta a un tipo de variable int, es decir, que el puntero contendrá la direccion en la memoria de una variable tipo int.<br />Existe tambien este poerador, que es el &amp;, este operador devuelve la direccion en la memoria donde se encuentra la variable. Lo usariamos de esta manera, despues de crear un puntero llamado 'puntero' y una variable llamada 'variable', los dos de tipo int:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>puntero = &amp;variable ;</code></dd></dl><br /><br />Con esto, en el puntero se almacenaria la direccion en la memoria donde se encuetra la variable.<br />Aqui un ejemplo:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>int main&#40;&#41;<br />&#123;<br />   //Declaramos una variable tipo int<br />   int variable ;<br />   //Definimos la variable<br />   variable = 5 ;<br />   <br />   //Declaramos el puntero, que apunta a un tipo int<br />   int *puntero ;<br />   //Definimos el puntero<br />   puntero = &amp;variable ; //Como ya se a dicho, el operador &amp; devuelve la direccion en la memoria donde se encuentra la variable y la almacena en el puntero<br />   <br />   //Mostrar la direccion en la memoria de variable<br />   printf&#40;&quot;&amp;variable  == %d\n&quot;, &amp;variable&#41; ;<br /><br />   //Mostrar la direccion en la memoria a la que apunta el puntero, que es el mismo que a donde apunta la variable<br />   printf&#40;&quot;puntero    == %d\n&quot;, puntero&#41; ;<br /><br />   //Mostrar el valor de la variable<br />   printf&#40;&quot;variable == %d\n&quot;, variable&#41; ;<br /><br />   //Mostrar el valor que se encuentra en el lugar de la memoria donde apunta el puntero, que es el mismo que la variable, ya que este puntero apunta al lugar donde esta se encuentra.<br />   printf&#40;&quot;&#40;*puntero&#41; == %d\n&quot;, &#40;*puntero&#41;&#41; ;<br /><br />   return 1 ;<br />&#125;</code></dd></dl><br /><br />Como ya se a dicho, todas las variables se almacenan en un cierto lugar de la memoria. Este lugar se identifica con un valor que en este caso se guarda en el puntero. El lugar donde se encuentra una variable en la memoria se encuentra usando el operador &amp; por delante de la variable, es decir, si haces &amp;variable obtendras el lugar donde se encuentra la variable en la memoria. Un puntero es directamente un lugar de la memoria, se dice que un puntero apunta a un lugar en la memoria.<br />Al usar el * en un puntero, obtienes el valor que se encuentra en la memoria donde apunta el puntero.<br />Ahora prueba a añadir esto antes del codigo de mostrar el valor de la variable:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>*puntero = 1 ;</code></dd></dl><br /><br />De esta manera cambias la variable a 1. Prueba y veras que es lo que cambia. Al modificar el puntero, tambien modificas directamente el valor de la memoria. Segu  el compilador que uses, seguramente se cierre enseguida el programa y no podras ver el cambio, asi que añade <dl class="codebox"><dt>Code: </dt><dd><code>getchar&#40;&#41; ;</code></dd></dl> antes del return y asi no te saldras del programa, ya que el mismo esperara a que escribas algo.<br />Tambien podeis hacer lo siguiente:<br />en vez de esto  <dl class="codebox"><dt>Code: </dt><dd><code>puntero = &amp;variable ;</code></dd></dl><br />puedes utilizar tambien esto <dl class="codebox"><dt>Code: </dt><dd><code>*&#40;&amp;variable&#41; ;</code></dd></dl> recordando el orden de los operadores.<br /><br />saludos<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1416">julen26</a> — Mar Sep 25, 2007 9:22 pm</p><hr />
]]></content>
</entry>
</feed>