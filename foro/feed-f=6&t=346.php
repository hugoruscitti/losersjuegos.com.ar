<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=346" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2008-07-07T19:12:30+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=346</id>
<entry>
<author><name><![CDATA[lacabra25]]></name></author>
<updated>2008-07-07T19:12:30+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=346&amp;p=1537#p1537</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=346&amp;p=1537#p1537"/>
<title type="html"><![CDATA[Problemas cargando musica con SDL_mixer]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=346&amp;p=1537#p1537"><![CDATA[
Hola, tengo un pequeño problemilla intentando cargar un archivo de musica que no llega ni a un mega, el resto del programa esta bien, pues si quito la parte de cargar la musica el resto del programa va bien pero si no no responde al llegar a esa parte:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>#include &lt;stdlib.h&gt;<br />#include &lt;stdio.h&gt;<br />#include &lt;math.h&gt;<br />#include &lt;time.h&gt;<br />#include &lt;SDL/SDL.h&gt;<br />#include &lt;SDL/SDL_image.h&gt;<br />#include &lt;SDL/SDL_mixer.h&gt;<br /><br />/*Definicion de constantes*/<br />/*Titulo de la ventana y texto del icono*/<br />#define TV &quot;Tanks Wars&quot;<br />#define TI &quot;Tanks Wars&quot;<br />/*Maximo de caracteres para el nombre de los drivers*/<br />#define MAXIMO_NOMBRES_DRIVERS 20<br />/*Cantidad de rojo, verde y azul para color que se utilizara como transparente en las imagenes*/<br />#define RT 255<br />#define VT 0<br />#define AT 255<br />/* Fin de la definicion de constantes*/<br /><br />/*Declaracion de funciones*/<br />/*Repite fondomenu en toda pantalla*/<br />int dibujar_fondo_menu&#40;SDL_Surface *fondomenu, SDL_Surface *pantalla&#41;;<br />/*Carga una imagen, comprueba que ha sido cargada, define el color que se usara como transparente y devuelve el puntero a la imagen cargada convertida al tipo de pixel de la pantalla*/<br />SDL_Surface * cargar_img&#40;const char *a, SDL_Surface *p&#41;;<br />/*Borra la superficie que se le pase dibujando un rectangulo negro en toda la superficie &#40;por ejemplo borra la pantalla&#41;*/<br />int borrar_superficie&#40;SDL_Surface *s&#41;;<br />/* Fin de la declaracion de funciones*/<br /><br />int main&#40;int argc, char *argv&#91;&#93;&#41;<br />&#123;<br />    /*Declaraciones de variables y punteros*/<br />    /* Declaracion de variables y punteros para el video*/<br />    SDL_Surface *pantalla, *fondomenu, *bmenua, *bmenue, *bcargando;<br />    SDL_Rect destino;<br />    char n_driver_video&#91;MAXIMO_NOMBRES_DRIVERS&#93;;<br />    /*  Fin*/<br />    /* Declaracion de variables y punteros para los eventos*/<br />    SDL_Event evento;<br />    /*  Fin*/<br />    /* Declaracion de variables y punteros para el control de la ejecucion*/<br />    register int e=1;<br />    register unsigned long int xd=0, yd=0;<br />    Uint32 tiempo;<br />    /*  Fin*/<br />    /* Declaracion de variables y punteros para la reproduccion y control de el audio*/<br />    unsigned int inicializadoaudio=0, musica=0;<br />    Mix_Music *musicamenu1;<br />    /*  Fin*/<br />    /* Fin*/<br />    /*Iniciando SDL*/<br />    if &#40;SDL_Init&#40;SDL_INIT_VIDEO|SDL_INIT_AUDIO&#41; &lt; 0&#41;<br />    &#123;<br />        printf&#40;&quot;No se pudo iniciar SDL: %s\n&quot;,SDL_GetError&#40;&#41;&#41;;<br />        exit&#40;1&#41;;<br />    &#125;<br />    atexit&#40;SDL_Quit&#41;;<br />    /* Fin del inicio de SDL*/<br />    /*Iniciar modo de video*/<br />    pantalla = SDL_SetVideoMode&#40;1280,1024,24,SDL_SWSURFACE| SDL_DOUBLEBUF| SDL_NOFRAME| SDL_FULLSCREEN&#41;;<br />    if &#40;pantalla == NULL&#41;<br />    &#123;<br />        printf&#40;&quot;No se pudo iniciar el modo gráfico: %s\n&quot;, SDL_GetError&#40;&#41;&#41;;<br />        exit&#40;1&#41;;<br />    &#125;<br />    /* Fin del inicio del modo de video*/<br />    /*   Dejando la pantalla en negro*/<br />    borrar_superficie&#40;pantalla&#41;;<br />    /*   Fin de dejando la pantalla en negro*/<br />    /*   Ocultando cursor hasta mostrar el menu despues de haber cargado las imagenes*/<br />    SDL_ShowCursor &#40;SDL_DISABLE&#41;;<br />    /*   Fin del ocultamiento del cursor*/<br />    /*Iniciar audio*/<br />    if &#40;Mix_OpenAudio&#40;44100, AUDIO_S16, 2, 4096&#41; != 0&#41;<br />    &#123;<br />        inicializadoaudio= 1;<br />        printf&#40;&quot;No se pudo inicializar el audio: %s\n&quot;, SDL_GetError&#40;&#41;&#41;;<br />    &#125;<br />    else<br />    &#123;<br />        atexit&#40;Mix_CloseAudio&#41;;<br />        Mix_VolumeMusic&#40;128&#41;;<br />    &#125;<br />    /* Fin del inicio de audio*/<br />    /*   Cambiando titulo a ventana*/<br />    SDL_WM_SetCaption&#40;TV,TI&#41;;<br />    /*   Fin de cambiando titulo a ventana*/<br />    /*   Escribiendo propiedades del modo de video admitido y usado para la correccion de errores*/<br />    printf&#40;&quot;Modo grafico: %uX%u\n&quot;, pantalla-&gt;w, pantalla-&gt;h&#41;;<br />    /*    Fin*/<br />    /*Obtencion del nombre del driver de video utilizado*/<br />    SDL_VideoDriverName&#40;&amp;n_driver_video&#91;0&#93;, MAXIMO_NOMBRES_DRIVERS&#41;;<br />    /*  Escribiendo nomre del driver para correccion de errores*/<br />    if &#40;&amp;n_driver_video&#91;0&#93; != NULL&#41;<br />    &#123;<br />        printf&#40;&quot;Driver de video: %s\n&quot;, n_driver_video&#41;;<br />    &#125;<br />    /*    Fin*/<br />    /* Fin de la obtencion del driver de video*/<br />    /*Dibujando primer menu para indicar la carga*/<br />    fondomenu= cargar_img&#40;&quot;Imagenes/fondo_menup.jpg&quot;, pantalla&#41;;<br />    dibujar_fondo_menu&#40;fondomenu, pantalla&#41;;<br />    bmenua= cargar_img&#40;&quot;Imagenes/boton_menup_apagado.png&quot;, pantalla&#41;;<br />    destino.w= bmenua-&gt;w;<br />    destino.h= bmenua-&gt;h;<br />    destino.x= &#40;&#40;pantalla-&gt;w / 2&#41; - &#40;bmenua-&gt;w / 2&#41;&#41;;<br />    destino.y= &#40;&#40;pantalla-&gt;h / 2&#41; - &#40;bmenua-&gt;h / 2&#41;&#41;;<br />    SDL_BlitSurface&#40;bmenua, NULL, pantalla, &amp;destino&#41;;<br />    SDL_Flip&#40;pantalla&#41;;<br />    SDL_Delay&#40;1000&#41;;<br />    bmenue= cargar_img&#40;&quot;Imagenes/boton_menup_encendido.png&quot;, pantalla&#41;;<br />    SDL_BlitSurface&#40;bmenue, NULL, pantalla, &amp;destino&#41;;<br />    SDL_Flip&#40;pantalla&#41;;<br />    SDL_Delay&#40;500&#41;;<br />    bcargando= cargar_img&#40;&quot;Imagenes/boton_menup_cargando.png&quot;, pantalla&#41;;<br />    SDL_BlitSurface&#40;bcargando, NULL, pantalla, &amp;destino&#41;;<br />    SDL_Flip&#40;pantalla&#41;;<br />    /* Fin*/<br />    /*Creacion de las superficies para todas las imagenes del juego y carga de las imagenes*/<br />    SDL_Surface *suelo, *bsalir, *bjugar, *bred, *bacercade, *bopciones, *cseleccion, *ecolor, *objetos;<br />    SDL_Surface *tamarillo, *trojo, *tazul, *tverde, *trosado, *tnegro;<br />    suelo= cargar_img&#40;&quot;Imagenes/suelo.jpg&quot;, pantalla&#41;;<br />    bsalir= cargar_img&#40;&quot;Imagenes/boton_menup_salir.png&quot;, pantalla&#41;;<br />    bjugar= cargar_img&#40;&quot;Imagenes/boton_menup_jugar.png&quot;, pantalla&#41;;<br />    bred= cargar_img&#40;&quot;Imagenes/boton_menup_red.png&quot;, pantalla&#41;;<br />    bacercade= cargar_img&#40;&quot;Imagenes/boton_menup_acercade.png&quot;, pantalla&#41;;<br />    bopciones= cargar_img&#40;&quot;Imagenes/boton_menup_opciones.png&quot;, pantalla&#41;;<br />    cseleccion= cargar_img&#40;&quot;Imagenes/controles_seleccion.png&quot;, pantalla&#41;;<br />    ecolor= cargar_img&#40;&quot;Imagenes/elige_color.png&quot;, pantalla&#41;;<br />    objetos= cargar_img&#40;&quot;Imagenes/objetos_escenario.png&quot;, pantalla&#41;;<br />    tamarillo= cargar_img&#40;&quot;Imagenes/tanque_ligero_amarillo.png&quot;, pantalla&#41;;<br />    trojo= cargar_img&#40;&quot;Imagenes/tanque_ligero_rojo.png&quot;, pantalla&#41;;<br />    tazul= cargar_img&#40;&quot;Imagenes/tanque_ligero_azul.png&quot;, pantalla&#41;;<br />    tverde= cargar_img&#40;&quot;Imagenes/tanque_ligero_verde.png&quot;, pantalla&#41;;<br />    trosado= cargar_img&#40;&quot;Imagenes/tanque_ligero_rosa.png&quot;, pantalla&#41;;<br />    tnegro= cargar_img&#40;&quot;Imagenes/tanque_ligero_negro.png&quot;, pantalla&#41;;<br />    /* Fin*/<br />    printf&#40;&quot;Imagenes cargadas\n&quot;&#41;;<br />    /*Cargando audio*/<br />    if &#40;inicializadoaudio == 0&#41;<br />    &#123;<br />        musicamenu1= Mix_LoadMUS&#40;&quot;Sonido/musica_menu_1.mp3&quot;&#41;;<br />    &#125;<br />    /* Fin*/<br />    printf&#40;&quot;Sonidos y musica cargados\n&quot;&#41;;<br />    /*  Mostrando el cursor*/<br />    SDL_ShowCursor &#40;SDL_ENABLE&#41;;<br />    /*  Fin de mostrando el cursor*/<br />    /*Bucle de ejecucion*/<br />    while &#40;e &gt; 0&#41;<br />    &#123;<br />        /*Iniciando musica si hace falta*/<br />        if &#40;inicializadoaudio == 0 &amp;&amp; musicamenu1 != NULL &amp;&amp; musica == 0 &amp;&amp; Mix_PlayingMusic&#40;&#41; == 0&#41;<br />        &#123;<br />            Mix_FadeInMusic&#40;musicamenu1, 0, 2000&#41;;<br />        &#125;<br />        /* Fin*/<br />        /*Preparando variable destino para el dibujado del menu*/<br />        destino.w= bmenua-&gt;w;<br />        destino.h= bmenua-&gt;h;<br />        destino.x= &#40;&#40;pantalla-&gt;w / 2&#41; - &#40;bmenua-&gt;w / 2&#41;&#41;;<br />        /*Dibujando menu principal del juego si es necesario &#40;con animacion sencilla&#41; e=1*/<br />        if &#40;e == 1&#41;<br />        &#123;<br />            dibujar_fondo_menu&#40;fondomenu, pantalla&#41;;<br />            xd= 1;<br />            for &#40;destino.y=10; destino.y &lt; pantalla-&gt;h &amp;&amp; xd &lt;= 5; destino.y+= &#40;bmenua-&gt;h + 10&#41;&#41;<br />            &#123;<br />                SDL_BlitSurface&#40;bmenua, NULL, pantalla, &amp;destino&#41;;<br />                xd++;<br />            &#125;<br />            SDL_Flip&#40;pantalla&#41;;<br />            SDL_Delay&#40;1000&#41;;<br />            xd= 1;<br />            for &#40;destino.y=10; destino.y &lt; pantalla-&gt;h &amp;&amp; xd &lt;= 5; destino.y+= &#40;bmenua-&gt;h + 10&#41;&#41;<br />            &#123;<br />                SDL_BlitSurface&#40;bmenue, NULL, pantalla, &amp;destino&#41;;<br />                SDL_Flip&#40;pantalla&#41;;<br />                if &#40;xd &gt; 1&#41;<br />                &#123;<br />                    SDL_Delay&#40;100&#41;;<br />                &#125;<br />                xd++;<br />            &#125;<br />            SDL_Delay&#40;400&#41;;<br />            destino.y= 10;<br />            SDL_BlitSurface&#40;bjugar, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bred, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bopciones, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bacercade, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bsalir, NULL, pantalla, &amp;destino&#41;;<br />            SDL_Flip&#40;pantalla&#41;;<br />        &#125;<br />        /* Fin*/<br />        /*Dibujando menu principal del juego si es necesario &#40;sin animacion&#41; e=2*/<br />        if &#40;e == 2&#41;<br />        &#123;<br />            dibujar_fondo_menu&#40;fondomenu, pantalla&#41;;<br />            destino.y= 10;<br />            SDL_BlitSurface&#40;bjugar, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bred, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bopciones, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bacercade, NULL, pantalla, &amp;destino&#41;;<br />            destino.y+=&#40;bmenua-&gt;h + 10&#41;;<br />            SDL_BlitSurface&#40;bsalir, NULL, pantalla, &amp;destino&#41;;<br />            SDL_Flip&#40;pantalla&#41;;<br />        &#125;<br />        /* Fin*/<br />        /*  e=3 para no volver a dibujar el menu en cada ejecucion del bucle mientras no sea necesario*/<br />        e= 3;<br />        /*  Fin*/<br />        /*Lectura de eventos*/<br />        while &#40; SDL_PollEvent&#40;&amp;evento&#41;&#41;<br />        &#123;<br />            /*Comprobando la pulsacion de teclas*/<br />            if &#40;evento.type == SDL_KEYDOWN&#41;<br />            &#123;<br />                switch &#40;evento.key.keysym.sym&#41;<br />                &#123;<br />                case SDLK_j:<br />                    printf&#40;&quot;Eleccion de jugar\n&quot;&#41;;<br />                    break;<br />                case SDLK_r:<br />                    printf&#40;&quot;Eleccion de jugar en red\n&quot;&#41;;<br />                    break;<br />                case SDLK_o:<br />                    printf&#40;&quot;Eleccion de opciones\n&quot;&#41;;<br />                    break;<br />                case SDLK_a:<br />                    printf&#40;&quot;Eleccion de acerca de tanks wars\n&quot;&#41;;<br />                    break;<br />                case SDLK_s:<br />                    e= 0;<br />                    break;<br />                default:<br />                    e= 3;<br />                    break;<br />                &#125;<br />            &#125;<br />            /* Fin de la comprobacion de pulsacion de teclas*/<br />            /*Comprobando los clicks del raton*/<br />            if &#40;evento.type == SDL_MOUSEBUTTONDOWN &amp;&amp; evento.button.button == SDL_BUTTON_LEFT&#41;<br />            &#123;<br />                /* Preparacion de destino para comparacion con coordenadas del raton*/<br />                destino.x= &#40;&#40;pantalla-&gt;w / 2&#41; - &#40;bmenua-&gt;w / 2&#41;&#41;;<br />                destino.y= 10;<br />                destino.w= &#40;&#40;pantalla-&gt;w / 2&#41; + &#40;bmenua-&gt;w / 2&#41;&#41;;<br />                destino.h= 10 + bmenua-&gt;h;<br />                for &#40;xd= 1; xd &lt;= 5; xd++&#41;<br />                &#123;<br />                    if &#40;evento.button.y &gt; destino.y &amp;&amp; evento.button.x &gt; destino.x &amp;&amp; evento.button.x &lt; destino.w &amp;&amp; evento.button.y &lt; destino.h&#41;<br />                    &#123;<br />                        switch &#40;xd&#41;<br />                        &#123;<br />                        case 1:<br />                            printf&#40;&quot;Eleccion de jugar\n&quot;&#41;;<br />                            break;<br />                        case 2:<br />                            printf&#40;&quot;Eleccion de jugar en red\n&quot;&#41;;<br />                            break;<br />                        case 3:<br />                            printf&#40;&quot;Eleccion de opciones\n&quot;&#41;;<br />                            break;<br />                        case 4:<br />                            printf&#40;&quot;Eleccion de acerca de tanks wars\n&quot;&#41;;<br />                            break;<br />                        case 5:<br />                            e= 0;<br />                            break;<br />                        default:<br />                            e=3;<br />                            break;<br />                        &#125;<br />                        break;<br />                    &#125;<br />                    destino.y+= 10 + bmenua-&gt;h;<br />                    destino.h= destino.y + bmenua-&gt;h;<br />                &#125;<br />            &#125;<br />            /* Fin de la comprobacion del raton*/<br />            /*Comprobando si la aplicacion debe ser redibujada por peticion del sistema operativo o refresco de pantalla*/<br />            if &#40;evento.type == SDL_VIDEOEXPOSE&#41;<br />            &#123;<br />                e= 2;<br />            &#125;<br />            /* Fin de la comprobacion de refresco*/<br />            /*Comprobando si el sistema operativo intenta cerrar la aplicacion*/<br />            if &#40;evento.type == SDL_QUIT&#41;<br />            &#123;<br />                /* Cuando este preparado los eventos del menu quitar la pulsacion de tecla de esta condicion */<br />                e= 0;<br />                break;<br />            &#125;<br />            /* Fin de la comprobacion de intento de cerrar la aplicacion por parte del sistema operativo*/<br />        &#125;<br />        /* Fin de la lectura de eventos*/<br />    &#125;<br />    /* Fin del bucle de ejecucion*/<br />    /*Parando la musica*/<br />    Mix_FadeOutMusic&#40;2000&#41;;<br />    /* Fin*/<br />    /*Finalizando la aplicacion*/<br />    /*  Ocultando el cursor*/<br />    SDL_ShowCursor &#40;SDL_DISABLE&#41;;<br />    /*  Fin de ocultando el cursor*/<br />    /*Dejando la pantalla en negro*/<br />    borrar_superficie&#40;pantalla&#41;;<br />    /* Fin de dejando la pantalla en negro*/<br />    /*Liberando superficies antes de finalizar la aplicacion*/<br />    SDL_FreeSurface&#40;tamarillo&#41;;<br />    SDL_FreeSurface&#40;trojo&#41;;<br />    SDL_FreeSurface&#40;tazul&#41;;<br />    SDL_FreeSurface&#40;tverde&#41;;<br />    SDL_FreeSurface&#40;trosado&#41;;<br />    SDL_FreeSurface&#40;tnegro&#41;;<br />    SDL_FreeSurface&#40;suelo&#41;;<br />    SDL_FreeSurface&#40;bsalir&#41;;<br />    SDL_FreeSurface&#40;bjugar&#41;;<br />    SDL_FreeSurface&#40;bred&#41;;<br />    SDL_FreeSurface&#40;bacercade&#41;;<br />    SDL_FreeSurface&#40;bopciones&#41;;<br />    SDL_FreeSurface&#40;cseleccion&#41;;<br />    SDL_FreeSurface&#40;ecolor&#41;;<br />    SDL_FreeSurface&#40;objetos&#41;;<br />    SDL_FreeSurface&#40;bcargando&#41;;<br />    SDL_FreeSurface&#40;bmenue&#41;;<br />    SDL_FreeSurface&#40;bmenua&#41;;<br />    SDL_FreeSurface&#40;fondomenu&#41;;<br />    SDL_FreeSurface&#40;pantalla&#41;;<br />    /* Fin*/<br />    /*Liberando audio antes de finalizar la aplicacion*/<br />    if &#40;musicamenu1 != NULL&#41;<br />    &#123;<br />        Mix_FreeMusic&#40;musicamenu1&#41;;<br />    &#125;<br />    /* Fin*/<br />    /* Mostrando cursor antes de slir por completo*/<br />    SDL_ShowCursor&#40;SDL_ENABLE&#41;;<br />    /*  Fin de mostrar el cursor*/<br />    /*Finalizando SDL antes de salir*/<br />    Mix_CloseAudio&#40;&#41;;<br />    SDL_Quit&#40;&#41;;<br />    /* Fin de la finalizacion de SDL*/<br />    return 0;<br />&#125;<br /><br />int borrar_superficie&#40;SDL_Surface *s&#41;<br />&#123;<br />    SDL_Rect rb;<br />    rb.x = 0;<br />    rb.y = 0;<br />    rb.w = s-&gt;w;<br />    rb.h = s-&gt;h;<br />    SDL_FillRect&#40;s,&amp;rb,SDL_MapRGB&#40;s-&gt;format,0,0,0&#41;&#41;;<br />    SDL_Flip&#40;s&#41;;<br />    return 0;<br />&#125;<br /><br />SDL_Surface * cargar_img&#40;const char *a, SDL_Surface *p&#41;<br />&#123;<br />    SDL_Surface *img;<br />    SDL_Surface *imgc;<br />    img= IMG_Load&#40;a&#41;;<br />    if &#40;img == NULL&#41;<br />    &#123;<br />        printf&#40;&quot;No se ha podido cargar correctamente la imagen: %s\n&quot;, SDL_GetError&#40;&#41;&#41;;<br />        exit&#40;1&#41;;<br />    &#125;<br />    else<br />    &#123;<br />        printf&#40;&quot;Cargada la imagen %s\n&quot;, a&#41;;<br />        if &#40;p == NULL&#41;<br />        &#123;<br />            SDL_SetColorKey&#40;img,SDL_SRCCOLORKEY|SDL_RLEACCEL,SDL_MapRGB&#40;img-&gt;format,RT,VT,AT&#41;&#41;;<br />            return img;<br />        &#125;<br />        else<br />        &#123;<br />            imgc= SDL_ConvertSurface&#40;img, p-&gt;format,SDL_HWSURFACE|SDL_SRCCOLORKEY|SDL_SRCALPHA&#41;;<br />            SDL_FreeSurface&#40;img&#41;;<br />            SDL_SetColorKey&#40;imgc,SDL_SRCCOLORKEY|SDL_RLEACCEL,SDL_MapRGB&#40;imgc-&gt;format,RT,VT,AT&#41;&#41;;<br />            return imgc;<br />        &#125;<br />    &#125;<br />&#125;<br /><br />int dibujar_fondo_menu&#40;SDL_Surface *fondomenu, SDL_Surface *pantalla&#41;<br />&#123;<br />    SDL_Rect destino;<br />    destino.w= fondomenu-&gt;w;<br />    destino.h= fondomenu-&gt;h;<br />    for &#40;destino.x=0; destino.x &lt; pantalla-&gt;w; destino.x+= &#40;fondomenu-&gt;w&#41;&#41;<br />    &#123;<br />        for &#40;destino.y=0; destino.y &lt; pantalla-&gt;h; destino.y+= &#40;fondomenu-&gt;h&#41;&#41;<br />        &#123;<br />            SDL_BlitSurface&#40;fondomenu, NULL, pantalla, &amp;destino&#41;;<br />        &#125;<br />    &#125;<br />    return 0;<br />&#125;<br /></code></dd></dl><br /><br />¿cual puede ser el error?<br /><br />EDITO (hugoruscitti): Coloco identación ANSI en el código<br />fuente para que sea legible.<br /><br />EDITO (lacabra25): Se me olvido mencionarlo con las prisas de buscar respuesta a este problema al que no le encuentro sentido, este error me ha surgido en el sistema Windows XP, lo he compilado con DevC++, el archivo de audio pesa 786 Kb y cuando quite la parte de cargar el archivo de musica todo funciono bien pero con el codigo de cargar el audio no llega ha realizar la carga de la ultima imagen, se para en la penultima y en la ventana que sale en windows al pulsar Ctrl., Alt. y Supr. pone directamente que el programa no responde.<br /><br />Gracias hugoruscitti por editar el codigo del programa, con las prisas porque tenia que salir lo pegue directamente.<br /><br />EDITO (lacabra25): Creo que he encontrado una solucion pero parcial, resulta que leyendo el foro volvi a ver una pregunta similar pero sobre MP3, yo ya habia echo anteriormente otro programa usando musica que funcionaba bien con MP3 por lo que no pense que tuviera relacion, y resulta que si cambio el tipo de la musica a wav o ogg funciona bien, pero no entiendo por que no funciona con MP3 si SDL_mixer soporta MP3 y yo ya he hecho anteriormente un programa en el que funcionaba la musica en MP3, ¿a que se debe que no funcione si el archivo es MP3?<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1912">lacabra25</a> — Lun Jul 07, 2008 7:12 pm</p><hr />
]]></content>
</entry>
</feed>