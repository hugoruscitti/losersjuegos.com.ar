<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=1266" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2011-09-05T23:32:57+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=1266</id>
<entry>
<author><name><![CDATA[metalalucard]]></name></author>
<updated>2011-09-05T23:32:57+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1266&amp;p=5904#p5904</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1266&amp;p=5904#p5904"/>
<title type="html"><![CDATA[SDL - Pantalla en negro]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1266&amp;p=5904#p5904"><![CDATA[
Estoy empezando un tutorial de SDL y en un ejemplo lo pase a c++ dado que esta hecho en C , total que lo compilo y no me manda errores, pero al ejecutarlo se queda la pantalla de comandos en negro y no sale nada, aqui dejo el codigo que hice:<br /><br />Archivos de cabecera: sdl_videoinfo.h<br /><pre class="prettyprint">//Listado: sdl_videoinfo.h<br />//Funcion que muestra la compatibilidad del sistema con las tecnologias<br />//utilizadas por la SDL<br /><br />#ifndef _SDL_VIDEOINFO_<br />#define _SDL_VIDEOINFO_<br /><br />//Precondicion: El subsistema de video SDL debe estar activado.<br />//Postcondicion: Obtiene informacion de las estructuras de SDL video info<br />//y la muestra en pantalla<br /><br />void sdl_videoinfo&#40;void&#41;;<br /><br />#endif</pre><br /><br />compatibilidad_video.h<br /><pre class="prettyprint">//Listado: compatibilidad_video.h<br /><br />#ifndef _COMPATIBILIDAD_SDL_<br />#define _COMPATIBILIDAD_SDL_<br /><br />//Precondicion: Subsistema de video de SDL Activo.<br />//Postcondicion: Realiza comprobaciones de compatibilidad de<br />//SDL con varias opciones de inicializacion.<br /><br />void compatibilidad_video_sdl&#40;int w, int h, int bpp&#41;;<br /><br />#endif</pre><br /><br />Los archivos cpp<br />compatibilidad_video.cpp<br /><pre class="prettyprint">//Listado: compatibilidad_video.cpp<br />//Comprueba la compatibilidad del sistema con los modos de videos de libsdl<br />//mediante el metodo ensayo-error<br /><br />#include &lt;iostream&gt;<br />#include &lt;SDL/SDL.h&gt;<br />#include &quot;compatibilidad_video.h&quot;<br /><br />using namespace std;<br /><br />void compatibilidad_video_sdl&#40;int w, int h, int bpp&#41;<br />{<br />     //Nuestro Rectangulo grafico con la informacion de video a mostrar<br />     SDL_Surface *pantalla;<br />     <br />     //Vamos a probar los diferentes parametros de SetVideoMode<br />     //Almacenando la superficie en memoria principal a w x h x bpp<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_SWSURFACE&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_SWSURFACE&quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_SWSURFACE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Almacenando la suerficie en memoria de video a w x h x bpp<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_HWSURFACE&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_HWSURFACE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_HWSURFACE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        <br />        //Es compatible con el doble buffer? Solo con HWSURFACE<br />        pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_HWSURFACE | SDL_DOUBLEBUF&#41;;<br />        <br />        if&#40;pantalla == NULL&#41;{<br />           cout &lt;&lt; &quot;SDL_DOUBLEBUF &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />           cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />        else{<br />           cout &lt;&lt; &quot;Compatible con SDL_DOUBLEBUF &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />           }<br />        }<br />     <br />     // Blit Asincrono para mejorar rendimiento en maquinas multiprocesador<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_ASYNCBLIT&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_ASYNCBLIT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_ASYNCBLIT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Forzamos los bpp en modo ventana<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_ANYFORMAT&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_ANYFORMAT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_ANYFORMAT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Acceso exclusivo a la paleta de color<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp ,SDL_HWPALETTE&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_HWPALETTE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_HWPALETTE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Modo a pantalla completa<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_FULLSCREEN&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_FULLSCREEN &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_FULLSCREEN &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />        <br />     //Crear un contexto OpenGL en la superficie<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_OPENGL&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_OPENGL &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_OPENGL &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Crear un contexto OpenGl en la superficie y permitir renderizado OpenGl<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_OPENGLBLIT&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_OPENGLBLIT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_OPENGLBLIT &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     //Permite que la superficie principal pueda cambiarsele el tama√±o<br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_RESIZABLE&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_RESIZABLE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_RESIZABLE &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />     <br />     pantalla = SDL_SetVideoMode&#40;w, h, bpp, SDL_NOFRAME&#41;;<br />     <br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_NOFRAME &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        cout &lt;&lt; &quot; no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot; \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Compatible con SDL_NOFRAME &quot; &lt;&lt; w &lt;&lt; &quot; X &quot; &lt;&lt; h &lt;&lt; &quot; X &quot; &lt;&lt; bpp &lt;&lt; endl;<br />        }<br />}</pre><br /><br />sdl_videoinfo.cpp<br /><pre class="prettyprint">//Listado: sdl_videoinfo<br />//Implementacion de la funcion sdl_videoinfo&#40;&#41;<br /><br />#include &lt;iostream&gt;<br />#include &lt;SDL/SDL.h&gt;<br />#include &quot;sdl_videoinfo.h&quot;<br />#include &quot;compatibilidad_video.h&quot;<br /><br />using namespace std;<br /><br />void sdl_videoinfo&#40;void&#41;<br />{<br />     const SDL_VideoInfo *propiedades;<br />     SDL_Surface *pantalla;<br />     SDL_Rect **modos;<br />     <br />     //Variables auxiliares<br />     char driver[20];<br />     int maxlen = 20;<br />     int i = 0;<br />     <br />     //Obtenemos la informacion del sistema de video<br />     propiedades = SDL_GetVideoInfo&#40;&#41;;<br />     if&#40;propiedades == NULL&#41;{<br />        cout &lt;&lt; cerr &lt;&lt; &quot;No se pudo obtener la informacion &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; endl;<br />        exit&#40;1&#41;;}<br />     <br />     //Obtenermos los modos de video disponibles<br />     modos = SDL_ListModes&#40;NULL,SDL_HWSURFACE&#41;;<br />     <br />     cout &lt;&lt; &quot;\n\n == MODOS DE VIDEO DISPONIBLES == \n&quot; &lt;&lt; endl;<br />     <br />     //Comprobamos que metodos estan disponibles<br />     if&#40;modos == &#40;SDL_Rect **&#41;0&#41;{<br />        cout &lt;&lt; &quot;No existen modos disponibles \n&quot; &lt;&lt; endl;}<br />     else if&#40;modos == &#40;SDL_Rect **&#41;-1&#41;{<br />        cout &lt;&lt; &quot;Todos los modos disponibles \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;Lista de modos disponibles \n&quot; &lt;&lt; endl;<br />           for&#40;i = 0;modos[i]; i++&#41;{<br />              cout &lt;&lt; modos[i]-&gt;w &lt;&lt; &quot; X &quot; &lt;&lt; modos[i]-&gt;h &lt;&lt; endl;}<br />              }<br />     <br />     //Comprobamos que el modo a seleccionar sea compatible<br />     if&#40;SDL_VideoModeOK&#40;640, 480, 24, SDL_SWSURFACE&#41; == 0&#41;{<br />        cout &lt;&lt; cerr &lt;&lt; &quot;Modo no soportado: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; endl;<br />        exit&#40;1&#41;;}<br />     <br />     //Una vez comprobado establecemos el modo de video<br />     pantalla = SDL_SetVideoMode&#40;640, 480, 24, SDL_SWSURFACE&#41;;<br />     if&#40;pantalla == NULL&#41;{<br />        cout &lt;&lt; &quot;SDL_SWSURFACE 640X480X24 no compatible. Error: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; endl;}<br />     <br />     //Obtenemos informacion del driver de video<br />     cout &lt;&lt; &quot;\n\n == INFORMACION DRIVER VIDEO == \n&quot; &lt;&lt; endl;<br />     SDL_VideoDriverName&#40;driver, maxlen&#41;;<br />     <br />     if&#40;driver == NULL&#41;{<br />        cout &lt;&lt; cerr &lt;&lt; &quot;No se puede obtener nombre del driver de video \n&quot; &lt;&lt; endl;<br />        exit&#40;1&#41;;}<br />     cout &lt;&lt; &quot;Driver: &quot; &lt;&lt; driver &lt;&lt; endl;<br />     <br />     //Obtenermos informacion sobre las capacidades de nuestro<br />     //sistema respecto a SDL<br />     cout &lt;&lt; &quot;\n == INFORMACION SDL_INFO == \n\n&quot; &lt;&lt; endl;<br />     if&#40;propiedades-&gt;hw_available == 1&#41;{<br />        cout &lt;&lt; &quot;HW Compatible \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;HW NO Compatible \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;hw_available == 1&#41;{<br />        cout &lt;&lt; &quot;Hay un manejador de ventanas disponible \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;NO Hay un manejador de ventanas disponible \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_hw == 1&#41;{<br />        cout &lt;&lt; &quot;El blitting hardware - hardware esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El blitting hardware - hardware NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_hw_CC == 1&#41;{<br />        cout &lt;&lt; &quot;El blitting con transparencias hardware - hardware esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El blitting con transparencias hardware - hardware NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_sw == 1&#41;{<br />        cout &lt;&lt; &quot;El blitting software - hardware esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El blitting software - hardware NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_sw_CC == 1&#41;{<br />        cout &lt;&lt; &quot;El blitting software - hardware con transparencias esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El blitting software - hardware con transparencias NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_sw_A == 1&#41;{<br />        cout &lt;&lt; &quot;El blitting software - hardware con alpha esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El blitting software - hardware con alpha NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     if&#40;propiedades-&gt;blit_fill == 1&#41;{<br />        cout &lt;&lt; &quot;El rellenado de color esta acelerado \n&quot; &lt;&lt; endl;}<br />     else{<br />        cout &lt;&lt; &quot;El rellenado de color NO esta acelerado \n&quot; &lt;&lt; endl;}<br />     <br />     cout &lt;&lt; &quot;La memoria de video tiene &quot; &lt;&lt; &#40;float&#41; propiedades-&gt;video_mem &lt;&lt; &quot;MB \n&quot; &lt;&lt; endl;<br />}<br /><br />void datos_configuracion&#40;int *w, int *h, int *bpp&#41;;<br /><br />int main&#40;int argc, char *argv[]&#41;<br />{<br />    int opcion;<br />    int h, w, bpp;<br />    atexit&#40;SDL_Quit&#41;;<br />    <br />    do{<br />       //Iniciamos SDL<br />       if&#40;SDL_Init&#40;SDL_INIT_VIDEO&#41; &lt; 0&#41;{<br />          cout &lt;&lt; cerr &lt;&lt; &quot;No se pudo iniciar SDL: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; endl;<br />          exit&#40;1&#41;;}<br />       <br />       //Menu<br />       cout &lt;&lt; &quot;\n 1.- Compatibilidad Video SDL \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot; 2.- Informacion SDL_VideoInfo \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot; 3.- Salir \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot;Elija una opcion: &quot; &lt;&lt; endl;<br />       cin &gt;&gt; opcion;<br />       <br />       switch&#40;opcion&#41;{<br />              case 1:<br />                   datos_configuracion&#40;&amp;w, &amp;h, &amp;bpp&#41;;<br />                   compatibilidad_video_sdl&#40;w, h, bpp&#41;;<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              case 2:<br />                   sdl_videoinfo&#40;&#41;;<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              case 3:<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              default:<br />                    cout &lt;&lt; &quot;\n Opcion no valida \n&quot; &lt;&lt; endl;<br />       }}while&#40;opcion != 3&#41;;  <br />    return 0;<br />}<br /><br />//Funcion para inicializar los datos para comproblar la compatibilidad<br /><br />void datos_configuracion&#40;int *w, int *h, int *bpp&#41;{<br />     <br />     cout &lt;&lt; &quot;\nIntroduce la anchira en pixeles de la pantalla: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *w;<br />     <br />     cout &lt;&lt; &quot;\nIntroduce la altura en pixeles de la pantalla: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *h;<br />     <br />     cout &lt;&lt; &quot;Introduce la profundidad de color: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *bpp;<br />     <br />     cout &lt;&lt; &quot;\n&quot; &lt;&lt; endl;<br />}</pre><br /><br />mi archivo main<br /><pre class="prettyprint">//Listado: main.c<br />//Programa de prueba, compatibilidad<br />//del sistema e informacion SDL video_info<br /><br />#include &lt;iostream&gt;<br />#include &lt;SDL/SDL.h&gt;<br />#include &quot;compatibilidad_video.h&quot;<br />#include &quot;sdl_videoinfo.h&quot;<br /><br /><br />using namespace std;<br /><br />void datos_configuracion&#40;int *w, int *h, int *bpp&#41;;<br /><br />int main&#40;int argc, char *argv[]&#41;<br />{<br />    int opcion;<br />    int h, w, bpp;<br />    atexit&#40;SDL_Quit&#41;;<br />    <br />    do{<br />       //Iniciamos SDL<br />       if&#40;SDL_Init&#40;SDL_INIT_VIDEO&#41; &lt; 0&#41;{<br />          cout &lt;&lt; cerr &lt;&lt; &quot;No se pudo iniciar SDL: &quot; &lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; endl;<br />          exit&#40;1&#41;;}<br />       //Menu<br />       cout &lt;&lt; &quot;\n 1.- Compatibilidad Video SDL \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot; 2.- Informacion SDL_VideoInfo \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot; 3.- Salir \n&quot; &lt;&lt; endl;<br />       cout &lt;&lt; &quot;Elija una opcion: &quot; &lt;&lt; endl;<br />       cin &gt;&gt; opcion;<br />       <br />       switch&#40;opcion&#41;{<br />              case 1:<br />                   datos_configuracion&#40;&amp;w, &amp;h, &amp;bpp&#41;;<br />                   compatibilidad_video_sdl&#40;w, h, bpp&#41;;<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              case 2:<br />                   sdl_videoinfo&#40;&#41;;<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              case 3:<br />                   SDL_Quit&#40;&#41;;<br />                   break;<br />              <br />              default:<br />                    cout &lt;&lt; &quot;\n Opcion no valida \n&quot; &lt;&lt; endl;<br />       }}while&#40;opcion != 3&#41;;  <br />    return 0;<br />}<br /><br />//Funcion para inicializar los datos para comproblar la compatibilidad<br /><br />void datos_configuracion&#40;int *w, int *h, int *bpp&#41;{<br />     <br />     cout &lt;&lt; &quot;\nIntroduce la anchira en pixeles de la pantalla: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *w;<br />     <br />     cout &lt;&lt; &quot;\nIntroduce la altura en pixeles de la pantalla: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *h;<br />     <br />     cout &lt;&lt; &quot;Introduce la profundidad de color: &quot; &lt;&lt; endl;<br />     cin &gt;&gt; *bpp;<br />     <br />     cout &lt;&lt; &quot;\n&quot; &lt;&lt; endl;<br />}</pre><br /><br />Estare muy agradecido si alguien tiene alguna respuesta.<p>Estad√≠sticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2494">metalalucard</a> ‚Äî Lun Sep 05, 2011 11:32 pm</p><hr />
]]></content>
</entry>
</feed>