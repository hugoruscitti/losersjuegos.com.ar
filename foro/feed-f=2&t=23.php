<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=23" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2006-10-11T10:28:49+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=23</id>
<entry>
<author><name><![CDATA[AnimAlf]]></name></author>
<updated>2006-10-11T10:28:49+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=23&amp;p=76#p76</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=23&amp;p=76#p76"/>
<title type="html"><![CDATA[autoconf y automake - también configure con dev-cpp]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=23&amp;p=76#p76"><![CDATA[
Hola,<br />es mi primer mensaje en el foro, así que un saludo para todos :)) <br /><br />Este mensaje se podría convertir en un cross donde aportar información sobre este tema. Yo estoy muy flojo en él y es muy apasionante.<br /><br />Voy a explicar como podemos utilizar las <span style="font-weight: bold">autotools</span> en nuestros proyectos (<span style="font-weight: bold">autoconf, automake</span>), también para usuarios windows de dev-cpp o mingw. La habilidad de proveer a windows de la posibilidad de utilizar los scripts configure no las da el POSIX/Bourne shell que nos provee <a href="http://www.mingw.org/msys.shtml" class="postlink">MSYS</a> (Minimal System) que pertenece al proyecto <a href="http://www.mingw.org" class="postlink">Mingw</a>, luego explico como instalarlo.<br /><br />Las autotools son una herramienta genial para gestionar nuestros proyectos y que luego estos sean portables. Claro que intimidan un poco, al menos en principio, al menos a mi. La documentación en este caso la encuentro excesiva, no encontrando nunca algo sencillo que me diga como empezar, por lo que en un principio se me hacía cuesta arriba iniciarme en esto. Aunque una vez iniciado, no pueda estar ya sin ello. Antes de continuar con las autotools haré un alto para la configuración del sistema en windows.<br /><br />El <a href="http://www.bloodshed.net/devcpp.html" class="postlink">dev-cpp</a> utiliza <span style="font-weight: bold">Mingw</span>, y Mingw nos ofrece el <span style="font-weight: bold">MSYS</span> (Mínimal system), que nos proveerá de una shell como si estuviesemos en línux intalando muy pocas cosas para que sea una realidad. Si lo instalamos, nos preguntará si utilizamos <span style="font-weight: bold">Mingw</span>, le decimos que sí y como directorio del Mingw le indicamos la ruta al directotio <span style="font-weight: bold">dev-cpp</span> por defecto: <span style="font-weight: bold">c:/dev-cpp</span>.<br /><br />Cuando hallamos terminado instalaremos el paquete de <a href="http://prdownloads.sf.net/mingw/msysDTK-1.0.1.exe?download" class="postlink">herramientas para el programador</a> de MSYS (MSYS <a href="http://prdownloads.sf.net/mingw/msysDTK-1.0.1.exe?download" class="postlink">Developer Tool Kit</a>) que incluye herramientas como bison autoconf automake y libtool<br /><br />Ahora cada vez que entremos por medio de <span style="font-weight: bold">Msys</span> veremos que tenemos una <span style="font-weight: bold">shell bash de linux</span>, cuya raiz es el directorio <span style="font-weight: bold">C:\msys (/)</span> y resto de nuestras unidades están montadas como /a /c /d ...<br /><br /><blockquote class="uncited"><div><br />Los usuarios de windows x64 deberán modificar el acceso directo que lanza el Mysys para que no les de error, para que la llamada quede de este modo:<br /><span style="font-weight: bold">%WINDIR%\syswow64\cmd.exe /c T:\msys\1.0\msys.bat</span><br /></div></blockquote><br /><br />A partir de este momento podremos coger cualquier proyecto y construirlo con el mismo método que que utilizamos en Linux:<br /><dl class="codebox"><dt>Code: </dt><dd><code>http://losersjuegos.com.ar/foro/configure<br />http://losersjuegos.com.ar/foro/make<br />http://losersjuegos.com.ar/foro/make install</code></dd></dl><br /><br />Bien, vamos a por nuestro proyecto.<br />Los proyectos por lo general serán un directorio. Para organizar un poco las cosas, los archivos fuentes de nuestro proyecto los pondremos en src un subdirectorio del proyecto es decir:<br /><br />/proyecto<br />/proyecto/src<br /><br />La raiz del proyecto siempre deberá contener dos archivos, el archivo <span style="font-weight: bold">Makefile.am</span> y el archivo <span style="font-weight: bold">configure.in</span><br />en el <span style="font-weight: bold">Makefile.am</span> de la raiz del proyecto le indicaremos que directorios forman parte del proyecto, simplemente creando un archivo con el siguiente contenido:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>SUBDIRS = src</code></dd></dl><br /><br />Cada directorio deberá conener además otro Makefile.am, pero este con los archivos fuentes, por ejemplo, en este caso sólo tenemos el directorio src pues su makefile.am puede ser:<br /><dl class="codebox"><dt>Code: </dt><dd><code>bin_PROGRAMS = miPrograma<br />miPrograma_SOURCES = \<br />        defpong.c  defpong.h \<br />        juego.c  main.c<br />noinst_HEADERS = defpong.h</code></dd></dl><br />con<br /><span style="font-weight: bold">bin_PROGRAMS</span> le indica el nombre del binario resultante y que será intalado en el archivo bin<br /><span style="font-weight: bold">miPrograma_SOURCES</span> le indica los fuentes, fijate que miPrograma se refiere a lo establecido en PROGRAMS<br /><span style="font-weight: bold">noinst_HEADERS</span> le inidica que esas cabeceras no deben ser instaladas.<br /><br />en nuestro caso, no tenemos más.<br /><br />Ahora el archivo <span style="font-weight: bold">configure.in</span> és el mas importante en este proceso, es el que creará nuestro configure final, y en el que le indicaremos las reglas y que necesitamos para poder compilar el proyecto. Básicamente lo que contiene este archivo son macros.  Muestro un ejemplo de este archivo y a continuación explico cada una de las macros.<br /><dl class="codebox"><dt>Code: </dt><dd><code>AC_INIT&#40;&#91;miPrograma&#93;,&#91;0.1&#93;,&#91;errores@sdl-listas.org&#93;&#41;<br />AM_INIT_AUTOMAKE<br />AC_PROG_CC<br />AC_CYGWIN<br />AM_PROG_CC_STDC<br /><br /># Comprobar que existe SDL<br />pkg_modules=&quot;sdl &gt;= 1.2.7&quot;<br />PKG_CHECK_MODULES&#40;PACKAGE, &#91;$pkg_modules&#93;&#41;<br />AC_SUBST&#40;PACKAGE_CFLAGS&#41;<br />AC_SUBST&#40;PACKAGE_LIBS&#41;<br /><br /># Comprobar que también tenemos SDL_mixer<br />AC_CHECK_LIB&#40;SDL_mixer, main, , AC_MSG_ERROR&#40;&#91;<br />  *** No se ha encontrado la libreria SDL_mixer<br />  &#40;http://www.libsdl.org/projects/SDL_mixer/&#41;<br />&#93;&#41;&#41;<br /><br /># Comprobat que tenemos SDL_image con soporte para PNG<br />AC_CHECK_LIB&#40;SDL_image, IMG_LoadPNG_RW, , AC_MSG_ERROR&#40;&#91;<br />  *** No se ha encontrado la libreria SDL_image con soporte para PNG<br />  &#40;http://www.libsdl.org/projects/SDL_image/&#41;<br />&#93;&#41;&#41;<br /><br />AC_OUTPUT&#40;&#91;<br />  Makefile<br />  src/Makefile<br />&#93;&#41;<br /></code></dd></dl><br /><br /><span style="font-weight: bold">AC_INIT([miPrograma],[0.1],[errores@sdl-listas.org])</span> Inicializamos con el nombre del proyecto, su versión y la dirección de correo a la que enviar bugs<br /><span style="font-weight: bold">AM_INIT_AUTOMAKE</span> añadir todas las funcionalidades de Automake.<br /><span style="font-weight: bold">AC_PROG_CC</span> asegurarnos la disponibilidad de un compilador de C<br /><span style="font-weight: bold">CYGWIN</span> Nos creará una variable puesta a yes si estamos en el entorno CYGWIN<br /><span style="font-weight: bold">AM_PROG_CC_STDC</span> Se crea una variable con ac_cv_prog_cc_stdc=no si el compilador no puede compilar código ISO Standard C<br /><span style="font-weight: bold">PKG_CHECK_MODULES</span> si existe pkg-config chequea las librerias con el<br /><span style="font-weight: bold">AC_SUBST</span> extraemos resultados<br /><span style="font-weight: bold">AC_CHECK_LIB</span> chequeamos por una librería<br /><span style="font-weight: bold">AC_OUTPUT</span> Maquefiles que se han de crear<br /><br />Luego podemos ejecutar autoscan, que nos mostraría que nos hemos dejado, además nos creará un configure.scan que podemos utilizar para ampliar nuestro configure.in<br /><br />Llegados aquí podemos ejecutar <span style="font-weight: bold">aclocal</span><br /><br />Luego <span style="font-weight: bold">autoconf</span><br /><br />Finalmente <span style="font-weight: bold">automake --add-missing</span>, este seguramente nos marcara un error diciendo que nos faltan archivos<br /><dl class="codebox"><dt>Code: </dt><dd><code>Makefile.am: required file `http://losersjuegos.com.ar/foro/NEWS' not found<br />Makefile.am: required file `http://losersjuegos.com.ar/foro/README' not found<br />Makefile.am: required file `http://losersjuegos.com.ar/foro/AUTHORS' not found<br />Makefile.am: required file `http://losersjuegos.com.ar/foro/ChangeLog' not found</code></dd></dl><br />los creamos ...<br /><dl class="codebox"><dt>Code: </dt><dd><code>touch NEWS README AUTHORS ChangeLog</code></dd></dl><br />y volvemos a ejecutarlo <span style="font-weight: bold">automake --add-missing</span><br /><br />ya tendremos listo nuestro configure.<br /><br />En windows no se puede ejecutar lo anterior a no se que se intale el modulo de perl XML:Parser, yo aún sigo con eso, tengo un win64 beta, en el que hago pruebas, pero me pongo nervioso si estoy mucho tiempo en ese entorno.<br /><br />Creo que podemos augmentar considerablemente esta documentación, para poder lograr proyectos geniales.<br /><br />Personalmente, cuando preparo un proyecto, suelo tener los archivos CVS en un directorio y luego enlazo simbolicamente desde otros para no mezclar los archivos que se crean con los del proyecto.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=14">AnimAlf</a> — Mié Oct 11, 2006 10:28 am</p><hr />
]]></content>
</entry>
</feed>