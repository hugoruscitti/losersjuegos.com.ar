<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=519" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2009-03-22T15:02:31+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=8&amp;t=519</id>
<entry>
<author><name><![CDATA[Juanxo]]></name></author>
<updated>2009-03-22T15:02:31+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2342#p2342</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2342#p2342"/>
<title type="html"><![CDATA[Problema con dibujar mapa]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2342#p2342"><![CDATA[
Gracias de nuevo. Ya lo pense, pero no merecía la pena, ya que los obstaculos(rocas troncos, etc) no tienen la forma exacta del tile, por lo que quedarían huecos vacíos. Al final tambien he descartado la opción de crear una nueva superficie para los obstaculos, ya que estaría creando una superficie mayoritariamente vacía, por lo que mejor he decidido blitear directamente en la pantalla teniendo en cuenta el scroll y ya me funciona correctamente. El código completo es el siguiente:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code><br /># -*- coding: cp1252 -*-<br /><br />import pygame,os,sys<br />from pygame.locals import *<br /># -*- coding: cp1252 -*-<br />DATOS='images'<br />#=========================================<br />#Prueba de mapa de tiles, con scrolling<br />#Ejemplos de apoyo:<br />#   mini_rpg&#40;scrolling de camara&#41;<br />#   mono&#40;Creacion de mapa como lectura de fichero&#41;<br />#   http://www.wired-weasel.com/users/serhid/blog/?page_id=4&#40;creacion de tilemaps&#41;<br />#<br />#<br />#========================================<br /><br />ANCHO=640<br />ALTO=480<br /><br />def load_image&#40;name,colorkey=False, pos=10&#41;:<br />    fullname=os.path.join&#40;DATOS,name&#41;<br /><br />    try:<br />        image=pygame.image.load&#40;fullname&#41;<br /><br />    except pygame.error,message:<br />        print 'No se puede cargar la imagen: ',fullname<br />        raise SystemExit,message<br /><br />    image=image.convert&#40;&#41;<br /><br />    if &#40;colorkey&#41;:<br />            <br />        colorkey=image.get_at&#40;&#40;pos,0&#41;&#41;<br />        image.set_colorkey&#40;colorkey,RLEACCEL&#41;<br /><br /><br />    return image , image.get_rect&#40;&#41;                   <br />                                <br /><br />class Escenario&#40;&#41;:<br /><br />    def __init__&#40;self , nivel=1&#41;:<br />          <br />      #creamos las matrices del mapa<br />      self.mapa = self.cargar_nivel&#40;nivel&#41;<br />      self.obstaculos=self.cargar_obstaculos&#40;nivel&#41;<br /><br />      self.image , self.rect = load_image&#40;'fondos.bmp',True,760&#41;<br /><br />      #diccionarios de la &#40;columna,fila&#41; de un tipo de tile dentro de la grilla<br />      self.Tiles_Terreno=&#123; '1': &#40;3,13&#41;&#125;<br />      <br />      self.Tiles_Obstaculo=&#123;'1': &#40;3,12&#41;,<br />                        '2': &#40;0,12&#41; &#125;<br /><br /><br />      # coordenada superior izquierda de la cámara.<br />      # estas variables intentan alcanzar el valor de las variables<br />      # 'destino_camara_x' y 'destino_camara_y'.      <br />      self.camara_x = 0<br />      self.camara_y = 0<br />      <br /><br />      self.fondo= self.crear_fondo&#40;self.mapa&#41;<br /><br />      #posicion a la que debe llegar la camara<br />      self.destino_camara_x=0<br />      self.destino_camara_y=0<br />      <br />      self.dibujar_mapa&#40;&#41;<br /><br />      <br />    def imprimir&#40;self,screen&#41;:<br /><br />      origen=&#40;self.camara_x,self.camara_y,ANCHO,ALTO&#41;<br />      destino=&#40;0,0,ANCHO,ALTO&#41;<br />      screen.blit&#40;self.fondo,destino,origen&#41;<br />      <br /><br />    def update&#40;self&#41;:<br />      self.camara_x+=&#40;self.destino_camara_x-self.camara_x&#41;/8.0<br />      self.camara_y+=&#40;self.destino_camara_y-self.camara_y&#41;/8.0<br /><br />    def mirar_a&#40;self,rect&#41;:<br />      self.destino_camara_x=rect.x-ANCHO/2<br />      self.destino_camara_y=rect.y-ALTO/2<br />      self._aplicar_limites&#40;&#41;<br /><br />    def cargar_nivel&#40;self , nivel&#41;:<br />      nombre_del_archivo='nivel_%d.txt'%nivel#empleamos el format string para poder asignar <br />      archivo=open&#40;nombre_del_archivo,'rt'&#41;#el nombre del fichero<br />      mapa=archivo.readlines&#40;&#41;#devuelve un String con el mapa<br />      archivo.close&#40;&#41;<br />      return mapa<br /><br />    def cargar_obstaculos&#40;self,nivel&#41;:<br />      nombre_del_archivo='obstaculos_nivel_%d.txt'%nivel<br />      archivo=open&#40;nombre_del_archivo&#41;<br />      obstaculos=archivo.readlines&#40;&#41;<br />      return obstaculos<br /><br /><br />    def crear_fondo&#40;self,array&#41;:<br /><br />      filas=len&#40;array&#41;<br />      columnas=len&#40;array&#91;0&#93;&#41;-1<br />      ancho=columnas*64<br />      alto=filas*64<br /><br />      return pygame.Surface&#40;&#40;ancho,alto&#41;&#41;.convert&#40;&#41;<br /><br />    <br />    def _aplicar_limites&#40;self&#41;:<br />      if self.destino_camara_x &lt; 0:<br />          self.destino_camara_x = 0<br />      <br />      if self.destino_camara_y &lt; 0:<br />          self.destino_camara_y = 0<br /><br />      if self.destino_camara_x + ANCHO &gt; self.fondo.get_width&#40;&#41;-64:<br />          self.destino_camara_x = self.fondo.get_width&#40;&#41; - ANCHO-64<br /><br />      if self.destino_camara_y + ALTO &gt; self.fondo.get_height&#40;&#41;-64:<br />          self.destino_camara_y = self.fondo.get_height&#40;&#41; - ALTO-64<br /><br /><br /><br />    def puede_pisar&#40;self,x,y&#41;:<br />      fila=y/64<br />      columna=x/64<br /><br />      try:<br />          celda=self.obstaculos&#91;fila&#93;&#91;columna&#93;<br />      except:<br />          return False<br /><br />      if celda in &#91;'0'&#93;:<br />          return True<br /><br />      return False<br /><br />      <br /><br />    def dibujar_mapa&#40;self&#41;:<br /><br /><br /><br />      filas=0<br />      for fila in self.mapa:<br />          columna=0<br />          for celda in fila:<br />            <br />            if celda in self.Tiles_Terreno:<br />                columnaT , filaT = self.Tiles_Terreno&#91;celda&#93;<br />                self.fondo.blit&#40;self.image,&#40;64*columna,64*filas&#41;,&#40;64*columnaT,64*filaT,64,64&#41;&#41;<br />                columna+=1<br />               <br />          filas+=1<br /><br />    def imprimir_obstaculos&#40;self,screen&#41;:<br /><br />      tile_origen_x=self.camara_x/64<br />      tile_origen_y=self.camara_y/64<br /><br />      tile_destino_x=tile_origen_x + ANCHO/64+1<br />      tile_destino_y = tile_origen_y + ALTO/64 +2<br /><br />      if tile_destino_x &gt;= len&#40;self.obstaculos&#91;0&#93;&#41;-1:<br />          tile_destino_x = len&#40;self.obstaculos&#91;0&#93;&#41;-1<br /><br />      if tile_destino_y&gt;=len&#40;self.obstaculos&#41;:<br />          tile_destino_y=len&#40;self.obstaculos&#41;<br /><br />      filas=0<br />      for fila in range&#40;tile_origen_y,tile_destino_y&#41;:<br />          columna=0<br />          for celda in range&#40;tile_origen_x,tile_destino_x&#41;:<br />                  if self.obstaculos&#91;fila&#93;&#91;celda&#93; == '0':<br />                          columna+=1<br />        <br />                  if self.obstaculos&#91;fila&#93;&#91;celda&#93; in self.Tiles_Obstaculo:<br /><br />                      columnaT,filaT = self.Tiles_Obstaculo&#91;self.obstaculos&#91;fila&#93;&#91;celda&#93;&#93;<br />                      screen.blit&#40;self.image,&#40;64*columna-self.camara_x%64,64*filas-self.camara_y%64&#41;,&#40;64*columnaT,64*filaT,64,64&#41;&#41;<br />                      columna+=1<br />          filas+=1<br /><br />          <br />          <br /><br />class Conejo&#40;pygame.sprite.Sprite&#41;:<br /><br />    def __init__&#40;self,escenario&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image,self.rect=load_image&#40;'conejo.bmp',True&#41;<br />      <br />      self.rect.move_ip&#40;64,64&#41;#centrado en primer cuadrado<br /><br /><br />      self.escenario=escenario<br /><br />    def update&#40;self&#41;:<br /><br />      teclas=pygame.key.get_pressed&#40;&#41;<br /><br />      dx=0<br />      dy=0<br />      <br />      if teclas&#91;K_UP&#93;:<br />          dy=-2<br />      elif teclas&#91;K_DOWN&#93;:<br />          dy=2<br /><br />      if teclas&#91;K_RIGHT&#93;:<br />          dx=2<br />      elif teclas&#91;K_LEFT&#93;:<br />          dx=-2<br /><br />      if not self.escenario.puede_pisar&#40;self.rect.centerx+dx,self.rect.centery&#41;:<br />          dx=0<br /><br />      if not self.escenario.puede_pisar&#40;self.rect.centerx,self.rect.centery+dy&#41;:<br />          dy=0<br /><br />      if self.rect.x+self.rect.width-self.escenario.camara_x&gt;=ANCHO:<br />          self.rect.x=ANCHO-self.rect.width+self.escenario.camara_x<br /><br />      if self.rect.y+self.rect.height/2  &lt;= 0 :<br />          self.rect.y =- self.rect.height/2         <br />      self.rect.move_ip&#40;dx,dy&#41;<br /><br />      self.escenario.mirar_a&#40;self.rect&#41;<br /><br />    def imprimir&#40;self,screen&#41;:<br />      x=self.rect.x-self.escenario.camara_x<br />      y=self.rect.y-self.escenario.camara_y<br /><br />      screen.blit&#40;self.image,&#40;x,y&#41;&#41;<br /><br />              <br />def main&#40;&#41;:<br />    <br />    pygame.init&#40;&#41;<br /><br /><br />    escenario=Escenario&#40;&#41;<br />    &quot;&quot;&quot;<br />************************************************************<br />    Mi intención con estos tres try es conseguir:<br />      1-que la altura de la pantalla sea menor o igual que la altura total del mapa<br />      2- idem pero con el ancho<br />      3- que las dimensiones de las matrices sean iguales.<br /><br />    Supongo que no estarán bien expresados, porque no controlo demasiado el tema de los<br />    errores en pygame. Si alguno sabe como sería, Por favor me lo comunique<br />****************************************************************<br />    try:<br />      ALTO/64 &lt;= len&#40;escenario.mapa&#41;<br />    except:<br />      print 'El alto de la pantalla es mayor que la altura del mapa'<br />      exit&#40;&#41;<br /><br />    try:<br />      ANCHO/64 &lt;= len&#40;escenario.mapa&#91;0&#93;&#41;<br />    except:<br />      print 'El ancho de la pantalla es mayor que el ancho del mapa'<br />      exit&#40;&#41;<br /><br />    try:<br />      len&#40;self.mapa&#91;0&#93;&#41; = len&#40;self.obstaculos&#91;0&#93;&#41;<br />    except:<br />      print 'Las dimensiones de las matrices de los mapas y obstaculos no coinciden'<br />      exit&#40;&#41;<br /><br /><br />&quot;&quot;&quot;<br /><br />    screen=pygame.display.set_mode&#40;&#40;ANCHO,ALTO&#41;&#41;<br />      <br />    clock=pygame.time.Clock&#40;&#41;<br />    <br /><br /><br />    conejo=Conejo&#40;escenario&#41;<br />    <br /><br /><br /><br /><br />    #main loop<br />    while True:<br />      <br />      clock.tick&#40;80&#41;<br />      <br />      key=pygame.key.get_pressed&#40;&#41;<br />      for e in pygame.event.get&#40;&#41;:<br />          if e.type==QUIT:<br />            sys.exit&#40;&#41;<br /><br /><br />      conejo.update&#40;&#41;<br /><br />      escenario.update&#40;&#41;<br />      <br />      escenario.imprimir&#40;screen&#41;<br />      escenario.imprimir_obstaculos&#40;screen&#41;<br /><br />      conejo.imprimir&#40;screen&#41;<br />      pygame.display.flip&#40;&#41;<br />      pygame.time.wait&#40;10&#41;<br /><br /><br />if __name__=='__main__':<br />    main&#40;&#41;<br /></code></dd></dl><br /><br /><br />Por cierto, se me ha estropeado la mayoria de las indentaciones. alguno sabe como arreglarlo??<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2057">Juanxo</a> — Dom Mar 22, 2009 3:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2009-03-22T10:21:05+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2340#p2340</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2340#p2340"/>
<title type="html"><![CDATA[Problema con dibujar mapa]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2340#p2340"><![CDATA[
<blockquote><div><cite>Juanxo escribió:</cite><br />el terreno del mapa lo he transformado en una superficie, siguiendo el ejemplo de RPG de hugo. He intentado hacer lo mismo con el fondo de obstaculos, pero el problema es que al blitear, superpone el de obstaculos al de terreno, quedando la mayoría de la pantalla negra. Podría hacer algo parecido a lo de colorkey con la superficie, para transparentar los pixels que no tuvieran objetos (es decir, los cuadrados negros)??<br /></div></blockquote><br />Como tú bien has dicho, se podría hacer con el colorkey sobre la Surface de los obstáculos. Ya sea en negro, que es con el color que se crea la Surface por defecto o poniendole un color raro (255,0,255) de fondo.<br />De todas formas, dependiendo de como esté construido el programa, a lo mejor te interesa más blitear todos los obstáculos en la Surface terreno y trabajar con una sola imagen. Así ahorrarías unos pocos milisegundos por cuadro(si llega xD) porque no dibujarías el trozo de terreno que luego va a ser tapado por un obstáculo. Y quizás lo simplifique un poco. Pero, para decirlo con certeza, tendría que ver todo el código.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Dom Mar 22, 2009 10:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Juanxo]]></name></author>
<updated>2009-03-22T00:48:56+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2339#p2339</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2339#p2339"/>
<title type="html"><![CDATA[Problema con dibujar mapa]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2339#p2339"><![CDATA[
gracias david. El problema estaba en ese +1 que tenia tile_destino_y, que creaba una fila mas de las que había en el array.<br /><br />He estado pensando, y quiero ver si habría algúna manera de hacer lo siguiente:<br /><br />el terreno del mapa lo he transformado en una superficie, siguiendo el ejemplo de RPG de hugo. He intentado hacer lo mismo con el fondo de obstaculos, pero el problema es que al blitear, superpone el de obstaculos al de terreno, quedando la mayoría de la pantalla negra. Podría hacer algo parecido a lo de colorkey con la superficie, para transparentar los pixels que no tuvieran objetos (es decir, los cuadrados negros)??<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2057">Juanxo</a> — Dom Mar 22, 2009 12:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2009-03-21T20:34:08+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2337#p2337</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2337#p2337"/>
<title type="html"><![CDATA[Re: Problema con dibujar mapa]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2337#p2337"><![CDATA[
Ya que no tengo todo el código para poderlo ejecutar, te pongo los prints que haría yo para intentar encontrar el error:<br /><dl class="codebox"><dt>Code: </dt><dd><code>    def imprimir_obstaculos&#40;self,screen&#41;:<br />        &#91;...&#93;<br />        print &quot;matriz: &quot;, self.obstaculos #<br />        print &quot;filas: &quot;, len&#40;self.obstaculos&#41; #<br />        for i in range&#40;len&#40;self.obstaculos&#41;&#41;: #<br />            print &quot;columnas de fila &quot;, i, &quot;: &quot;, len&#40;self.obstaculos&#91;i&#93;&#41; #<br />        for fila in range&#40;tile_origen_y,tile_destino_y&#41;:<br />            columna=0<br />            for celda in range&#40;tile_origen_x,tile_destino_x&#41;:<br />                print fila, celda #<br /><br />             ***AQUI DA ERROR*** if self.obstaculos&#91;fila&#93;&#91;celda&#93; in self.Tiles_Obstaculo:<br />                    &#91;...&#93;<br /></code></dd></dl><br /><br />Podría ser porque la cámara no está fuera del mapa.<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Sab Mar 21, 2009 8:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Juanxo]]></name></author>
<updated>2009-03-21T12:38:00+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2334#p2334</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2334#p2334"/>
<title type="html"><![CDATA[Problema con dibujar mapa]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=519&amp;p=2334#p2334"><![CDATA[
Buenas.<br /><br />He creado una funcion para dibujar los obstaculos de terreno sobre un mapa (todo con tiles), pero esta me da un error de list index out of range exactamente en la sentencia marcada en l codigo:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>    def imprimir_obstaculos&#40;self,screen&#41;:<br /><br />        tile_origen_x=self.camara_x/64<br />        tile_origen_y=self.camara_y/64<br /><br />        tile_destino_x=tile_origen_x + ANCHO/64 + 1<br />        tile_destino_y = tile_origen_y + ALTO/64 + 1<br /><br />        filas=0<br /><br />        for fila in range&#40;tile_origen_y,tile_destino_y&#41;:<br />            columna=0<br />            for celda in range&#40;tile_origen_x,tile_destino_x&#41;:<br /><br />             ***AQUI DA ERROR*** if self.obstaculos&#91;fila&#93;&#91;celda&#93; in self.Tiles_Obstaculo:<br /><br />                    columnaT,filaT = self.Tiles_Obstaculo&#91;self.obstaculos&#91;fila&#93;&#91;celda&#93;&#93;<br />                    screen.blit&#40;self.image,&#40;64*columna,64*filas&#41;,&#40;64*columnaT,64*filaT,64,64&#41;&#41;<br />                    columna+=1<br />            filas+=1<br /></code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2057">Juanxo</a> — Sab Mar 21, 2009 12:38 pm</p><hr />
]]></content>
</entry>
</feed>