<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=1401" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2012-02-08T11:38:27+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=2&amp;t=1401</id>
<entry>
<author><name><![CDATA[kaiser]]></name></author>
<updated>2012-02-08T11:38:27+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1401&amp;p=6505#p6505</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1401&amp;p=6505#p6505"/>
<title type="html"><![CDATA[Desarrollando Android en Ubuntu]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1401&amp;p=6505#p6505"><![CDATA[
Hace poco he decidido iniciarme en Android y lo cierto es que la instalación y configuración de las herramientas necesarias para ello en Ubuntu no es especialmente fácil. Así que he decido crear este tutorial por si alguien más está interesado en este sistema o por si yo mismo necesito volver a hacerlo cuando formatee el ordenador.<br /><br />Como todos sabéis, en Ubuntu, por defecto, el soporte para aplicaciones Java viene provisto por el OpenJDK, una implementación libre del JDK. Sin embargo el SDK de Android no es compatible con éste por lo que es necesario recurrir al JDK &quot;original&quot; de Oracle. Hace un tiempo Oracle retiró las licencias de &quot;Distribuidor de Java&quot; lo que obliga a Ubuntu a retirar los paquetes del OracleJDK de sus repositorios, por lo que ahora mismo la instalación de esta herramienta dista mucho de seguir el proceso automático al que nos tiene acostumbrados la instalación de aplicaciones en Ubuntu.<br /><br />Existen muchos tutoriales en Internet sobre como instalar Java en Ubuntu, pero cada uno propone una forma distinta de hacerlo: utilizar repositorios Java alternativos mantenidos por terceros, usar scripts que automaticen ciertas tareas o configurarlo todo a mano incluyendo los archivos de configuración de bash. A continuación voy a detallar los pasos que he seguido yo desde cero hasta poder ejecutar mi primera aplicación en un emulador Android, creo que estos pasos son los más sencillos y fáciles para instalar y configurar todo y además... funcionan <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br /><span style="font-weight: bold">Nota:</span> el SDK de Android solo está disponible en versión 32bits por lo que si usamos Ubuntu 64bits tendremos que descargarnos la librería ia32-libs<br /><br /><pre class="prettyprint">apt-get install ia32-libs</pre><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">1. Instalando OracleJDK:</span></span></span></span><br /><br />En primer lugar nos dirigimos a la página oficial de Oracle Java para descargarnos el JDK. Nos descargaremos la versión 6 ya que, en la fecha en que se escribe este post, la versión 7 se encuentra en estado alpha por lo que no se recomienda su uso y dudo que esté completamente soportada por Android. Yo concretamente he descargado el JDK para <span style="font-style: italic">Java SE 6 Update 30</span> para <span style="font-style: italic">Linux 32 bits</span> y formato <span style="font-style: italic">binario autoextraíble</span> (cuidado: elegir el que <span style="font-weight: bold">no</span> pone rpm).<br /><br /><img src="http://losersjuegos.com.ar/foro/images/smilies/icon_arrow.gif" alt=":arrow:" title="Arrow" /> <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" class="postlink">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br /><br />A partir de aquí lo haremos todo con consola así que Ctrl+Alt+T y a teclear. <span style="font-weight: bold">Nota:</span> sustituir XX por la versión que hayas descargado.<br /><br />En primer lugar nos dirigimos a la carpeta donde se haya descargado el archivo, por defecto debería ser Descargas<br /><br /><pre class="prettyprint">cd Descargas</pre><br />Damos permisos de ejecución al archivo<br /><br /><pre class="prettyprint">sudo chmod +x jdk-6uXX-linux-i586.bin</pre><br />Y nos lo llevamos al directorio donde queramos descomprimirlo, yo lo he puesto en /usr/lib/jvm/ que es donde se encuentra todo lo relacionado con Java en Ubuntu<br /><br /><pre class="prettyprint">sudo mv jdk-6uXX-linux-i586.bin /usr/lib/jvm/</pre><br />Lo ejecutamos para que se autoextraiga, es posible que durante este proceso se nos pida que aceptemos la licencia de Java<br /><br /><pre class="prettyprint">sudo http://losersjuegos.com.ar/foro/jdk-6uXX-linux-i586.bin</pre><br />Ahora se nos ha creado un nuevo directorio que contiene todas las herramientas del JDK de Oracle. Más información sobre este directorio y su estructura aquí <a href="http://docs.oracle.com/javase/6/docs/technotes/tools/linux/jdkfiles.html" class="postlink">http://docs.oracle.com/javase/6/docs/technotes/tools/linux/jdkfiles.html</a>. Para ahorrar espacio podemos borrar el binario<br /><br /><pre class="prettyprint">sudo rm jdk-6uXX-linux-i586.bin</pre><br />Ahora necesitamos decirle a Ubuntu que hay nuevas herramientas disponibles y que queremos que use éstas en lugar de las que usaba antes. Para decirle que hay una nueva herramienta llamada java usamos este comando<br /><br /><pre class="prettyprint">sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/lib/jvm/jdk1.6.0_XX/bin/java&quot; 1</pre><br />Y para decirle que queremos que use esta nueva herramienta por defecto en lugar de la que usaba anteriormente del OpenJDK<br /><br /><pre class="prettyprint">sudo update-alternatives --set java /usr/lib/jvm/jdk1.6.0_XX/bin/java</pre><br />Hacemos lo mismo para el compilador javac<br /><br /><pre class="prettyprint">sudo update-alternatives --install &quot;/usr/bin/javac&quot; &quot;javac&quot; &quot;/usr/lib/jvm/jdk1.6.0_XX/bin/javac&quot; 1<br />sudo update-alternatives --set javac /usr/lib/jvm/jdk1.6.0_XX/bin/javac</pre><br />Realmente OpenJDK no implementa una herramienta javac para compilar sino que se basa en el gcj por lo que solo con el primer comando bastaría, ya que al no existir otra herramienta llamada javac Ubuntu usará ésta (la única que hay con ese nombre) por defecto, pero tampoco perdemos nada por asegurarnos.<br /><br />Podemos comprobar que todo funciona correctamente tecleando<br /><pre class="prettyprint">java -version<br />javac -version</pre><br />En la salida del primer comando tenemos que fijarnos que la versión que aparece coincida con la que acabamos de instalar y a demás que no aparezca nada de OpenJDK, así nos aseguramos de que estamos usando el java de Oracle. El segundo comando arrojará una salida mucho más simple (simplemente el número de versión) pero basta para saber que funciona y puesto que no hay otra herramienta con el mismo nombre sabemos que estamos usando la correcta.<br /><br />Solo nos quedaría por configurar el plugin java para el navegador, pero IcedTea, el que ofrece OpenJDK, me funciona perfectamente y puesto que no es necesario para Android prefiero dejar las cosas como están.<br /><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">2. Instalando Eclipse:</span></span></span></span><br /><br />Utilizaremos Eclipse como herramienta principal para desarrollar en Android básicamente porque existe un plugin oficial de Android para este IDE que nos facilitará mucho las cosas.<br /><br />Podemos descargar la última versión de Eclipse desde los repositorios de Ubuntu, pero al mirar las dependencias vemos que toca muchos paquetes relacionados con OpenJDK y después de tener java perfectamente configurado no creo que nos queramos arriesgar a que el gestor de paquetes nos pise toda esa configuración, así que nos dirigimos a la página oficial de descargas de Eclipse <a href="http://www.eclipse.org/downloads/" class="postlink">http://www.eclipse.org/downloads/</a>, arriba a la derecha indicamos que usamos Linux y nos descargamos la versión para 32 bits de Eclipse Classic que es el recomendado por Android.<br /><br />Obtenemos un archivo comprimido que podremos extraer donde queramos. Yo me he creado una carpeta &quot;Aplicaciones&quot; dentro de mi carpeta personal y lo he extraído ahí dentro, lo cual crea un directorio llamado &quot;eclipse&quot; dentro del cual encontramos el ejecutable que arranca el programa.<br /><br />Al arrancar se nos pedirá que indiquemos la localización del workspace, el directorio donde se almacenarán nuestros proyectos. Yo dejo el que viene por defecto, en la carpeta personal, y le digo que no me vuelva a preguntar.<br /><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">3. Integrando Eclipse en Unity:</span></span></span></span><br /><br />Al no haber instalado Eclipse, solo lo hemos descomprimido y ejecutado, la integración por defecto con Unity es pésima: no aparecerá el icono correctamente en la barra lateral y no podremos encontrarlo dentro de las aplicaciones en el menú Inicio.<br /><br />La integración de las aplicaciones con Unity se lleva a cabo a través de un archivo .desktop que sigue el estándar definido por la organización freedesktop. En Ubuntu estos archivos se localizan en /usr/share/applications/ así que en la consola tecleamos<br /><br /><pre class="prettyprint">sudo gedit /usr/share/applications/eclipse.desktop</pre><br />Y escribimos las siguientes líneas<br /><br /><pre class="prettyprint">[Desktop Entry]<br />Name=Eclipse<br />Comment=Entorno de desarrollo integrado Eclipse<br />Exec=/home/usuario/Aplicaciones/eclipse/eclipse<br />Icon=/home/usuario/Aplicaciones/eclipse/icon.xpm<br />Terminal=false<br />Type=Application<br />Categories=Development</pre><br />Por supuesto en Comment puedes poner lo que quieras y en Exec y Icon debes poner la ruta al directorio donde hayas descomprimido el Eclipse.<br /><br />Ahora Eclipse se comportará como cualquier otra herramienta instalada.<br /><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">4. Instalando el SDK de Android:</span></span></span></span><br /><br />El SDK de Android es, básicamente, un gestor que nos ayudará a descargarnos todas las demás herramientas necesarias para desarrollar en esta plataforma: emuladores, documentación, APIs, etc.<br /><br />El SDK también contiene el AVD Manager que nos ayudará a gestionar nuestros AVDs (Android Virtual Devices) que son los emuladores donde probaremos nuestras aplicaciones.<br /><br />Podemos descargar el SDK de Android desde: <a href="http://developer.android.com/sdk/index.html" class="postlink">http://developer.android.com/sdk/index.html</a>. Al igual que ocurría con Eclipse el SDK no requiere instalación, simplemente extraemos el archivo comprimido donde queramos, yo lo he situado junto al Eclipse.<br /><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">5. Instalando ADT:</span></span></span></span><br /><br />ADT es el plugin oficial de Android para Eclipse, con él instalado Eclipse sabrá como crear y gestionar proyectos Android; compilar, correr y debugar aplicaciones Android; tendrá acceso a la API de Android para detectar errores de sintaxis y sugerir autocompletados y nos ofrecerá acceso directo al SDK, al AVD Manager y otras opciones más.<br /><br />Para instalar ADT en Eclipse podemos seguir paso a paso este tutorial oficial de Android: <a href="http://developer.android.com/sdk/eclipse-adt.html#installing" class="postlink">http://developer.android.com/sdk/eclipse-adt.html#installing</a>.<br /><br />Es probable que en algún momento recibimos un aviso de que no hay plataformas instaladas en el SDK, no hay problema, las vamos a instalar ahora mismo.<br /><br /><span style="font-weight: bold"><span style="text-decoration: underline"><span style="font-style: italic"><span style="color: #FF8000">5. Configurando el SDK:</span></span></span></span><br /><br />Una vez instalado ADT y reiniciado Eclipse accedemos al menú Window &gt; Android SDK Manager. Esperamos a que descargue toda la información y seleccionamos la carpeta Tools y todos sus elementos, y la plataforma más actualizada que haya y todos sus elementos. Hacemos clic en Instalar y dejamos que el SDK se encargue de todo (descargar e instalar), lo cual puede llevar un tiempo ya que son muchos megas.<br /><br />Y por fin tenemos nuestro Ubuntu listo para desarrollar Android.<br /><br />Aquí <a href="http://developer.android.com/resources/tutorials/hello-world.html" class="postlink">http://developer.android.com/resources/tutorials/hello-world.html</a> un tutorial en el que nos enseñan a crear nuestro primer AVD y nuestra primera aplicación.<br /><br />Y aquí <a href="http://developer.android.com/index.html" class="postlink">http://developer.android.com/index.html</a> toda la documentación oficial de Android para desarrolladores (en inglés).<br /><br />Un saludo!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2347">kaiser</a> — Mié Feb 08, 2012 11:38 am</p><hr />
]]></content>
</entry>
</feed>