<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=9&amp;t=601" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2009-08-25T09:57:37+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=9&amp;t=601</id>
<entry>
<author><name><![CDATA[algarafa]]></name></author>
<updated>2009-08-25T09:57:37+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2843#p2843</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2843#p2843"/>
<title type="html"><![CDATA[Me sigue explotando antes de tiempo]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2843#p2843"><![CDATA[
Hola, perón por tardar en postear, pero es que estuve de vacaciones en alemania. El caso es que he hecho todo lo que se me ha dicho en el post, y sigue funcionando mal. Para no hacer el post eterno, mejor dejo un link de descarga ya con imágenes y código fuente.<br /><!-- m --><a class="postlink" href="http://www.gigasize.com/get.php?d=1rx3ljn58pf">http://www.gigasize.com/get.php?d=1rx3ljn58pf</a><!-- m --><br />¡Saludos!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2006">algarafa</a> — Mar Ago 25, 2009 9:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[algarafa]]></name></author>
<updated>2009-07-31T09:35:50+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2821#p2821</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2821#p2821"/>
<title type="html"><![CDATA[Versión]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2821#p2821"><![CDATA[
<dl class="codebox"><dt>Code: </dt><dd><code>&gt;&gt;&gt; pygame.version.ver<br />'1.7.1release'<br /></code></dd></dl><br />Pues tenía la de los repos testing de Debian, toca actualizar, gracias.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2006">algarafa</a> — Vie Jul 31, 2009 9:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2009-07-28T16:31:32+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2817#p2817</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2817#p2817"/>
<title type="html"><![CDATA[Re: Muchas gracias]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2817#p2817"><![CDATA[
<blockquote><div><cite>rafahack95 escribió:</cite><br />Me tira un error:<br /><dl class="codebox"><dt>Code: </dt><dd><code>    if pygame.sprite.collide_circle&#40;nave, meteorito&#41;: <br />AttributeError: 'module' object has no attribute 'collide_circle'</code></dd></dl><br /></div></blockquote><br />¿Que versión tienes? Esa función fue añadida a partir de la versión 1.8.1. Puedes saber tu versión de Pygame poniendo en la consola: <dl class="codebox"><dt>Code: </dt><dd><code>python<br />import pygame<br />pygame.version.ver</code></dd></dl><br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mar Jul 28, 2009 4:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[algarafa]]></name></author>
<updated>2009-07-26T18:55:11+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2815#p2815</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2815#p2815"/>
<title type="html"><![CDATA[Muchas gracias]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2815#p2815"><![CDATA[
Muchas gracias por tu ayuda Juanxo, siento haber tardado en probarlo, pero es que me daba pereza <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Me tira un error:<br /><dl class="codebox"><dt>Code: </dt><dd><code>rafael@rafael:~$ cd Desktop/Aterriza\ la\ nave<br />rafael@rafael:~/Desktop/Aterriza la nave$ http://losersjuegos.com.ar/foro/Aterriza\ la\ nave.py<br />Traceback &#40;most recent call last&#41;:<br />  File &quot;http://losersjuegos.com.ar/foro/Aterriza la nave.py&quot;, line 188, in &lt;module&gt;<br />    if __name__ == '__main__':   main&#40;&#41;<br />  File &quot;http://losersjuegos.com.ar/foro/Aterriza la nave.py&quot;, line 178, in main<br />    if pygame.sprite.collide_circle&#40;nave, meteorito&#41;: <br />AttributeError: 'module' object has no attribute 'collide_circle'<br />rafael@rafael:~/Desktop/Aterriza la nave$ <br /><br /></code></dd></dl><br /><br />Te copio el código por si acaso hice algo mal:<br /><dl class="codebox"><dt>Code: </dt><dd><code>#!/usr/bin/python<br /># -*- coding: iso-8859-1 -*-<br /># ----------------------------------------------------------------------<br /># Nombre: Aterriza la nave<br /># Autor: Rafael Álvarez García &#40;rafahack95@gmail.com&#41;<br /># Descripción: Juego en el que hay que aterrizar una nave en una<br /># plataforma esquivando los meteoritos y con un combustible determinado.<br /># ----------------------------------------------------------------------<br /><br />import pygame<br />from pygame.locals import *<br />import os<br />import random<br /><br />SCREEN_WIDTH = 640<br />SCREEN_HEIGHT = 480<br />DATOS_IMA = 'ima'<br /><br />def load_image&#40;name, colorkey = False&#41;:<br />   &quot;&quot;&quot; Carga una imagen, devuelve una superficie y su rectángulo&quot;&quot;&quot;<br />   <br />   fullname = os.path.join&#40;DATOS_IMA, name&#41;<br />   <br />   try: image = pygame.image.load&#40;fullname&#41;<br />   except pygame.error, message:<br />      print 'No se ha podido cargar la imagen', fullname<br />      raise SystemExit, message<br />      <br />   image = image.convert&#40;&#41;<br />   if colorkey:<br />      colorkey = image.get_at&#40;&#40;0,0&#41;&#41;<br />      image.set_colorkey&#40;colorkey, RLEACCEL&#41;<br />   return image, image.get_rect&#40;&#41;<br />   <br />class Nave&#40;pygame.sprite.Sprite&#41;:<br />   &quot;&quot;&quot; Este objeto representa la nave que controla el jugador&quot;&quot;&quot;<br />   <br />   def __init__&#40;self&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image, self.rect = load_image&#40;'nave.gif'&#41;<br />      self.rect.centerx = SCREEN_WIDTH / 2<br />      self.rect.centery = SCREEN_HEIGHT - 400<br />      self.speed = &#91;0,0&#93;<br />      self.radius = self.rect.size&#91;0&#93;<br />      <br />   def gravedad&#40;self, gravedad&#41;:<br />      self.speed&#91;1&#93; = self.speed&#91;1&#93; + gravedad<br />      <br />   def mueve_nave&#40;self&#41;:<br />      tecla = pygame.key.get_pressed&#40;&#41;<br />      <br />      if tecla&#91;K_UP&#93;:<br />         self.speed&#91;1&#93; = self.speed&#91;1&#93; - 0.3<br />         <br />      if tecla&#91;K_LEFT&#93;:<br />         self.speed&#91;0&#93; = self.speed&#91;0&#93; - 0.3<br />         <br />      if tecla&#91;K_RIGHT&#93;:<br />         self.speed&#91;0&#93; = self.speed&#91;0&#93; + 0.3<br />      <br />   def update&#40;self&#41;:<br />      # En este método, se llaman a todos los demás, para que en el<br />      # cuerpo del programa solo sea necesario llamar a update<br />      self.mueve_nave&#40;&#41;<br />      self.gravedad&#40;0.1&#41;<br />      if self.rect.top &lt;1&gt;= SCREEN_HEIGHT:<br />         self.rect.bottom = SCREEN_HEIGHT<br />         self.speed&#91;1&#93; = 0<br />      if self.rect.left &lt;1&gt;= SCREEN_WIDTH + self.rect.width + 1:<br />         self.rect.left = -self.rect.width<br />      self.rect.move_ip&#40;&#40;self.speed&#91;0&#93;, self.speed&#91;1&#93;&#41;&#41;<br />      <br />class Meteorito&#40;pygame.sprite.Sprite&#41;:<br />   &quot;&quot;&quot; Este objeto, representa los meteoritos que el objeto Nave tendrá<br />      que esquivar&quot;&quot;&quot;<br />   <br />   def __init__&#40;self, rock&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image_base, self.rect_base = load_image&#40;rock&#41;<br />      self.rect_base.centerx = random.randrange&#40;0, SCREEN_WIDTH&#41;<br />      self.rect_base.centery = random.randrange&#40;0, SCREEN_HEIGHT&#41;<br />      self.speed = &#91;random.randrange&#40;-3, 3&#41;, random.randrange&#40;-3, 3&#41;&#93;<br />      self.image, self.rect = self.image_base, self.rect_base<br />      self.angle = 0<br />      self.angle_constante = random.randrange&#40;-4, 4&#41;<br />      self.radius = self.rect.size&#91;0&#93;<br />      <br />   def rotar_meteorito&#40;self&#41;:<br />      self.angle = self.angle - self.angle_constante<br />      self.image = pygame.transform.rotate&#40;self.image_base, self.angle&#41;<br />      self.rect = self.image.get_rect&#40;&#41;<br />      self.rect.centerx = self.rect_base.centerx<br />      self.rect.centery = self.rect_base.centery<br />      <br />   def update&#40;self&#41;:<br />      # En este método, se llaman a todos los demás, para que en el<br />      # cuerpo del programa solo sea necesario llamar a update<br />      self.rotar_meteorito&#40;&#41;<br />      if self.rect_base.top &lt;1&gt;= SCREEN_HEIGHT + self.rect_base.height + 1:<br />         self.rect_base.top = -self.rect_base.height<br />      if self.rect_base.left &lt;1&gt;= SCREEN_WIDTH + self.rect_base.width + 1:<br />         self.rect_base.left = -self.rect_base.width<br />      self.rect_base.move_ip&#40;&#40;self.speed&#91;0&#93;, self.speed&#91;1&#93;&#41;&#41;<br />      <br />class Boom&#40;pygame.sprite.Sprite&#41;:<br />    &quot;&quot;&quot;Representa una explosion de alguna nave.&quot;&quot;&quot;<br /><br />    def __init__&#40;self, x, y&#41;:<br />        pygame.sprite.Sprite.__init__&#40;self&#41;<br />        self.load_images&#40;&#41;<br />        self.step = 0<br />        self.delay = 2<br />        &#40;self.image, self.rect&#41; = load_image&#40;'boom/1.png', True&#41;<br />        self.rect.center = &#40;x, y&#41;<br /><br />    def load_images&#40;self&#41;:<br />        &quot;&quot;&quot;Carga la lista 'self.frames' con todos los cuadros de animacion&quot;&quot;&quot;<br /><br />        self.frames = &#91;&#93;<br /><br />        for n in range&#40;1, 8&#41;:<br />            path = 'boom/%d.png'<br />            new_image = load_image&#40;path % n, True&#41;&#91;0&#93;<br />            self.frames.append&#40;new_image&#41;<br /><br />    def update&#40;self&#41;:<br />        self.image = self.frames&#91;self.step&#93;<br /><br />        if self.delay &lt;0&gt; 6:<br />                self.kill&#40;&#41;<br />        else:<br />            self.delay -= 1<br />   <br /># ----------------------------------------------------------------------<br />   <br />def main&#40;&#41;:<br />   pygame.init&#40;&#41;<br />   screen = pygame.display.set_mode&#40;&#40;SCREEN_WIDTH, SCREEN_HEIGHT&#41;&#41;<br />   pygame.display.set_caption&#40;'Aterriza la nave'&#41;<br />   icon = load_image&#40;'icon.gif'&#41; &#91;0&#93;<br />   pygame.display.set_icon&#40;icon&#41;<br />   <br />   background, background_rect = load_image&#40;'background.jpg'&#41;<br />   screen.blit&#40;background, &#40;0,0&#41;&#41;<br />   <br />   nave = Nave&#40;&#41;<br />   meteorito1 = Meteorito&#40;'big_rock1.gif'&#41;<br />   meteorito2 = Meteorito&#40;'medium_rock1.gif'&#41;<br />   todos_sprites = pygame.sprite.RenderClear&#40;&#40;nave, meteorito1, meteorito2&#41;&#41;<br />   meteoritos = pygame.sprite.Group&#40;meteorito1, meteorito2&#41;<br />   clock = pygame.time.Clock&#40;&#41;<br />   <br />   while True:<br />      clock.tick&#40;60&#41;<br />      <br />      for event in pygame.event.get&#40;&#41;:<br />         if event.type == pygame.QUIT:<br />            raise SystemExit<br />         elif event.type == pygame.KEYDOWN:<br />            if event.key == K_ESCAPE:<br />               raise SystemExit<br />               <br />      # Gestionamos la explosión de la nave<br />      for meteorito in meteoritos:<br />         if pygame.sprite.collide_circle&#40;nave, meteorito&#41;: <br />            &#40;x, y&#41; = nave.rect.center<br />            todos_sprites.add&#40;Boom&#40;x, y&#41;&#41;<br />            nave.kill&#40;&#41;<br />      <br />      todos_sprites.update&#40;&#41;<br />      todos_sprites.clear&#40;screen, background&#41;<br />      todos_sprites.draw&#40;screen&#41;<br />      pygame.display.flip&#40;&#41;<br />   <br />if __name__ == '__main__':   main&#40;&#41;<br /></code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2006">algarafa</a> — Dom Jul 26, 2009 6:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Juanxo]]></name></author>
<updated>2009-07-21T10:44:38+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2798#p2798</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2798#p2798"/>
<title type="html"><![CDATA[Colisiones y explosiones (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2798#p2798"><![CDATA[
En efecto, tenías razón el problema de las colisiones está en main:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>if pygame.sprite.spritecollide&#40;nave, meteoritos, 1&#41;: <br /></code></dd></dl><br />El último parámetro(do_kill), hace que, en caso de ponerse a uno, todo sprite del grupo(en este caso meteoritos) que choque con nave desaparezca. Ponlo a 0 y dentro haz:<br /><dl class="codebox"><dt>Code: </dt><dd><code> kill nave</code></dd></dl><br /><br />El tema de que exploten sin tocarse es algo que creo que te comente en el post de la rotación del meteorito. Al rotar la imagen, el rect de la misma se tiene que ir ajustando( por que pygame no soporta rects rotados, por lo que el rect del meteorito aumenta, haciendo que choque antes de haber colisionado las imagenes.<br /><br />Para evitar esto, podrías tratar las colisiones en vez de con rects, con circle, haciendo un circulo que rodee a la nave y otro que rodee al meteorito, los cuales no cambiarían nunca al rotar el meteorito(creo). Sería algo así:<br /><dl class="codebox"><dt>Code: </dt><dd><code>for meteorito in grupo_meteoritos:<br />   if pygame.sprite.collide_circle&#40;nave, meteorito&#41;:<br />       kill nave<br />       reiniciar&#40;......&#41;<br />       break<br /></code></dd></dl><br /><br />Para poder utilizar esta función, es obligatorio que el Sprite tenga un rect (self.rect) y opcional que tenga un radius(self.radius), que es el radio de colisión.<br />En caso de no tener un radius, se cogerá un circulo capaz de englobar al rect entero, por lo que estaríamos peor que antes.<br /><br />Espero haberte ayudado en algo.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2057">Juanxo</a> — Mar Jul 21, 2009 10:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[algarafa]]></name></author>
<updated>2009-07-21T10:28:12+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2797#p2797</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2797#p2797"/>
<title type="html"><![CDATA[Colisiones y explosiones (pygame)]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=601&amp;p=2797#p2797"><![CDATA[
Siguiendo el ejemplo de invaders de Juanxo, he conseguido que la navecita estalle al chocar con un meteorito, pero e caso es que estalla aún sin tocarlo si quiera, y no solo desaparece la nave al chocar con los meteoritos, también desaparecen los meteoritos.<br />Les paso el código a ver si ven el error (tiene que estar en la funcion main(), lo digo para ahorraros trabajo).<br /><dl class="codebox"><dt>Code: </dt><dd><code>#!/usr/bin/python<br /># -*- coding: iso-8859-1 -*-<br /># ----------------------------------------------------------------------<br /># Nombre: Aterriza la nave<br /># Autor: Rafael Álvarez García &#40;rafahack95@gmail.com&#41;<br /># Descripción: Juego en el que hay que aterrizar una nave en una<br /># plataforma esquivando los meteoritos y con un combustible determinado.<br /># ----------------------------------------------------------------------<br /><br />import pygame<br />from pygame.locals import *<br />import os<br />import random<br /><br />SCREEN_WIDTH = 640<br />SCREEN_HEIGHT = 480<br />DATOS_IMA = 'ima'<br /><br />def load_image&#40;name, colorkey = False&#41;:<br />   &quot;&quot;&quot; Carga una imagen, devuelve una superficie y su rectángulo&quot;&quot;&quot;<br />   <br />   fullname = os.path.join&#40;DATOS_IMA, name&#41;<br />   <br />   try: image = pygame.image.load&#40;fullname&#41;<br />   except pygame.error, message:<br />      print 'No se ha podido cargar la imagen', fullname<br />      raise SystemExit, message<br />      <br />   image = image.convert&#40;&#41;<br />   if colorkey:<br />      colorkey = image.get_at&#40;&#40;0,0&#41;&#41;<br />      image.set_colorkey&#40;colorkey, RLEACCEL&#41;<br />   return image, image.get_rect&#40;&#41;<br />   <br />class Nave&#40;pygame.sprite.Sprite&#41;:<br />   &quot;&quot;&quot; Este objeto representa la nave que controla el jugador&quot;&quot;&quot;<br />   <br />   def __init__&#40;self&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image, self.rect = load_image&#40;'nave.gif'&#41;<br />      self.rect.centerx = SCREEN_WIDTH / 2<br />      self.rect.centery = SCREEN_HEIGHT - 400<br />      self.speed = &#91;0,0&#93;<br />      <br />   def gravedad&#40;self, gravedad&#41;:<br />      self.speed&#91;1&#93; = self.speed&#91;1&#93; + gravedad<br />      <br />   def mueve_nave&#40;self&#41;:<br />      tecla = pygame.key.get_pressed&#40;&#41;<br />      <br />      if tecla&#91;K_UP&#93;:<br />         self.speed&#91;1&#93; = self.speed&#91;1&#93; - 0.3<br />         <br />      if tecla&#91;K_LEFT&#93;:<br />         self.speed&#91;0&#93; = self.speed&#91;0&#93; - 0.3<br />         <br />      if tecla&#91;K_RIGHT&#93;:<br />         self.speed&#91;0&#93; = self.speed&#91;0&#93; + 0.3<br />      <br />   def update&#40;self&#41;:<br />      # En este método, se llaman a todos los demás, para que en el<br />      # cuerpo del programa solo sea necesario llamar a update<br />      self.mueve_nave&#40;&#41;<br />      self.gravedad&#40;0.1&#41;<br />      if self.rect.top &lt;1&gt;= SCREEN_HEIGHT:<br />         self.rect.bottom = SCREEN_HEIGHT<br />         self.speed&#91;1&#93; = 0<br />      if self.rect.left &lt;1&gt;= SCREEN_WIDTH + self.rect.width + 1:<br />         self.rect.left = -self.rect.width<br />      self.rect.move_ip&#40;&#40;self.speed&#91;0&#93;, self.speed&#91;1&#93;&#41;&#41;<br />      <br />class Meteorito&#40;pygame.sprite.Sprite&#41;:<br />   &quot;&quot;&quot; Este objeto, representa los meteoritos que el objeto Nave tendrá<br />      que esquivar&quot;&quot;&quot;<br />   <br />   def __init__&#40;self, rock&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image_base, self.rect_base = load_image&#40;rock&#41;<br />      self.rect_base.centerx = random.randrange&#40;0, SCREEN_WIDTH&#41;<br />      self.rect_base.centery = random.randrange&#40;0, SCREEN_HEIGHT&#41;<br />      self.speed = &#91;random.randrange&#40;-3, 3&#41;, random.randrange&#40;-3, 3&#41;&#93;<br />      self.image, self.rect = self.image_base, self.rect_base<br />      self.angle = 0<br />      self.angle_constante = random.randrange&#40;-4, 4&#41;<br />      <br />   def rotar_meteorito&#40;self&#41;:<br />      self.angle = self.angle - self.angle_constante<br />      self.image = pygame.transform.rotate&#40;self.image_base, self.angle&#41;<br />      self.rect = self.image.get_rect&#40;&#41;<br />      self.rect.centerx = self.rect_base.centerx<br />      self.rect.centery = self.rect_base.centery<br />      <br />   def update&#40;self&#41;:<br />      # En este método, se llaman a todos los demás, para que en el<br />      # cuerpo del programa solo sea necesario llamar a update<br />      self.rotar_meteorito&#40;&#41;<br />      if self.rect_base.top &lt;1&gt;= SCREEN_HEIGHT + self.rect_base.height + 1:<br />         self.rect_base.top = -self.rect_base.height<br />      if self.rect_base.left &lt;1&gt;= SCREEN_WIDTH + self.rect_base.width + 1:<br />         self.rect_base.left = -self.rect_base.width<br />      self.rect_base.move_ip&#40;&#40;self.speed&#91;0&#93;, self.speed&#91;1&#93;&#41;&#41;<br />      <br />class Boom&#40;pygame.sprite.Sprite&#41;:<br />    &quot;&quot;&quot;Representa una explosion de alguna nave.&quot;&quot;&quot;<br /><br />    def __init__&#40;self, x, y&#41;:<br />        pygame.sprite.Sprite.__init__&#40;self&#41;<br />        self.load_images&#40;&#41;<br />        self.step = 0<br />        self.delay = 2<br />        &#40;self.image, self.rect&#41; = load_image&#40;'boom/1.png', True&#41;<br />        self.rect.center = &#40;x, y&#41;<br /><br />    def load_images&#40;self&#41;:<br />        &quot;&quot;&quot;Carga la lista 'self.frames' con todos los cuadros de animacion&quot;&quot;&quot;<br /><br />        self.frames = &#91;&#93;<br /><br />        for n in range&#40;1, 8&#41;:<br />            path = 'boom/%d.png'<br />            new_image = load_image&#40;path % n, True&#41;&#91;0&#93;<br />            self.frames.append&#40;new_image&#41;<br /><br />    def update&#40;self&#41;:<br />        self.image = self.frames&#91;self.step&#93;<br /><br />        if self.delay &lt;0&gt; 6:<br />                self.kill&#40;&#41;<br />        else:<br />            self.delay -= 1<br />   <br /># ----------------------------------------------------------------------<br />   <br />def main&#40;&#41;:<br />   pygame.init&#40;&#41;<br />   screen = pygame.display.set_mode&#40;&#40;SCREEN_WIDTH, SCREEN_HEIGHT&#41;&#41;<br />   pygame.display.set_caption&#40;'Aterriza la nave'&#41;<br />   icon = load_image&#40;'icon.gif'&#41; &#91;0&#93;<br />   pygame.display.set_icon&#40;icon&#41;<br />   <br />   background, background_rect = load_image&#40;'background.jpg'&#41;<br />   screen.blit&#40;background, &#40;0,0&#41;&#41;<br />   <br />   nave = Nave&#40;&#41;<br />   meteorito1 = Meteorito&#40;'big_rock1.gif'&#41;<br />   meteorito2 = Meteorito&#40;'medium_rock1.gif'&#41;<br />   todos_sprites = pygame.sprite.RenderClear&#40;&#40;nave, meteorito1, meteorito2&#41;&#41;<br />   meteoritos = pygame.sprite.Group&#40;meteorito1, meteorito2&#41;<br />   clock = pygame.time.Clock&#40;&#41;<br />   <br />   while True:<br />      clock.tick&#40;60&#41;<br />      <br />      for event in pygame.event.get&#40;&#41;:<br />         if event.type == pygame.QUIT:<br />            raise SystemExit<br />         elif event.type == pygame.KEYDOWN:<br />            if event.key == K_ESCAPE:<br />               raise SystemExit<br />               <br />      # Gestionamos la explosión de la nave<br />      if pygame.sprite.spritecollide&#40;nave, meteoritos, 1&#41;:<br />         &#40;x, y&#41; = nave.rect.center<br />         todos_sprites.add&#40;Boom&#40;x, y&#41;&#41;<br />         nave.kill&#40;&#41;<br />      <br />      todos_sprites.update&#40;&#41;<br />      todos_sprites.clear&#40;screen, background&#41;<br />      todos_sprites.draw&#40;screen&#41;<br />      pygame.display.flip&#40;&#41;<br />   <br />if __name__ == '__main__':   main&#40;&#41;<br /></code></dd></dl><br />Saludos y gracias!!! <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2006">algarafa</a> — Mar Jul 21, 2009 10:28 am</p><hr />
]]></content>
</entry>
</feed>