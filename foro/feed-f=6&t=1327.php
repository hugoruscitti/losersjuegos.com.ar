<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=1327" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2011-11-15T03:06:00+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=1327</id>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2011-11-15T03:06:00+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6187#p6187</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6187#p6187"/>
<title type="html"><![CDATA[Re: PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6187#p6187"><![CDATA[
...Y sobre la duda del IDE, yo en lo personal utilizo principalmente el Gedit y la terminal (en ocasiones el Dr. Python) cuando es en Linux. En Windows, me doy por bien servido con el incluido por Python... (muy a pesar de que es algo &quot;feo&quot;... <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_razz.gif" alt=":P" title="Razz" />)<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Mar Nov 15, 2011 3:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2011-11-15T03:00:25+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6186#p6186</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6186#p6186"/>
<title type="html"><![CDATA[Re: PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6186#p6186"><![CDATA[
Hola, ha pasado un tiempo jeje...<br /><blockquote><div><cite>Nexusblake escribió:</cite><br />edit: una consulta, me podrias explicar la parte donde obtienes los distintos estados de la imagen? es que en mi codigo tengo definido los distintos sprites en un arreglo y los voy agregando de uno en uno segun los pixeles de la imagen, dejandome un gran trozo de codigo..<br /></div></blockquote><br />Bueno, la magia esta en la clase &quot;Animación&quot;, que lo que realiza es cortar la imagen como si fuera una matriz, (por eso cuando se &quot;incializa&quot;, pide como argumento columnas y filas).<br /><dl class="codebox"><dt>Code: </dt><dd><code>class AnimacionDeArchivo():<br />    def __init__(self, columnas, filas, image):<br />        #inicializamos las características para la animación<br />        self.lista_frames = &#91;&#93;<br />        tile_w = image.get_width () / columnas<br />        tile_h = image.get_height () / filas<br />        #esto corta mi imagen como si recorriera una matriz<br />        for f in xrange (filas):<br />            for c in xrange (columnas):<br />                rect = c * tile_w , f * tile_h , tile_w, tile_h<br />                #y esta parte añade lo que &quot;corta&quot; a un arreglo que las contiene<br />                self.lista_frames.append(image.subsurface(rect).copy ())<br />        #variables que necesito para la animación<br />        self._frame = 0<br />        self.inicio = pygame.time.get_ticks()<br />        self._delay = 1000/15<br />        self.ultima_act = 0 #ultima<br />    def Frame_es(self, Lista_anima = &#91;0&#93;, Reset = False, Frame_return = False):<br />        if Reset:<br />            self._frame = 0<br />        if pygame.time.get_ticks() - self.ultima_act &gt; self._delay:<br />            self._frame += 1<br />            if self._frame &gt;= len(Lista_anima):<br />                self._frame = 0<br />            self.ultima_act = pygame.time.get_ticks()<br />        if Frame_return:<br />            return self.lista_frames&#91; Lista_anima&#91;self._frame&#93; &#93;, self._frame<br />        else:<br />            return self.lista_frames&#91; Lista_anima&#91;self._frame&#93; &#93;<br /></code></dd></dl><br />Ahora, en el método &quot;Frame_es&quot; le doy como argumento que pedazos de la imagen quiero para formar la animación, por ejemplo:<br /><dl class="codebox"><dt>Code: </dt><dd><code>#mi imagen:<br />    |aaaa|<br />    |aaaa|<br />    |aaaa|<br />#mi imagen dividida en columnas y filas:<br />    |0|1|2|<br />    |3|4|5|<br />    |6|7|9|<br /></code></dd></dl><br /><br />Y no me preocupo de nada más...<br />no sé si eso responda la duda... <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Mar Nov 15, 2011 3:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MrBB4]]></name></author>
<updated>2011-11-12T01:49:40+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6181#p6181</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6181#p6181"/>
<title type="html"><![CDATA[Re: PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6181#p6181"><![CDATA[
Buenas. Yo hace poco empecé a usar Spyder. Es bastante comodo en comparación a los otros pocos ides que he utilizado, aunque hay otros más profecionales, pero este se enfoca en python asi que te va a ayudar mucho. lo puedes encontrár en este <a href="http://code.google.com/p/spyderlib/" class="postlink">Link</a>.<br /><br />Saludos y suerte en tu proyecto <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2357">MrBB4</a> — Sab Nov 12, 2011 1:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nexusblake]]></name></author>
<updated>2011-11-11T01:55:54+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6177#p6177</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6177#p6177"/>
<title type="html"><![CDATA[Re: PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6177#p6177"><![CDATA[
Muchas gracias!! genial era exactamente lo que queria <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />, vere si al terminar el proyecto logro subirlo para que lo vean, una consulta que usas para programar? algun ide o solo terminal, yo uso netbeans, pregunto por si hay algun otro mejor para usar D:, eso seria gracias nuevamente  <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /><br /><br />------<br />edit: una consulta, me podrias explicar la parte donde obtienes los distintos estados de la imagen? es que en mi codigo tengo definido los distintos sprites en un arreglo y los voy agregando de uno en uno segun los pixeles de la imagen, dejandome un gran trozo de codigo..<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2532">Nexusblake</a> — Vie Nov 11, 2011 1:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2011-11-11T00:32:08+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6176#p6176</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6176#p6176"/>
<title type="html"><![CDATA[Re: PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6176#p6176"><![CDATA[
Podrías mostrar el código que llevas, eso ayuda mucho más de lo que crees <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Bueno, aquí esta el código de un muy sencillo plataformas. Nota en la clase personaje, el estado salto <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><dl class="codebox"><dt>Code: </dt><dd><code>#!/usr/bin/env python<br /># -*- coding: utf-8 -*-<br />from pygame.locals import *<br />import pygame, os, sys<br /><br />#función para cargar imagenes<br />def load_image(name, colorkey=False):<br />    fullname = os.path.join(name)<br />    try:<br />        image = pygame.image.load(fullname)<br />    except pygame.error, message:<br />        print 'No se puede cargar la imagen: ', fullname<br />        raise SystemExit, message<br />    image = image.convert()<br />    if colorkey:<br />        colorkey = image.get_at((0, 0))<br />        image.set_colorkey(colorkey, RLEACCEL)<br />    return (image)<br /><br />#Creamos un &quot;nivel&quot;<br />class Nivel():<br />    def __init__(self, Ancho, Alto):<br />        self.bloques = &#91;&#93;<br />        imagen = load_image(&quot;brock.png&quot;)<br />        filas = 3<br />        columnas = 9<br />        #corto la imagen de los tiles <br />        tile_w = imagen.get_width () / columnas<br />        tile_h = imagen.get_height () / filas<br />        for f in xrange (filas):<br />            for c in xrange (columnas):<br />                rect = c * tile_w , f * tile_h , tile_w, tile_h<br />                #y guardo los pedasos en una lista<br />                self.bloques.append(imagen.subsurface(rect).copy ())<br />        #genero un mapa muy simple<br />        self.mapa = &#91;<br />               &#91;-1,-1,-1,-1,-1&#93;,<br />               &#91;-1,-1,-1,-1,-1&#93;,<br />               &#91;-1,-1,-1,-1,-1&#93;,<br />               &#91;-1,-1,-1,-1,-1&#93;,<br />               &#91; 1, 1, 1, 1, 1&#93;<br />               &#93;<br />        #un par de variables para controlar las coliciones<br />        espaciox = 500/len(self.mapa)<br />        espacioy = 500/len(self.mapa&#91;0&#93;)<br />        self.dimenciones = (espaciox, espacioy)<br />    def imprimir(self,superficie):<br />        # Dibuja sobre una superficie todos los bloques del nivel.<br />        numero_de_filas = len( self.mapa )<br />        numero_de_columnas = len( self.mapa&#91;0&#93; )<br />        espaciox = superficie.get_width()/numero_de_filas<br />        espacioy = superficie.get_height()/numero_de_columnas<br />        self.dimenciones = (espaciox, espacioy)<br />        for fila in range(numero_de_filas):<br />            for columna in range(numero_de_columnas):<br />                pos_x = columna * espaciox<br />                pos_y = fila * espacioy<br />                #en caso de que sea distinto de -1<br />                if self.mapa&#91;fila&#93;&#91;columna&#93; != -1:<br />                    #imprimo la imagen indicada en el mapa<br />                    index = self.mapa&#91;fila&#93;&#91;columna&#93;<br />                    bloque = self.bloques&#91;index&#93; #aqui la tomo<br />                    #la escalo<br />                    bloque = pygame.transform.scale(bloque,(espaciox,espacioy))<br />                    superficie.blit(bloque, (pos_x, pos_y))<br />    <br />    def puede_pasar(self, posx, posy):<br />        #función que resive una posición y regresa un valor boleano<br />        columna = int( posx / self.dimenciones&#91;0&#93; )<br />        fila = int( posy / self.dimenciones&#91;1&#93; )<br />        try:<br />            celda = int(self.mapa&#91;fila&#93;&#91;columna&#93;)<br />        except:<br />            # si no puede obtener la celda prohíbe pisar ahí<br />            return False<br />        #si la celda distinta de nuestro &quot;valor nulo&quot;<br />        if celda != -1:<br />            #es obvio que no puede pasar<br />            return False<br />        #si no sucede eso, en ese caso, puede pasar<br />        return True<br />    def distancia_al_suelo(self, pos, rango):<br />        # función que mide la distancia al suelo en un rango<br />        posx, posy = pos<br />        contador = 0<br />        while contador &lt; rango:<br />            contador += 1<br />            if not(self.puede_pasar(posx, posy + contador)):<br />                #nos regresa la distancia al suelo<br />                return contador<br />        #si regresa el rango, indica que no encuentra el suelo.<br />        return rango<br />        <br /><br />#creo una clase para gestionar las animaciones<br />#un uso alternativo, es &quot;partir&quot; la imagen<br />class AnimacionDeArchivo():<br />    def __init__(self, columnas, filas, image):<br />        #inicializamos las características para la animación<br />        self.lista_frames = &#91;&#93;<br />        tile_w = image.get_width () / columnas<br />        tile_h = image.get_height () / filas<br />        for f in xrange (filas):<br />            for c in xrange (columnas):<br />                rect = c * tile_w , f * tile_h , tile_w, tile_h<br />                self.lista_frames.append(image.subsurface(rect).copy ())<br />        #variabloes que nesesito para la animación<br />        self._frame = 0<br />        self.inicio = pygame.time.get_ticks()<br />        self._delay = 1000/15<br />        self.ultima_act = 0 #ultima<br />    def Frame_es(self, Lista_anima = &#91;0&#93;, Reset = False, Frame_return = False):<br />        if Reset:<br />            self._frame = 0<br />        if pygame.time.get_ticks() - self.ultima_act &gt; self._delay:<br />            self._frame += 1<br />            if self._frame &gt;= len(Lista_anima):<br />                self._frame = 0<br />            self.ultima_act = pygame.time.get_ticks()<br />        if Frame_return:<br />            return self.lista_frames&#91; Lista_anima&#91;self._frame&#93; &#93;, self._frame<br />        else:<br />            return self.lista_frames&#91; Lista_anima&#91;self._frame&#93; &#93;<br /><br />#primero, creamos una clase para nuestro personaje<br />class Personaje(pygame.sprite.Sprite):<br />    def __init__(self):<br />        pygame.sprite.Sprite.__init__(self)<br />        imagen = load_image(&quot;eva.png&quot;, True)<br />        self.animacion = AnimacionDeArchivo( 4, 4, imagen)<br />        self.image = self.animacion.Frame_es( &#91;1&#93; )<br />        self.rect = self.image.get_rect()<br />        self.gravedad = 0.1<br />        self.dx = 5<br />        #algunas personas usaran dy<br />        #yo uso fuerza salto....<br />        self.fuerza_salto = 0<br />        #si, es menos practico que dy...<br />        <br />        #definimos la posición inicial<br />        self.posx = 250<br />        self.posy = 250<br />        #creamos una variable para guardar el estado<br />        self.estado = &quot;Parado&quot;<br />        # y una pequeña verción del nivel<br />        self.esenario = Nivel(500,500)<br />    def estado_parado(self):<br />        #lo que hace en el estado parado<br />        #self.mover, es una función para gestionar movimiento-animación<br />        self.mover()<br />        key=pygame.key.get_pressed()<br />        if key&#91;K_UP&#93;:<br />            self.estado = &quot;Salta&quot;<br />            self.fuerza_salto = 5 #inicializamos la fuerza del salto...<br />        #en caso de que este en una plataforma...<br />        distancia = self.esenario.distancia_al_suelo(self.rect.midbottom, 10)<br />        #y la distancia que lo separa del suelo sea mayor a 10<br />        if distancia &gt;= 10:<br />            #significa que esta cayendo al suelo...<br />            self.estado = &quot;Salta&quot;<br />            self.fuerza_salto = 0 #por eso ponemos la fuerza salto en 0<br />    def estado_saltar(self):<br />        #la serie de acciones a realizar en el estado salta<br />        self.posy -= self.fuerza_salto # a la posición x añadimos la fuerza_salto<br />        self.fuerza_salto -= self.gravedad # a la fuerza salto, añadimos la de la gravedad<br />        self.mover() #llamamos a la función mover...<br />        #deja de subir y comienza a caer...<br />        if self.fuerza_salto &lt; 0:<br />            #verifico la distancia que me separa del suelo<br />            distancia = self.esenario.distancia_al_suelo(self.rect.midbottom, 10)<br />            if distancia &lt;= 5:<br />                #si es menor a cierto rango... <br />                #cambio a el estado parado<br />                self.estado = &quot;Parado&quot;<br />    def mover(self):<br />        #aqui definimos la función mover...<br />        key=pygame.key.get_pressed()<br />        if key&#91;K_RIGHT&#93;:<br />            #sección de animación....<br />            if self.estado != &quot;Salta&quot;:<br />                #si no esta saltando...<br />                image = self.animacion.Frame_es( &#91;4,4,5,5,6,6,7,7&#93; )<br />                #volteamos la imagen<br />                self.image = pygame.transform.flip(image, True, False)<br />            else:<br />                #si salta, la imagen es...<br />                image = self.animacion.Frame_es( &#91;5,5&#93;, True )<br />                self.image = pygame.transform.flip(image, True, False)    <br />            #sección de movimiento<br />            if self.posx &lt; 500:<br />                self.posx += self.dx<br />            else:<br />                self.posx = 500<br />        #lo mismo, pero para el otro lado...<br />        elif key&#91;K_LEFT&#93;:<br />            if self.estado != &quot;Salta&quot;:<br />                self.image = self.animacion.Frame_es( &#91;4,4,5,5,6,6,7,7&#93; )<br />            else:<br />                self.image = self.animacion.Frame_es( &#91;5,5&#93;, True )<br />            if self.posx &gt; 0:<br />                self.posx -= self.dx<br />            else:<br />                self.posx = 0<br />        #en caso de que no se mueva en el eje x<br />        else:<br />            if self.estado != &quot;Salta&quot;:<br />                self.image = self.animacion.Frame_es( &#91;1&#93;,  Reset = True)<br />            else:<br />                self.image = self.animacion.Frame_es( &#91;10,10&#93;, True )<br />    def update(self):<br />        #colocamos el centro de la imagen en la posición...<br />        self.rect.center = (self.posx,self.posy)<br />        #si el estado es tal...<br />            #llamo a su metodo<br />        if self.estado == &quot;Salta&quot;:<br />            self.estado_saltar()<br />        if self.estado == &quot;Parado&quot;:<br />            self.estado_parado()<br />def main():<br />    pygame.init()<br />    pantalla = pygame.display.set_mode((500,500))<br />    personaje = Personaje() #creo mi personaje...<br />    sprite = pygame.sprite.RenderClear()<br />    sprite.add(personaje)<br />    continuar = True<br />    nivel = Nivel(500,500) #creo mi nivel<br />    reloj = pygame.time.Clock()<br />    while continuar:<br />        #relleno la pantalla<br />        pantalla.fill((150,150,200))<br />        for evento in pygame.event.get():<br />            if evento.type==pygame.QUIT:<br />                continuar=False<br />                pygame.quit()# salir del juego<br />                sys.exit()<br />        sprite.draw(pantalla) # dibujo mi personaje...<br />        nivel.imprimir(pantalla) # dibujo mi nivel...<br />        personaje.update() # actualizo a mi personaje...<br />        reloj.tick(60)<br />        pygame.display.update()<br /><br />main()<br /></code></dd></dl><br /><br /><br /><br />Espero que te ayude <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Vie Nov 11, 2011 12:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nexusblake]]></name></author>
<updated>2011-11-10T22:21:27+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6175#p6175</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6175#p6175"/>
<title type="html"><![CDATA[PyGame hacer salto con un sprite]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=1327&amp;p=6175#p6175"><![CDATA[
Hola, soy nuevo por aqui y como vi tantos ejemplos en la web y ayuda en los foros, quize formar parte de la comunidad. Tenia una consulta con respecto a pygame y saltos de mi sprite en un juego de plataforma que estoy realizando. lo que pasa esk tengo lo principal mi personaje se mueve de izquierda a derecha perfectamente, lo que ocurre esque, necesito que salte tengo los sprites del salto y todo y tengo conocimiento de como ir guardando las cordenadas del personaje en un array y asi realizar el movimiento del mismo, busque en el foro y encontre un ejemplo de salto que lo isieron con un cubo, lo comprendi, pero al momento de querer aplicarlo en mi juego no pude, aparte de que los ejemplos que estan en la web son muy complejos para mi. si es posible que me pudieran explicar el codigo o mostrarme algun ejemplo con un sprites porfavor, al momento de presionar por ejemplo el espacio y salte<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2532">Nexusblake</a> — Jue Nov 10, 2011 10:21 pm</p><hr />
]]></content>
</entry>
</feed>