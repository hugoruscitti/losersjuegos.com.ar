<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=12&amp;t=688" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2010-02-03T12:38:57+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=12&amp;t=688</id>
<entry>
<author><name><![CDATA[endaramiz]]></name></author>
<updated>2010-02-03T12:38:57+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3248#p3248</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3248#p3248"/>
<title type="html"><![CDATA[dispara cuadrado: mi primer pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3248#p3248"><![CDATA[
Me he mirado el código por encima y tiene buena pinta. Lo único que me ha llamado un poco la atención han sido los &quot;else: pass&quot;. No me acuerdo mucho de python, pero acabo de leer que el pass no hace nada. Por lo tanto, se puede eliminar el &quot;else&quot; ya que, aunque haya un &quot;if&quot;, no obliga a poner &quot;elif&quot; o &quot;else&quot;.<br /><br />Me gusta. A partir de aquí podrías seguir jugando con el código y hacer, por ejemplo, que una bala rebote un número limitado de veces y que luego puedas disparar otra...<br /><br />Saludos.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=1809">endaramiz</a> — Mié Feb 03, 2010 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hugoruscitti]]></name></author>
<updated>2010-01-31T23:40:01+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3239#p3239</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3239#p3239"/>
<title type="html"><![CDATA[dispara cuadrado: mi primer pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3239#p3239"><![CDATA[
Buenisimo, yo creo que está muy bien, y adems es divertido...<br /><br />En mi equipo marca mas cuados por segundo, pero igualmente<br />está bien, en pygame se utiliza &quot;clock.tick&quot; como lo estás<br />haciendo tu:<br /><br /><img src="http://www.losersjuegos.com.ar/incoming/descargas/20100131/ball.png" alt="Imagen" /><br /><br />Con respecto a mejoras, yo agregaría un manejador de eventos<br />para que se pueda cerrar el programa cuando se pulsa el<br />botón de cerrar ventana. Pero es un detalle menor, solamente<br />habría que que colocar lo siguiente en el método &quot;on_event&quot;<br />de la clase &quot;World&quot;:<br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>   def on_event&#40;self&#41;:<br />      evento=pygame.event.get&#40;&#41;<br /><br />      for x in evento:<br />          if x.type == pygame.QUIT:<br />              self.running = False<br />      ....<br /></code></dd></dl><br /><br />ah, otra cosa que podría resultar interesante es colocar<br />audio, por ejemplo mediante tonos aleatorios cuando el<br />cuadrado toca alguna pared. He visto esto en algunos<br />juegos y le añade mucha diversión.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3">hugoruscitti</a> — Dom Ene 31, 2010 11:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Juanxo]]></name></author>
<updated>2010-01-31T20:13:16+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3236#p3236</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3236#p3236"/>
<title type="html"><![CDATA[dispara cuadrado: mi primer pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3236#p3236"><![CDATA[
Buenas estudiante:<br /><br />Le estoy echando un ojo al juego, y creo que hay un pequeño problema.<br /><br />Si me salgo por los límites de la pantalla y disparo, no se ve la bala(logico), pero el problema es que ya no puedo volver a disparar, ya que self.permit_space pasa a ser false.<br /><br />Yo te recomendaría limitar el movimiento del player, evitando que pueda salir por los limites de la pantalla<br /><br />Ya te diré más cosas cuando lo mire más a fondo<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2057">Juanxo</a> — Dom Ene 31, 2010 8:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[estudiante]]></name></author>
<updated>2010-01-31T16:53:23+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3235#p3235</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3235#p3235"/>
<title type="html"><![CDATA[dispara cuadrado: mi primer pygame]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=688&amp;p=3235#p3235"><![CDATA[
Hola:<br />Primero, felicitarlos por la página. Muy buena<br /><br />Me presento: Mi nombre es Hugo (tambien), pero pueden llamarme &quot;Estudiante&quot;. No soy programador, soy ingeniero mecánico. <br /><br />Les presento el juego que he hecho. <br />-¿Está bien la velocidad (los FPS)?. En mi Pentium IV  en promedio tengo 44 FPS.<br /><br />- ¿Se entiende el código?<br /><br />- ¿Alguna sugerencia de cómo mejorarlo, hacerlo menos soso? Por favor, no me digan que lo borre todo <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_sad.gif" alt=":(" title="Sad" /> <br /><br />Les indico como se juega, mueven el cuadrito rojo (&quot;TheCannon&quot;) con flecha izquierda o derecha. Disparan la bala (&quot;thebullet&quot;) con barra esapaciadora. Tienen que darle al otro cuadrito amarillo que es &quot;target&quot;. <br /><br /><br /><dl class="codebox"><dt>Code: </dt><dd><code>#! /usr/bin/env python<br /><br /># A simple actor1 game.<br /><br />import pygame<br />import random<br /><br /><br /><br />class World&#40;pygame.sprite.Sprite&#41;:<br />   def __init__&#40;self,w_screen=500,h_screen=600&#41;:<br />      <br />      pygame.font.init&#40;&#41;<br />      <br />      self.fuente = pygame.font.Font&#40;None, 30&#41;<br />      <br />      self.rect=pygame.rect.Rect&#40;0,0,w_screen,h_screen&#41;<br />      <br /><br />      self.screen = pygame.display.set_mode&#40;&#40;w_screen, h_screen&#41;&#41;<br />      self.clock = pygame.time.Clock&#40;&#41;<br /><br />      self.score = 0<br /><br />      self.thecannon = Cannon&#40;&#40;w_screen/2, h_screen*3/5, 10, 10&#41;,&#40;0, 0&#41;, self.screen&#41;<br />      <br />      <br />      self.obstL = Obstacle&#40;&#40;0, 0, 10, h_screen&#41;,&#40;0, 0&#41;, self.screen&#41;<br />      self.obstR = Obstacle&#40;&#40;w_screen-11, 0, 10, h_screen&#41;,&#40;0, 0&#41;, self.screen&#41;<br />      self.obstU = Obstacle&#40;&#40;0, 0, w_screen, 10 &#41;,&#40;0, 0&#41;, self.screen&#41;<br />      self.obstD = Obstacle&#40;&#40;0, h_screen*3/5+20 , w_screen, 10&#41;,&#40;0, 0&#41;, self.screen&#41;<br />      randposx = random.randint&#40;20, w_screen-20&#41;<br />      randposy = random.randint&#40;20, h_screen/2&#41;<br />      self.target = Miactor&#40;&#40;randposx, randposy, 25, 25&#41;, &#40;0, 0&#41;, self.screen&#41;<br />      self.obst1 = Obstacle&#40;&#40;w_screen/3, randposy+30, 200, 20&#41;,&#40;0, 0&#41;, self.screen&#41;<br />      <br />      self.running = True<br />      <br />      self.targets = pygame.sprite.Group&#40;&#41;<br />      self.sprites = pygame.sprite.Group&#40;&#41;<br /><br />      self.sprites_obstacles = pygame.sprite.Group&#40;&#41;<br />      <br />      self.sprites_obstacles.add&#40;self.target, self.obst1, self.obstL, self.obstR,self.obstU,self.obstD&#41;<br />      <br />      <br />      self.permit_space = True<br />   <br />   def on_event&#40;self&#41;:<br />      evento=pygame.event.get&#40;&#41;<br />      <br />      keylist=pygame.key.get_pressed&#40;&#41;<br />      <br />      if keylist&#91;pygame.K_ESCAPE&#93;:<br />         self.running = False<br />      elif keylist&#91;pygame.K_RIGHT&#93;:<br />         self.thecannon.dvx=5<br />      elif keylist&#91;pygame.K_LEFT&#93;:<br />         self.thecannon.dvx=-5   <br />      elif keylist&#91;pygame.K_a&#93;:<br />         evento_keyspace=pygame.event.wait&#40;&#41;<br />         print &quot;hola&quot;<br />         print self.thecannon.cannonmouth.x<br />         self.thecannon.cannonmouth.x=self.thecannon.x            <br />         print self.thecannon.cannonmouth.x<br />      elif  keylist&#91;pygame.K_SPACE&#93;:<br />         if self.permit_space:<br />            evento_keyspace=pygame.event.wait&#40;&#41;<br />            self.thebullet=Miactor&#40;&#40;self.thecannon.rect.right, self.thecannon.rect.top-5,5,5&#41;\<br />            , &#40;2,-2&#41;, self.screen&#41;<br />            self.sprites.add&#40;self.thebullet&#41;<br />            self.permit_space = False<br />         else :<br />            pass<br />   <br />   def on_running&#40;self&#41;:<br />      while self.running:<br />   <br />         self.thecannon.update&#40;&#41;<br />         self.sprites_obstacles.update&#40;&#41;<br />         self.on_event&#40;&#41;<br />         #print len&#40;self.sprites&#41;<br />         if len&#40;self.sprites&#41; == 0:<br />            pass<br />         else: <br />            self.sprites_obstacles.update&#40;&#41;<br />            self.sprites.update&#40;&#41;<br />            self.on_collision&#40;&#41;<br />            <br />         <br />         self.clock.tick&#40;100&#41;<br />         puntos_image = self.fuente.render&#40;'FPS '+str&#40;self.clock.get_fps&#40;&#41;&#41;, 1, &#40;255,255,255&#41;&#41;<br />         <br />         <br />         <br />         self.screen.blit&#40;puntos_image, &#40;self.screen.get_width&#40;&#41;*3/5, self.screen.get_height&#40;&#41;*4/5&#41;&#41;<br />         pygame.display.update&#40;&#41;<br />         self.screen.fill&#40;&#40;0,0,0&#41;&#41;<br />   <br />   def on_collision&#40;self&#41;:<br />         <br />      sprite_collided=pygame.sprite.spritecollideany&#40;self.thebullet, self.sprites_obstacles&#41;<br />      <br />      <br />      <br />      if sprite_collided:<br />         <br />         actorposx, actorposy = self.thebullet.rect.center<br />         actorposx_next =actorposx+self.thebullet.vx<br />         actorposy_next= actorposy+self.thebullet.vy<br />         <br />         if sprite_collided==self.target:<br />            print &quot;punto!&quot;<br />            self.running=False<br />         elif sprite_collided.rect.collidepoint&#40;actorposx_next, actorposy&#41;:<br />            self.thebullet.vx= -self.thebullet.vx<br />         elif sprite_collided.rect.collidepoint&#40;actorposx,actorposy_next&#41;:<br />            self.thebullet.vy=-self.thebullet.vy<br />            <br />      else:<br />         pass<br />         <br />         <br /><br />class Miactor&#40;pygame.sprite.Sprite&#41;:<br /><br />   def __init__&#40;self, &#40;x, y, w, h&#41;, &#40;vx, vy&#41;, surface&#41;:<br />      pygame.sprite.Sprite.__init__&#40;self&#41;<br />      self.image=surface<br />      self.rect = surface.get_rect&#40;&#41;<br />      self.x = x<br />      self.y = y<br />      self.w = w<br />      self.h = h<br />      self.vx = vx<br />      self.vy = vy<br />      self.dvx = 0<br />      self.dvy = 0<br />      self.color = 255, 255, 0<br />      #self.vmax=&#40;5,3&#41;<br />      <br />   def draw&#40;self&#41;:<br />      &quot;&quot;&quot;Draw the actor&quot;&quot;&quot;<br />      mydib=pygame.draw.rect&#40;self.image, self.color, &#40; self.x, self.y, self.w, self.h &#41;&#41;<br />      self.rect=mydib <br />   <br />   def move&#40;self&#41;:<br />      &quot;&quot;&quot; Move the actor &quot;&quot;&quot;<br />      <br />      self.x += self.vx +self.dvx<br />      self.dvx  = 0<br />      self.y += self.vy + self.dvy<br />      self.dvy = 0<br />   <br />   def update&#40;self&#41;:<br />      self.move&#40;&#41;<br />      self.draw&#40;&#41;<br />      <br /><br />class Cannon&#40;Miactor&#41;:<br />   def __init__&#40;self, &#40;x, y, w, h&#41;, &#40;vx, vy&#41;, surface&#41;:<br />      Miactor.__init__&#40;self, &#40;x, y, w, h&#41;, &#40;vx, vy&#41;, surface&#41;<br />      self.color = 255, 0, 0<br />      self.vmax=&#40;10,3&#41;<br />      self.rect = pygame.Rect&#40;x,y,w,h&#41;<br />      self.cannonmouth=Miactor&#40;&#40;x+w,y-h/2,w/2,h/2 &#41;,&#40;0, 0&#41;, surface&#41;<br /><br />   def move&#40;self&#41;:<br />      &quot;&quot;&quot; Move the actor &quot;&quot;&quot;<br />      self.cannonmouth.x=self.x+self.w<br />      self.x += self.vx+self.dvx <br />      <br />      self.dvx=0<br />      self.y += self.vy+self.dvy<br />      self.dvy=0<br />      <br />   <br />   def update&#40;self&#41;:<br />      self.draw&#40;&#41;<br />      self.move&#40;&#41;<br />      <br />      <br />      self.cannonmouth.update&#40;&#41;<br />class Obstacle&#40;Miactor&#41;:<br />   def __init__&#40;self, &#40;x, y, w, h&#41;, &#40;vx, vy&#41;, surface&#41;:<br />      Miactor.__init__&#40;self, &#40;x, y, w, h&#41;, &#40;vx, vy&#41;, surface&#41;<br />      self.color = 0, 0, 255<br />      self.vmax=&#40;0,0&#41;<br />      self.rect = pygame.Rect&#40;x,y,w,h&#41;<br />      <br /><br /><br />&quot;&quot;&quot; The GAME &quot;&quot;&quot;<br /><br />el_mundo=World&#40;&#41;<br />el_mundo.on_running&#40;&#41;<br />   <br /></code></dd></dl><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2184">estudiante</a> — Dom Ene 31, 2010 4:53 pm</p><hr />
]]></content>
</entry>
</feed>