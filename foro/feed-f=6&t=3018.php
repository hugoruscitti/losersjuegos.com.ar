<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es">
<link rel="self" type="application/atom+xml" href="http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=3018" />

<title>LosersJuegos</title>
<subtitle>Desarrollando videojuegos libres</subtitle>
<link href="http://losersjuegos.com.ar/foro/index.php" />
<updated>2013-04-29T10:35:24+00:00</updated>

<author><name><![CDATA[LosersJuegos]]></name></author>
<id>http://losersjuegos.com.ar/foro/feed.php?f=6&amp;t=3018</id>
<entry>
<author><name><![CDATA[dehm]]></name></author>
<updated>2013-04-29T10:35:24+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9222#p9222</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9222#p9222"/>
<title type="html"><![CDATA[Re: Manejar transparencias en elementos SDL_Rect]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9222#p9222"><![CDATA[
Gracias Barajas:<br /><br />Me has ayudado mucho más de lo que me merecía. <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />La explicación de 10.<br /><br />Saludos y gracias de nuevo!!<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3110">dehm</a> — Lun Abr 29, 2013 10:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Barajas]]></name></author>
<updated>2013-04-29T03:12:28+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9221#p9221</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9221#p9221"/>
<title type="html"><![CDATA[Re: Manejar transparencias en elementos SDL_Rect]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9221#p9221"><![CDATA[
<blockquote><div><cite>dehm escribió:</cite><br />La idea es que cada cuadrito sea un SDL_Rect, y añadir en los bordes unas líneas a modo de chaflán (me explico como un libro cerrado). Esas líneas deberían ser de color blanco o negro, según la zona.....y semitransparentes, para que dejen ver el color de la pieza.<br /><br />Pero no lo consigo.<br />Hago esto:<br /><br />Código: Seleccionar todo<br />    SDL_FillRect(fondo,&amp;chaflan[i],SDL_MapRGBA(fondo-&gt;format,255,255,255,X));<br /><br />(con X el valor de la transparencia), pero no me hace nada.<br /><br />Por otro lado, la otra función que se encarga de estas cosas (SDL_SetAlpha) es para imágenes de ficheros, y no es lo que busco.<br /></div></blockquote><br /><br />El problema con SDL_FillRect es que ignora el canal alfa del color. Sí quieres hacerlo trasparente, tendrás que hacerlo con blit. Creas una superficie que permita el color alpha, después, llenarla del color, ponerle un valor alfa, y después dibujarla.<br /><br />Aquí te dejo un código que hace eso, recuerda que si usas windows, modificar los includes y el main. Espero te sea útil. <br /><br /><pre class="prettyprint">using namespace std;<br />#include &lt;SDL/SDL.h&gt;<br />#include &lt;stdio.h&gt;<br />#include &lt;iostream&gt;<br />//constantes utiles...<br />const int PROFUNDIDAD = 32;<br />SDL_Surface * PANTALLA;<br />//algunos colores predefinidos...<br />const SDL_Color BLANCO = {255,255,255};<br />const SDL_Color VERDE = {0,255,0};<br />const SDL_Color AZUL = {0,0,255};<br />const SDL_Color ROJO = {255,0,0};<br />const SDL_Color AMARILLO = {255, 255, 0};<br />const SDL_Color GRIS = {&#40;3*255&#41;/4,&#40;3*255&#41;/4,&#40;3*255&#41;/4};<br />const SDL_Color GRIS2 = {&#40;2*255&#41;/4,&#40;2*255&#41;/4,&#40;2*255&#41;/4};<br />const SDL_Color GRIS3 = {255/4,255/4,255/4};<br />const SDL_Color NEGRO = {0,0,0};<br />const SDL_Color MAGENTA = {255, 0, 255};<br />//algunas cosas para frame rate<br />Uint32 waittime = 1000/60;<br />Uint32 framestarttime = 0;<br />Sint32 delaytime;<br />float SpeedFactor = 1;<br />//defino las variables para la entrada...<br />Uint8 *keys;<br />SDL_Event event;<br /><br /><br /><br />//los prototipos de funciones que utilizaremos en este ejemplo...<br />SDL_Surface * Crea_superficie&#40;int, int&#41;;<br />//llenar una surface de un color un color espesifico... <br />void fill&#40;SDL_Surface *, SDL_Color&#41;;<br />void fill&#40;SDL_Surface *, SDL_Color, SDL_Rect&#41;;<br />//dibujar una superficie en pantalla<br />void dibuja_surface&#40;SDL_Surface *, SDL_Surface *, int, int&#41;;<br />void dibuja_surface&#40;SDL_Surface *, SDL_Surface *, SDL_Rect, int, int&#41;;<br /><br />int main&#40;void&#41;{<br />    if &#40;SDL_Init&#40;SDL_INIT_VIDEO&#41; &lt; 0&#41; {<br />        cout &lt;&lt; &quot;No se pudo inicializar SDL&quot; &lt;&lt; endl;<br />        exit&#40;1&#41;;<br />        }<br />    int H = 200; //alto<br />    int W = 220; //ancho<br />    cout &lt;&lt; &quot;SDL iniciado &quot; &lt;&lt; endl;<br />    // Activamos modo de video<br />    PANTALLA = SDL_SetVideoMode&#40;W,H,PROFUNDIDAD,SDL_DOUBLEBUF|SDL_HWSURFACE|SDL_ANYFORMAT&#41;;<br />    if &#40;PANTALLA == NULL&#41; {<br />        cout &lt;&lt; &quot;No se pudo crear la pantalla&quot; &lt;&lt; endl;<br />        exit&#40;1&#41;;<br />        }<br />    SDL_WM_SetCaption&#40;&quot;Ejemplo&quot;,NULL&#41;;<br />    //cremos las imagenes que usaremos...<br />    //ancho, alto<br />    SDL_Surface * image1 = Crea_superficie&#40;100,100&#41;;<br />    SDL_Surface * image2 = Crea_superficie&#40;100,100&#41;;<br />    SDL_Surface * image3 = Crea_superficie&#40;100,100&#41;;<br />    //las llenamos de un color que nos interese...<br />    fill&#40;image1,ROJO&#41;;<br />    fill&#40;image2,VERDE&#41;;<br />    fill&#40;image3,AZUL&#41;;<br />    //el valor alfa...<br />    <br />    int alpha = 120;<br />    int aumento_alpha = 1;<br />    <br />    bool done = false;<br />    //_______________________________________<br />    while&#40;!done&#41;{<br />        //lo siguiente mantiene el framerate constante...<br />        delaytime = waittime - &#40;SDL_GetTicks&#40;&#41; - framestarttime&#41;;<br />        if&#40;delaytime &gt; 0&#41;{<br />            SDL_Delay&#40;&#40;Uint32&#41;delaytime&#41;;}<br />        framestarttime = SDL_GetTicks&#40;&#41;;<br />        //revisamos los eventos de entrada al sistema....<br />        keys=SDL_GetKeyState&#40;NULL&#41;;<br />        while &#40; SDL_PollEvent&#40;&amp;event&#41; &#41; {<br />            if &#40; &#40;event.type == SDL_KEYDOWN &amp;&amp; keys[SDLK_ESCAPE]&#41; || &#40;event.type == SDL_QUIT&#41; &#41;{<br />                done = 1;<br />                }<br />            }<br />        <br />        //aumentamos el color alpha...<br />        if&#40;alpha&lt;=0 || alpha&gt;=255&#41;{<br />            //si se pasa del los valores del alpha<br />            //hacemos que cambie la direccion...<br />            aumento_alpha = -aumento_alpha;<br />            }<br />        alpha+=aumento_alpha;<br />        <br />        //les colocamos el valor de la trasparencia, o alfa<br />        SDL_SetAlpha&#40;image1,SDL_SRCALPHA,alpha&#41;;<br />        SDL_SetAlpha&#40;image2,SDL_SRCALPHA,alpha&#41;;<br />        SDL_SetAlpha&#40;image3,SDL_SRCALPHA,alpha&#41;;<br />        <br />        //pintamos el fondo...<br />        fill&#40;PANTALLA, BLANCO&#41;;<br />        //dibujamos las imagenes...<br />        dibuja_surface&#40;PANTALLA,image1,0,0&#41;;<br />        dibuja_surface&#40;PANTALLA,image2,75,50&#41;;<br />        dibuja_surface&#40;PANTALLA,image3,120,0&#41;;<br />        SDL_Flip&#40;PANTALLA&#41;;<br />        }<br />    //liberamos las imagenes...<br />    SDL_FreeSurface&#40;image1&#41;;<br />    SDL_FreeSurface&#40;image2&#41;;<br />    SDL_FreeSurface&#40;image3&#41;;<br />    SDL_Quit&#40;&#41;;<br />    <br />    return 1;<br />    }<br /><br />//el codigo de las funciones..<br /><br />//--------------------------------------------<br /><br />SDL_Surface * Crea_superficie&#40;int w, int h&#41;{<br />    SDL_Surface * temp;<br />     //cout &lt;&lt; &quot;&gt;&gt; La imagen se esta creando...&quot; &lt;&lt; endl;<br />     //usamos a pantalla como imagen de referencia...<br />     temp = SDL_CreateRGBSurface&#40;PANTALLA-&gt;flags, w, h, PANTALLA-&gt;format-&gt;BitsPerPixel, PANTALLA-&gt;format-&gt;Rmask, PANTALLA-&gt;format-&gt;Gmask, PANTALLA-&gt;format-&gt;Bmask, PANTALLA-&gt;format-&gt;Amask&#41;;<br />     if&#40;temp == NULL&#41; {<br />         cout &lt;&lt; &quot;&gt;&gt; No se pudo crear la imagen CreateRGBSurface FALLO: &quot;;<br />         cout &lt;&lt; &quot;... **\n\tInfo ERROR SDL:\t&quot;&lt;&lt; SDL_GetError&#40;&#41; &lt;&lt; &quot;\n... **&quot; &lt;&lt;endl;<br />         exit&#40;1&#41;;<br />         }<br />     return temp;<br />     };<br /><br />//-----------------------------------------------------------<br /><br />void fill&#40;SDL_Surface * surf, SDL_Color color&#41; {<br />    //cout &lt;&lt; &quot;&gt;&gt; La imagen se llena de color &quot; &lt;&lt; surf-&gt;w &lt;&lt; endl;<br />    SDL_Rect Rect = {0,0,surf-&gt;w,surf-&gt;h};<br />    SDL_FillRect&#40;surf, &amp;Rect, SDL_MapRGBA&#40;surf-&gt;format,color.r,color.g,color.b,255&#41; &#41;;<br />    };<br />void fill&#40;SDL_Surface * surf, SDL_Color color, SDL_Rect rect&#41;{<br />    SDL_FillRect&#40;surf, &amp;rect, SDL_MapRGBA&#40;surf-&gt;format,color.r,color.g,color.b,255&#41; &#41;;<br />    };<br />    <br />//-----------------------------------------------------------<br /><br />void dibuja_surface&#40;SDL_Surface * pantalla, SDL_Surface * image, int x, int y&#41;{<br />    if&#40;image != NULL&#41;{<br />    SDL_Rect __Rect;<br />    SDL_Rect __Pos;<br />    __Rect.x = 0;<br />    __Rect.y = 0;<br />    __Rect.w = image-&gt;w;<br />    __Rect.h = image-&gt;h;<br />    <br />    __Pos.x = x;<br />    __Pos.y = y;<br />    __Pos.w = image-&gt;w;<br />    __Pos.h = image-&gt;h;<br />    <br />    SDL_BlitSurface&#40;image, &amp;__Rect, pantalla, &amp;__Pos&#41;;<br />        }<br />    }<br />void dibuja_surface&#40;SDL_Surface * pantalla, SDL_Surface * image, SDL_Rect __Rect, int x, int y&#41;{<br />    if&#40;image != NULL&#41;{<br />    SDL_Rect __Pos;<br />    <br />    __Pos.x = x;<br />    __Pos.y = y;<br />    __Pos.w = image-&gt;w;<br />    __Pos.h = image-&gt;h;<br />    <br />    SDL_BlitSurface&#40;image, &amp;__Rect, pantalla, &amp;__Pos&#41;;<br />        }<br />    }</pre><p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=2345">Barajas</a> — Lun Abr 29, 2013 3:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dehm]]></name></author>
<updated>2013-04-28T00:15:00+00:00</updated>
<id>http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9218#p9218</id>
<link href="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9218#p9218"/>
<title type="html"><![CDATA[Manejar transparencias en elementos SDL_Rect]]></title>

<content type="html" xml:base="http://losersjuegos.com.ar/foro/viewtopic.php?t=3018&amp;p=9218#p9218"><![CDATA[
Hola:<br /><br />Desde hace una semana que os he descubierto, os he estado leyendo, y ha llegado la hora de escribir por fin para plantearos una duda.<br /><br />El caso es que estaba haciendo un juego (un tetris, original que es uno) y quería implementar algo de transparencia para el diseño de cada pieza.<br />La idea es que cada cuadrito sea un SDL_Rect,  y añadir en los bordes unas líneas a modo de chaflán (me explico como un libro cerrado). Esas líneas deberían ser de color blanco o negro, según la zona.....y semitransparentes, para que dejen ver el color de la pieza.<br /><br />Pero no lo consigo. <br />Hago esto:<br /><dl class="codebox"><dt>Code: </dt><dd><code>SDL_FillRect(fondo,&amp;chaflan&#91;i&#93;,SDL_MapRGBA(fondo-&gt;format,255,255,255,X));</code></dd></dl> (con X el valor de la transparencia), pero no me hace nada.<br /><br />Por otro lado, la otra función que se encarga de estas cosas (SDL_SetAlpha) es para imágenes de ficheros, y no es lo que busco.<br /><br />Ya se me han acabado las pocas ideas que tengo <img src="http://losersjuegos.com.ar/foro/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Creo que lo he puesto en el subforo adecuado, pero si no es así, ruego lo mováis a donde corresponda.<p>Estadísticas: Publicado por <a href="http://losersjuegos.com.ar/foro/memberlist.php?mode=viewprofile&amp;u=3110">dehm</a> — Dom Abr 28, 2013 12:15 am</p><hr />
]]></content>
</entry>
</feed>